[{"path":"https://edyp-lab.github.io/DaparToolshed/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Samuel Wieczorek. Author, maintainer. Thomas Burger. Author. Enora Fremy. Contributor. Manon Gaudin. Contributor.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Samuel Wieczorek et al. DAPAR & ProStaR: software perform statistical analyses             quantitative discovery proteomics Bioinformatics, 2016.","code":"@Article{,   title = {DAPAR & ProStaR: software to perform statistical analyses                 in quantitative discovery proteomics.},   author = {Samuel Wieczorek and Florence Combes and Cosmin Lazar and Quentin Giai-Gianetto and Laurent Gatto and Alexia Dorffer and Anne-Marie Hesse and Yohann Coute and Myriam Ferro and Christophe Bruley and Thomas Burger},   journal = {Bioinformatics},   year = {2016}, }"},{"path":"https://edyp-lab.github.io/DaparToolshed/index.html","id":"dapar-toolshed","dir":"","previous_headings":"","what":"Dapar Toolshed","title":"Tools for the Differential Analysis of Proteins Abundance with R","text":"DaparToolshed package provides functions visualization statistical analysis proteomic data.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Add_Aggregated_rowData.html","id":null,"dir":"Reference","previous_headings":"","what":"Add aggregated rowData — Add_Aggregated_rowData","title":"Add aggregated rowData — Add_Aggregated_rowData","text":"Aggregation rowData QFeatures assay.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Add_Aggregated_rowData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add aggregated rowData — Add_Aggregated_rowData","text":"","code":"Add_Aggregated_rowData(obj, col, i.agg)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Add_Aggregated_rowData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add aggregated rowData — Add_Aggregated_rowData","text":"obj instance class QFeatures. col character() column names rowdata aggregated. .agg numeric(1) indicating index assay add aggregated rowData, using previous assay's rowData.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Add_Aggregated_rowData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add aggregated rowData — Add_Aggregated_rowData","text":"instance QFeatures class aggregated rowData specified assay.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Add_Aggregated_rowData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add aggregated rowData — Add_Aggregated_rowData","text":"Samuel Wieczorek, Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Add_Item_to_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — Add_Item_to_Dataset","title":"xxx — Add_Item_to_Dataset","text":"Adds one items dataset. function specific type dataset.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Add_Item_to_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — Add_Item_to_Dataset","text":"","code":"Add_Item_to_Dataset(dataset, name)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Add_Item_to_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — Add_Item_to_Dataset","text":"dataset xxx name xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Add_Item_to_Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — Add_Item_to_Dataset","text":"dataset minus items","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildAdjacencyMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Function matrix of appartenance group — BuildAdjacencyMatrix","title":"Function matrix of appartenance group — BuildAdjacencyMatrix","text":"Method create binary matrix proteins columns peptides lines MSnSet object (peptides)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildAdjacencyMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function matrix of appartenance group — BuildAdjacencyMatrix","text":"","code":"BuildAdjacencyMatrix(obj.pep)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildAdjacencyMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function matrix of appartenance group — BuildAdjacencyMatrix","text":"obj.pep object (peptides) class MSnSet.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildAdjacencyMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function matrix of appartenance group — BuildAdjacencyMatrix","text":"binary matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildAdjacencyMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function matrix of appartenance group — BuildAdjacencyMatrix","text":"Florence Combes, Samuel Wieczorek, Alexia Dorffer","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildAdjacencyMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function matrix of appartenance group — BuildAdjacencyMatrix","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") protId <- \"Protein_group_IDs\" obj <- Exp1_R25_pept[[1]] obj.pep <- obj[seq_len(10)] BuildAdjacencyMatrix(obj.pep) #> 10 x 9 sparse Matrix of class \"dgCMatrix\" #>                           1210 1987 2232 254 364 379 534 599 858 #> AAAAQDEITGDGTTTVVCIVGEIIR    1    .    .   .   .   .   .   .   . #> AAADAISDIEIK                 .    .    .   1   .   .   .   .   . #> AAADAISDIEIKDSK              .    .    .   1   .   .   .   .   . #> AAAEEQAKR                    .    .    .   .   .   .   1   .   . #> AAAEGVANIHIDEATGEMVSK        .    .    .   .   1   .   .   .   . #> AAAEYEKGEYETAISTINDAVEQGR    .    .    .   .   .   1   .   .   . #> AAAHSSIKEYDQAVK              .    .    1   .   .   .   .   .   . #> AAAPGIQIVAGEGFQSPIEDR        .    1    .   .   .   .   .   .   . #> AAAPTVVFIDEIDSIAK            .    .    .   .   .   .   .   1   . #> AACIVQNGIATWFPIAVTK          .    .    .   .   .   .   .   .   1"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildColumnToProteinDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"creates a column for the protein dataset after agregation by using the previous peptide dataset. — BuildColumnToProteinDataset","title":"creates a column for the protein dataset after agregation by using the previous peptide dataset. — BuildColumnToProteinDataset","text":"function creates column protein dataset aggregation using previous peptide dataset.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildColumnToProteinDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates a column for the protein dataset after agregation by using the previous peptide dataset. — BuildColumnToProteinDataset","text":"","code":"BuildColumnToProteinDataset(peptideData, matAdj, columnName, proteinNames)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildColumnToProteinDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates a column for the protein dataset after agregation by using the previous peptide dataset. — BuildColumnToProteinDataset","text":"peptideData data.frame meta data peptides. rowData SummarizedExperiment object. matAdj adjacency matrix used agregate peptides data. columnName name(s) column Biobase::rowData(peptides_MSnset) user wants keep new protein data.frame. proteinNames names protein new dataset (.e. rownames)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildColumnToProteinDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"creates a column for the protein dataset after agregation by using the previous peptide dataset. — BuildColumnToProteinDataset","text":"vector","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildColumnToProteinDataset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"creates a column for the protein dataset after agregation by using the previous peptide dataset. — BuildColumnToProteinDataset","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildColumnToProteinDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"creates a column for the protein dataset after agregation by using the previous peptide dataset. — BuildColumnToProteinDataset","text":"","code":"library(QFeatures) #> Loading required package: MultiAssayExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #> Loading required package: generics #>  #> Attaching package: ‘generics’ #> The following objects are masked from ‘package:base’: #>  #>     as.difftime, as.factor, as.ordered, intersect, is.element, setdiff, #>     setequal, union #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, is.unsorted, lapply, #>     mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, #>     rank, rbind, rownames, sapply, saveRDS, table, tapply, unique, #>     unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians #>  #> Attaching package: ‘QFeatures’ #> The following object is masked from ‘package:base’: #>  #>     sweep  data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[1:10] protID <- parentProtId(obj[[2]]) X <- QFeatures::adjacencyMatrix(obj[[2]])  X.split <- DaparToolshed::splitAdjacencyMat(X) X.shared <- X.split$Xshared X.unique <- X.split$Xspec   #adjacencyMatrix(obj[[2]]) <- X.unique #rowdata.pep <- rowData(obj[[2]])   # obj <- aggregateFeatures4Prostar( #   object = obj, #   i = length(obj), #   name = 'aggregated', #   fcol = 'adjacencyMatrix', #   fun = 'colSumsMat') #  #  # .names <- \"Sequence\" #  # proteinNames <- rownames(obj[[length(obj)]]) # data <- rowData(obj[[length(obj)-1]]) #  # new.col <- BuildColumnToProteinDataset( #   peptideData = rowData(obj[[length(obj)-1]]),  #   matAdj = adjacencyMatrix(obj[[2]]),  #   columnName = \"Sequence\", #   proteinNames = rownames(obj[[length(obj)]]))"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildMetacell.html","id":null,"dir":"Reference","previous_headings":"","what":"metacell function which xxx — BuildMetacell","title":"metacell function which xxx — BuildMetacell","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildMetacell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metacell function which xxx — BuildMetacell","text":"","code":"BuildMetacell(from = NULL, level, qdata = NULL, conds = NULL, df = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildMetacell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metacell function which xxx — BuildMetacell","text":"xxx level xxx qdata matrix quantitative data conds xxx df data.frame contains type identification entities. must dimensions qData.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildMetacell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metacell function which xxx — BuildMetacell","text":"xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildMetacell.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"metacell function which xxx — BuildMetacell","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/BuildMetacell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"metacell function which xxx — BuildMetacell","text":"","code":"file <- system.file(\"extdata\", \"Exp1_R25_pept.txt\", package=\"DaparToolshedData\") data <- read.table(file, header=TRUE, sep=\"\\t\",stringsAsFactors = FALSE) metadataFile <- system.file(\"extdata\", \"samples_Exp1_R25.txt\", package=\"DaparToolshedData\") metadata <- read.table(metadataFile, header=TRUE, sep=\" \", as.is=TRUE, stringsAsFactors = FALSE) conds <- metadata$Condition qdata <- data[,56:61] df <- data[ , 43:48] df <- BuildMetacell('maxquant', 'peptide', qdata, conds, df) df <- BuildMetacell('proline', 'peptide', qdata, conds, df)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Children.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of all chidren of a node — Children","title":"Names of all chidren of a node — Children","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of all chidren of a node — Children","text":"","code":"Children(level, parent = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of all chidren of a node — Children","text":"level xxx parent xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Names of all chidren of a node — Children","text":"","code":"Children('protein', 'Missing') #> [1] \"Missing POV\" \"Missing MEC\" Children('protein', 'Missing POV') #> character(0) Children('protein', c('Missing POV', 'Missing MEC')) #> character(0) Children('protein', c('Missing', 'Missing POV', 'Missing MEC')) #> [1] \"Missing POV\" \"Missing MEC\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CleanRowData.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised resetZoomButton of highcharts plots — CleanRowData","title":"Customised resetZoomButton of highcharts plots — CleanRowData","text":"Customised resetZoomButton highcharts plots","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CleanRowData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised resetZoomButton of highcharts plots — CleanRowData","text":"","code":"CleanRowData(obj, i)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CleanRowData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised resetZoomButton of highcharts plots — CleanRowData","text":"obj xxx xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CleanRowData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Customised resetZoomButton of highcharts plots — CleanRowData","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CleanRowData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customised resetZoomButton of highcharts plots — CleanRowData","text":"","code":"library(\"highcharter\") hc <- highchart() hc_chart(hc, type = \"line\")  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"type\":\"line\"},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}}},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}hc_add_series(hc, data = c(29, 71, 40))  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}},\"series\":[{\"data\":[29,71,40]}]},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}my_hc_ExportMenu(hc, filename = \"foo\")  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":true,\"filename\":\"foo\",\"buttons\":{\"contextButton\":{\"menuItems\":[\"downloadPNG\",\"downloadSVG\",\"downloadPDF\"]}}},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}}},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ConvertListToHtml.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list to unnumbered HTML list — ConvertListToHtml","title":"Convert a list to unnumbered HTML list — ConvertListToHtml","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ConvertListToHtml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list to unnumbered HTML list — ConvertListToHtml","text":"","code":"ConvertListToHtml(ll)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ConvertListToHtml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list to unnumbered HTML list — ConvertListToHtml","text":"ll list() character()","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ConvertListToHtml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list to unnumbered HTML list — ConvertListToHtml","text":"","code":"ConvertListToHtml(list('foo1', 'foo2', 'foo3')) #> [1] \"<ul><li>foo1<\/li> <li>foo2<\/li> <li>foo3<\/li><\/ul>\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CountPep.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of peptides used to aggregate proteins — CountPep","title":"Compute the number of peptides used to aggregate proteins — CountPep","text":"function computes number peptides used aggregate proteins.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CountPep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of peptides used to aggregate proteins — CountPep","text":"","code":"CountPep(X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CountPep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of peptides used to aggregate proteins — CountPep","text":"X \"valued\" adjacency matrix lines columns correspond respectively peptides proteins.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CountPep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the number of peptides used to aggregate proteins — CountPep","text":"vector boolean adjacency matrix NA values exist intensity matrix.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CountPep.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the number of peptides used to aggregate proteins — CountPep","text":"Alexia Dorffer","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/CountPep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the number of peptides used to aggregate proteins — CountPep","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") obj.pep <- Exp1_R25_pept[seq_len(10)] last.obj <- obj.pep[[length(obj.pep)]] X <- BuildAdjacencyMatrix(last.obj) CountPep(X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate an assay's quantitative features — DaparToolshed-aggregate","title":"Aggregate an assay's quantitative features — DaparToolshed-aggregate","text":"function aggregates quantitative features assay, applying summarization function (fun) sets features. fcol variable name points rowData column defines group features aggregate. variable adjacency matrix. function uses QFeatures::aggregateFeatures() aggregate quantitative data. list agregation methods can obtained function aggregateMethods(). function compiles methods packages DaparToolshed QFeatures. xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate an assay's quantitative features — DaparToolshed-aggregate","text":"","code":"aggregateFeatures4Prostar(object, ...)  # S4 method for class 'QFeatures' aggregateFeatures4Prostar(   object,   i,   fcol,   name = \"newAssay\",   fun = MsCoreUtils::robustSummary,   shared = TRUE,   n = NULL,   ... )  # S4 method for class 'SummarizedExperiment' aggregateFeatures4Prostar(   object,   fcol,   fun = MsCoreUtils::robustSummary,   conds,   shared = TRUE,   n = NULL,   ... )  aggQmetacell(qMeta, X, level, conds)  aggregateMethods()"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate an assay's quantitative features — DaparToolshed-aggregate","text":"object instance class QFeatures SummarizedExperiment ... Additional parameters passed fun. index name assay features aggregated create new assay. fcol character(1) naming rowdata variable (assay case QFeatures) defining aggregate features assay. variable (possibly sparse) matrix. See details. name character(1) naming new assay. Default newAssay. Note function fail already assay name. fun function used quantitative feature aggregation. See details examples. shared boolean indication shared peptides considered. TRUE, shared peptides n numeric(1) specifying number peptides use protein. NULL, peptides considered. conds character() vector names conditions sample dataset. qMeta object class 'SummarizedExperiment' X xxxx level character(1) type dataset","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate an assay's quantitative features — DaparToolshed-aggregate","text":"QFeatures object additional assay SummarizedExperiment object (subclass thereof). xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate an assay's quantitative features — DaparToolshed-aggregate","text":"function uses QFeatures::aggregateFeatures() aggregate quantitative data.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregate.html","id":"iterative-aggregation-function","dir":"Reference","previous_headings":"","what":"Iterative aggregation function","title":"Aggregate an assay's quantitative features — DaparToolshed-aggregate","text":"xxxxxx xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregate.html","id":"quantitative-metadata-aggregation","dir":"Reference","previous_headings":"","what":"Quantitative metadata aggregation","title":"Aggregate an assay's quantitative features — DaparToolshed-aggregate","text":"function aggregate quantitative metadata aggQmetadat().","code":""},{"path":[]},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate an assay's quantitative features — DaparToolshed-aggregate","text":"","code":"## --------------------------------------- ## An example QFeatures with PSM-level data ## --------------------------------------- if (FALSE) { # \\dontrun{ library(SummarizedExperiment) data(ft, package='DaparToolshed') ft  ## Aggregate peptides into proteins ## using the adjacency matrix feat1 <- aggregateFeatures4Prostar(object = ft, i = 1, name = 'aggregated', fcol = 'adjacencyMatrix', fun = 'colSumsMat') feat1  assay(feat1[[1]]) assay(feat1[[2]]) aggcounts(feat1[[2]]) assay(feat1[[3]]) aggcounts(feat1[[3]]) rowData(feat1[[2]]) } # } data(ft, package='DaparToolshed') qMeta <- qMetacell(ft, 1) X <- QFeatures::adjacencyMatrix(ft[[1]]) level <- typeDataset(ft[[1]]) conds <- SummarizedExperiment::colData(ft)$Condition aggQmeta <- aggQmetacell(qMeta, X, level, conds)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregateRedistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate an assay's quantitative features with shared peptide redistribution — DaparToolshed-aggregateRedistribution","title":"Aggregate an assay's quantitative features with shared peptide redistribution — DaparToolshed-aggregateRedistribution","text":"function aggregates quantitative features assay, applying summarization function (fun) sets features. fcol variable name points rowData column defines group features aggregate. variable adjacency matrix. function uses inner.aggregate.iter() aggregate quantitative data. list agregation methods can obtained function aggregateMethods(). function compiles methods packages DaparToolshed QFeatures.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregateRedistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate an assay's quantitative features with shared peptide redistribution — DaparToolshed-aggregateRedistribution","text":"","code":"aggregateRedistribution(object, ...)  # S4 method for class 'QFeatures' aggregateRedistribution(   object,   i,   name = \"newAssay\",   fcol,   init.method = \"Mean\",   method = \"Mean\",   ponderation = \"Global\",   n = NULL,   uniqueiter = FALSE,   max_iter = 500 )  # S4 method for class 'SummarizedExperiment' aggregateRedistribution(   object,   fcol,   init.method = \"Mean\",   method = \"Mean\",   ponderation = \"Global\",   n = NULL,   uniqueiter = FALSE,   conds,   max_iter = 500 )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregateRedistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate an assay's quantitative features with shared peptide redistribution — DaparToolshed-aggregateRedistribution","text":"object instance class QFeatures SummarizedExperiment ... xxx index name assay features aggregated create new assay. name character(1) naming new assay. Default newAssay. Note function fail already assay name. fcol character(1) naming rowdata variable (assay case QFeatures) defining aggregate features assay. variable (possibly sparse) matrix. See details. init.method function used initializing aggregation. Available functions Sum, Mean, Median, medianPolish robustSummary. See inner.aggregate.iter() details. method function used aggregation. Available functions Sum, Mean, Median medianPolish. See inner.aggregate.iter() details. ponderation character(1) defining consider create coefficient redistribution shared peptides. Available values Global (default), Condition Sample. n numeric(1) specifying number peptides use protein. NULL, peptides considered. uniqueiter xxx max_iter numeric(1) setting maximum number iteration. conds xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregateRedistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate an assay's quantitative features with shared peptide redistribution — DaparToolshed-aggregateRedistribution","text":"QFeatures object additional assay SummarizedExperiment object (subclass thereof).","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregateRedistribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate an assay's quantitative features with shared peptide redistribution — DaparToolshed-aggregateRedistribution","text":"function uses inner.aggregate.iter() aggregate quantitative data.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregateRedistribution.html","id":"iterative-aggregation-function","dir":"Reference","previous_headings":"","what":"Iterative aggregation function","title":"Aggregate an assay's quantitative features with shared peptide redistribution — DaparToolshed-aggregateRedistribution","text":"xxxxxx xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregateRedistribution.html","id":"quantitative-metadata-aggregation","dir":"Reference","previous_headings":"","what":"Quantitative metadata aggregation","title":"Aggregate an assay's quantitative features with shared peptide redistribution — DaparToolshed-aggregateRedistribution","text":"function aggregate quantitative metadata aggQmetadat()","code":""},{"path":[]},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed-aggregateRedistribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate an assay's quantitative features with shared peptide redistribution — DaparToolshed-aggregateRedistribution","text":"","code":"## --------------------------------------- ## An example QFeatures with PSM-level data ## --------------------------------------- if (FALSE) { # \\dontrun{ data(ft, package='DaparToolshed') library(SummarizedExperiment) ft  ## Aggregate peptides into proteins ## using the adjacency matrix feat1 <- aggregateRedistribution(object = ft, i = 1, name = 'aggregated', fcol = 'adjacencyMatrix', init.method = 'Mean', method = 'Mean') feat1  assay(feat1[[1]]) assay(feat1[[2]]) aggcounts(feat1[[2]]) assay(feat1[[3]]) aggcounts(feat1[[3]]) rowData(feat1[[2]]) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed.html","id":null,"dir":"Reference","previous_headings":"","what":"DaparToolshed: A package for computating the notorious bar statistic — DaparToolshed","title":"DaparToolshed: A package for computating the notorious bar statistic — DaparToolshed","text":"DaparToolshed package provides three categories important functions: foo, bar baz.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/DaparToolshed.html","id":"dapartoolshed-functions","dir":"Reference","previous_headings":"","what":"DaparToolshed functions","title":"DaparToolshed: A package for computating the notorious bar statistic — DaparToolshed","text":"foo functions ...","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtendPalette.html","id":null,"dir":"Reference","previous_headings":"","what":"Extends a base-palette of the package RColorBrewer to n colors. — ExtendPalette","title":"Extends a base-palette of the package RColorBrewer to n colors. — ExtendPalette","text":"colors returned palette always order","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtendPalette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extends a base-palette of the package RColorBrewer to n colors. — ExtendPalette","text":"","code":"ExtendPalette(n = 0, base = \"Set1\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtendPalette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extends a base-palette of the package RColorBrewer to n colors. — ExtendPalette","text":"n number desired colors palette base name palette package RColorBrewer extended palette built. Default value 'Set1'.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtendPalette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extends a base-palette of the package RColorBrewer to n colors. — ExtendPalette","text":"vector composed n color code.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtendPalette.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extends a base-palette of the package RColorBrewer to n colors. — ExtendPalette","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtendPalette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extends a base-palette of the package RColorBrewer to n colors. — ExtendPalette","text":"","code":"ExtendPalette(12) #>  [1] \"#E41A1C\" \"#377EB8\" \"#4DAF4A\" \"#984EA3\" \"#FF7F00\" \"#FFFF33\" \"#A65628\" #>  [8] \"#F781BF\" \"#999999\" \"#8D4C6A\" \"#986433\" \"#BE345F\" nPalette <- 10 par(mfrow = c(nPalette, 1)) par(mar = c(0.5, 4.5, 0.5, 0.5)) for (i in seq_len(nPalette)) {     pal <- ExtendPalette(n = i, base = \"Dark2\")     barplot(seq_len(length(pal)), col = pal)     print(pal) } #> [1] \"#1B9E77\" #> [1] \"#1B9E77\" \"#D95F02\" #> [1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" #> [1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" #> [1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" \"#66A61E\" #> [1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" \"#66A61E\" \"#E6AB02\" #> [1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" \"#66A61E\" \"#E6AB02\" \"#A6761D\" #> [1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" \"#66A61E\" \"#E6AB02\" \"#A6761D\" #> [8] \"#666666\" #> [1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" \"#66A61E\" \"#E6AB02\" \"#A6761D\" #> [8] \"#666666\" \"#7A7E3C\"  #>  [1] \"#1B9E77\" \"#D95F02\" \"#7570B3\" \"#E7298A\" \"#66A61E\" \"#E6AB02\" \"#A6761D\" #>  [8] \"#666666\" \"#7A7E3C\" \"#488794\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtractUniquePeptides.html","id":null,"dir":"Reference","previous_headings":"","what":"Test — ExtractUniquePeptides","title":"Test — ExtractUniquePeptides","text":"Test","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtractUniquePeptides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test — ExtractUniquePeptides","text":"","code":"ExtractUniquePeptides(X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtractUniquePeptides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test — ExtractUniquePeptides","text":"X xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ExtractUniquePeptides.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test — ExtractUniquePeptides","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] last.obj <- Exp1_R25_pept[[length(Exp1_R25_pept)]] X <- BuildAdjacencyMatrix(last.obj) ExtractUniquePeptides(X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetColorsForConditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a complete color palette for the conditions given in argument — GetColorsForConditions","title":"Builds a complete color palette for the conditions given in argument — GetColorsForConditions","text":"xxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetColorsForConditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a complete color palette for the conditions given in argument — GetColorsForConditions","text":"","code":"GetColorsForConditions(conds, pal = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetColorsForConditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a complete color palette for the conditions given in argument — GetColorsForConditions","text":"conds extended vector samples conditions pal vector HEX color code form basis palette build complete color vector conditions.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetColorsForConditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a complete color palette for the conditions given in argument — GetColorsForConditions","text":"vector composed HEX color code conditions","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetColorsForConditions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Builds a complete color palette for the conditions given in argument — GetColorsForConditions","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetColorsForConditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds a complete color palette for the conditions given in argument — GetColorsForConditions","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") GetColorsForConditions(design.qf(Exp1_R25_pept)$Condition) #> [1] \"#E41A1C\" \"#E41A1C\" \"#E41A1C\" \"#377EB8\" \"#377EB8\" \"#377EB8\" GetColorsForConditions(design.qf(Exp1_R25_pept)$Condition, ExtendPalette(2)) #> [1] \"#E41A1C\" \"#E41A1C\" \"#E41A1C\" \"#377EB8\" \"#377EB8\" \"#377EB8\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptides.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the detailed number of peptides for each protein — GetDetailedNbPeptides","title":"Computes the detailed number of peptides for each protein — GetDetailedNbPeptides","text":"Method compute detailed number quantified peptides protein","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the detailed number of peptides for each protein — GetDetailedNbPeptides","text":"","code":"GetDetailedNbPeptides(X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the detailed number of peptides for each protein — GetDetailedNbPeptides","text":"X adjacency matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptides.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the detailed number of peptides for each protein — GetDetailedNbPeptides","text":"data.frame","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptides.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the detailed number of peptides for each protein — GetDetailedNbPeptides","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptides.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the detailed number of peptides for each protein — GetDetailedNbPeptides","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") obj.pep <- Exp1_R25_pept[seq_len(10)] last.obj <- obj.pep[[length(obj.pep)]] X <- BuildAdjacencyMatrix(last.obj) n <- GetDetailedNbPeptides(X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptidesUsed.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the detailed number of peptides used for aggregating each protein — GetDetailedNbPeptidesUsed","title":"Computes the detailed number of peptides used for aggregating each protein — GetDetailedNbPeptidesUsed","text":"Method compute detailed number quantified peptides used aggregating protein","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptidesUsed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the detailed number of peptides used for aggregating each protein — GetDetailedNbPeptidesUsed","text":"","code":"GetDetailedNbPeptidesUsed(pepData, X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptidesUsed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the detailed number of peptides used for aggregating each protein — GetDetailedNbPeptidesUsed","text":"pepData data.frame quantitative data X adjacency matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptidesUsed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the detailed number of peptides used for aggregating each protein — GetDetailedNbPeptidesUsed","text":"list two items","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptidesUsed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the detailed number of peptides used for aggregating each protein — GetDetailedNbPeptidesUsed","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetDetailedNbPeptidesUsed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the detailed number of peptides used for aggregating each protein — GetDetailedNbPeptidesUsed","text":"","code":"library(SummarizedExperiment) data(Exp1_R25_pept, package=\"DaparToolshedData\") obj.pep <- Exp1_R25_pept[seq_len(10)] last.obj <- obj.pep[[length(obj.pep)]] X <- BuildAdjacencyMatrix(last.obj) ll.n <- GetDetailedNbPeptidesUsed(assay(last.obj), X) #> Error in t.default(mat$Xshared): argument is not a matrix"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_BasedOnConditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Search lines which respects request on one or more conditions. — GetIndices_BasedOnConditions","title":"Search lines which respects request on one or more conditions. — GetIndices_BasedOnConditions","text":"function looks lines respect request either conditions least one condition.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_BasedOnConditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search lines which respects request on one or more conditions. — GetIndices_BasedOnConditions","text":"","code":"GetIndices_BasedOnConditions(metacell.mask, type, conds, percent, op, th)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_BasedOnConditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search lines which respects request on one or more conditions. — GetIndices_BasedOnConditions","text":"metacell.mask xxx type Available values : 'AllCond' (query valid conditions), 'AtLeatOneCond' (query valid leat one condition. conds xxx percent xxx op String operator use. List operators available function 'SymFilteringOperators()'. th theshold apply","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_BasedOnConditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search lines which respects request on one or more conditions. — GetIndices_BasedOnConditions","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_BasedOnConditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search lines which respects request on one or more conditions. — GetIndices_BasedOnConditions","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] level <- typeDataset(obj[[1]]) pattern <- 'Missing' metacell.mask <- match.metacell(metadata=qMetacell(obj[[1]]), pattern=pattern, level=level) type <- 'AllCond' conds <- design.qf(obj)$Condition op <- '>=' th <- 0.5 percent <- TRUE ind <- GetIndices_BasedOnConditions(metacell.mask, type, conds, percent, op, th)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_FunFiltering.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete the lines in the matrix of intensities and the metadata table given their indices. — GetIndices_FunFiltering","title":"Delete the lines in the matrix of intensities and the metadata table given their indices. — GetIndices_FunFiltering","text":"Delete lines matrix intensities metadata table given indices.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_FunFiltering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete the lines in the matrix of intensities and the metadata table given their indices. — GetIndices_FunFiltering","text":"","code":"GetIndices_FunFiltering(   obj,   conds,   level,   pattern = NULL,   type = NULL,   percent,   op,   th )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_FunFiltering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete the lines in the matrix of intensities and the metadata table given their indices. — GetIndices_FunFiltering","text":"obj object class SummarizedExperiment containing quantitative data. conds xxx level vector integers indices lines delete. pattern string included SummarizedExperiment object log. type xxx percent xxx op xxx th xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_FunFiltering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete the lines in the matrix of intensities and the metadata table given their indices. — GetIndices_FunFiltering","text":"instance class SummarizedExperiment filtered.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_FunFiltering.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delete the lines in the matrix of intensities and the metadata table given their indices. — GetIndices_FunFiltering","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_FunFiltering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete the lines in the matrix of intensities and the metadata table given their indices. — GetIndices_FunFiltering","text":"","code":"if (FALSE) { # interactive() NA }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Search lines which respects query on all their elements. — GetIndices_WholeLine","title":"Search lines which respects query on all their elements. — GetIndices_WholeLine","text":"function looks lines element respect query.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search lines which respects query on all their elements. — GetIndices_WholeLine","text":"","code":"GetIndices_WholeLine(metacell.mask)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search lines which respects query on all their elements. — GetIndices_WholeLine","text":"metacell.mask xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search lines which respects query on all their elements. — GetIndices_WholeLine","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search lines which respects query on all their elements. — GetIndices_WholeLine","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq.int(from=20, to=30)] level <- 'peptide' pattern <- \"Missing POV\" metacell.mask <- match.metacell(metadata = qMetacell(obj[[1]]),  pattern = pattern, level = level) ind <- GetIndices_WholeLine(metacell.mask)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Search lines which respects request on one or more conditions. — GetIndices_WholeMatrix","title":"Search lines which respects request on one or more conditions. — GetIndices_WholeMatrix","text":"function looks lines respect request either conditions least one condition.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search lines which respects request on one or more conditions. — GetIndices_WholeMatrix","text":"","code":"GetIndices_WholeMatrix(metacell.mask, op = \"==\", percent = FALSE, th = 0)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search lines which respects request on one or more conditions. — GetIndices_WholeMatrix","text":"metacell.mask xxx op String operator use. List operators available 'SymFilteringOperators()'. percent boolean indicate whether threshold represent absolute value (percent = FALSE) percentage (percent=TRUE). th floating number interval [0, 1]","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search lines which respects request on one or more conditions. — GetIndices_WholeMatrix","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetIndices_WholeMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search lines which respects request on one or more conditions. — GetIndices_WholeMatrix","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] level <- 'peptide' pattern <- \"Missing\" metacell.mask <- match.metacell(metadata = qMetacell(obj[[1]]), pattern = pattern, level = level) percent <- FALSE th <- 3 op <- \">=\" ind <- GetIndices_WholeMatrix(metacell.mask, op, percent, th)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbPeptidesUsed.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the number of peptides used for aggregating each protein — GetNbPeptidesUsed","title":"Computes the number of peptides used for aggregating each protein — GetNbPeptidesUsed","text":"Method compute number quantified peptides used aggregating protein","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbPeptidesUsed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the number of peptides used for aggregating each protein — GetNbPeptidesUsed","text":"","code":"GetNbPeptidesUsed(pepData, X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbPeptidesUsed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the number of peptides used for aggregating each protein — GetNbPeptidesUsed","text":"pepData data.frame quantitative data X adjacency matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbPeptidesUsed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the number of peptides used for aggregating each protein — GetNbPeptidesUsed","text":"data.frame","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbPeptidesUsed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the number of peptides used for aggregating each protein — GetNbPeptidesUsed","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbPeptidesUsed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the number of peptides used for aggregating each protein — GetNbPeptidesUsed","text":"","code":"if (FALSE) { # \\dontrun{ library(QFeatures) data(Exp1_R25_pept, package=\"DaparToolshedData\") obj.pep <- Exp1_R25_pept[seq_len(10)] last.obj <- obj.pep[[length(obj.pep)]] X <- BuildAdjacencyMatrix(last.obj) GetNbPeptidesUsed(assay(last.obj), X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of each metacell tags — GetNbTags","title":"Number of each metacell tags — GetNbTags","text":"Number metacell tags","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of each metacell tags — GetNbTags","text":"","code":"GetNbTags(obj)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of each metacell tags — GetNbTags","text":"obj instance class SummarizedExperiment","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetNbTags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of each metacell tags — GetNbTags","text":"","code":"data(Exp1_R25_prot, package = 'DaparToolshedData') GetNbTags(Exp1_R25_prot[[1]]) #>                 Any          Quantified Quant. by direct id  Quant. by recovery  #>                   0                   0               12538                 562  #>             Missing         Missing POV         Missing MEC             Imputed  #>                   0                 733                 471                   0  #>         Imputed POV         Imputed MEC       Combined tags  #>                   0                   0                   0"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetSoftAvailables.html","id":null,"dir":"Reference","previous_headings":"","what":"The set of available softwares to convert from — GetSoftAvailables","title":"The set of available softwares to convert from — GetSoftAvailables","text":"set available softwares convert ","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetSoftAvailables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The set of available softwares to convert from — GetSoftAvailables","text":"","code":"GetSoftAvailables()"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GetSoftAvailables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The set of available softwares to convert from — GetSoftAvailables","text":"","code":"GetSoftAvailables() #> [1] \"DIA_NN\"   \"maxquant\" \"proline\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GraphPepProt.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a histogram that shows the repartition of peptides w.r.t. the proteins — GraphPepProt","title":"Function to create a histogram that shows the repartition of peptides w.r.t. the proteins — GraphPepProt","text":"Method create plot proteins peptides MSnSet object (peptides)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GraphPepProt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a histogram that shows the repartition of peptides w.r.t. the proteins — GraphPepProt","text":"","code":"GraphPepProt(mat)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GraphPepProt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a histogram that shows the repartition of peptides w.r.t. the proteins — GraphPepProt","text":"mat adjacency matrix.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GraphPepProt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a histogram that shows the repartition of peptides w.r.t. the proteins — GraphPepProt","text":"histogram","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GraphPepProt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create a histogram that shows the repartition of peptides w.r.t. the proteins — GraphPepProt","text":"Alexia Dorffer, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/GraphPepProt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a histogram that shows the repartition of peptides w.r.t. the proteins — GraphPepProt","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] last.obj <- Exp1_R25_pept[[length(Exp1_R25_pept)]] X <- BuildAdjacencyMatrix(last.obj) GraphPepProt(X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Keep_Items_from_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — Keep_Items_from_Dataset","title":"xxx — Keep_Items_from_Dataset","text":"Removes one items dataset. function specific type dataset.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Keep_Items_from_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — Keep_Items_from_Dataset","text":"","code":"Keep_Items_from_Dataset(dataset, range)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Keep_Items_from_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — Keep_Items_from_Dataset","text":"dataset xxx range xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Keep_Items_from_Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — Keep_Items_from_Dataset","text":"dataset minus items","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxxxx — LH0","title":"xxxxxx — LH0","text":"xxxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxxxx — LH0","text":"","code":"LH0(X, y1, y2)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxxxx — LH0","text":"X n.pep*n.prot indicator matrix. y1 n.pep*n.samples matrice giving observed counts y2 n.pep*n.samples matrice giving observed counts ","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxxxx — LH0","text":"xxxxxxxxxx..","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxxxxx — LH0","text":"Thomas Burger, Laurent Jacob","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxxxx — LH0","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxxxx — LH0.lm","title":"xxxxxx — LH0.lm","text":"xxxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxxxx — LH0.lm","text":"","code":"LH0.lm(X, y1, y2)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxxxx — LH0.lm","text":"X n.pep*n.prot indicator matrix. y1 n.pep*n.samples matrice giving observed counts peptide sample condition 1 y2 n.pep*n.samples matrice giving observed counts peptide sample condition 2","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxxxx — LH0.lm","text":"xxxxxxxxxx..","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.lm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxxxxx — LH0.lm","text":"Thomas Burger, Laurent Jacob","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH0.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxxxx — LH0.lm","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxxxx — LH1","title":"xxxxxx — LH1","text":"xxxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxxxx — LH1","text":"","code":"LH1(X, y1, y2, j)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxxxx — LH1","text":"X n.pep*n.prot indicator matrix. y1 n.pep*n.samples matrice giving observed counts y2 n.pep*n.samples matrice giving observed counts j index protein tested, ie different","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxxxx — LH1","text":"xxxxxxxxxx..","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxxxxx — LH1","text":"Thomas Burger, Laurent Jacob","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxxxx — LH1","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxxxx — LH1.lm","title":"xxxxxx — LH1.lm","text":"xxxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxxxx — LH1.lm","text":"","code":"LH1.lm(X, y1, y2, j)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxxxx — LH1.lm","text":"X n.pep*n.prot indicator matrix. y1 n.pep*n.samples matrix giving observed counts y2 n.pep*n.samples matrix giving observed counts j index protein tested, ie different","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxxxx — LH1.lm","text":"xxxxxxxxxx..","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.lm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxxxxx — LH1.lm","text":"Thomas Burger, Laurent Jacob","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/LH1.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxxxx — LH1.lm","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/MetacellFilteringScope.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists the metacell scopes for filtering — MetacellFilteringScope","title":"Lists the metacell scopes for filtering — MetacellFilteringScope","text":"Lists metacell scopes filtering","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/MetacellFilteringScope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists the metacell scopes for filtering — MetacellFilteringScope","text":"","code":"MetacellFilteringScope()"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/MetacellFilteringScope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists the metacell scopes for filtering — MetacellFilteringScope","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/MetacellFilteringScope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lists the metacell scopes for filtering — MetacellFilteringScope","text":"","code":"MetacellFilteringScope() #> [1] \"None\"           \"WholeLine\"      \"WholeMatrix\"    \"AllCond\"        #> [5] \"AtLeastOneCond\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_DIA_NN.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the metacell dataframe for datasets which are from Dia-NN software — Metacell_DIA_NN","title":"Sets the metacell dataframe for datasets which are from Dia-NN software — Metacell_DIA_NN","text":"Actually, function uses generic function generate metacell info","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_DIA_NN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the metacell dataframe for datasets which are from Dia-NN software — Metacell_DIA_NN","text":"","code":"Metacell_DIA_NN(qdata, conds, df, level = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_DIA_NN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the metacell dataframe for datasets which are from Dia-NN software — Metacell_DIA_NN","text":"qdata object class MsnSet conds xxx df list integer xxxxxxx level xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_DIA_NN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the metacell dataframe for datasets which are from Dia-NN software — Metacell_DIA_NN","text":"xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_DIA_NN.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sets the metacell dataframe for datasets which are from Dia-NN software — Metacell_DIA_NN","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_DIA_NN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the metacell dataframe for datasets which are from Dia-NN software — Metacell_DIA_NN","text":"","code":"file <- system.file(\"extdata\", \"Exp1_R25_pept.txt\", package = \"DaparToolshedData\") data <- read.table(file, header = TRUE, sep = \"\\t\", stringsAsFactors = FALSE) metadataFile <- system.file(\"extdata\", \"samples_Exp1_R25.txt\",     package = \"DaparToolshedData\" ) metadata <- read.table(metadataFile,     header = TRUE, sep = \"\\t\", as.is = TRUE,     stringsAsFactors = FALSE ) conds <- metadata$Condition qdata <- data[seq_len(100), seq.int(from = 56, to = 61)] df <- data[seq_len(100), seq.int(from = 43, to = 48)] df <- Metacell_DIA_NN(qdata, conds, df, level = \"peptide\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_maxquant.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the metacell dataframe — Metacell_maxquant","title":"Sets the metacell dataframe — Metacell_maxquant","text":"Initial conversion rules maxquant |————|———————–|——–| | Quanti     |     Identification    |    Tag | |————|———————–|——–| |  == 0      |       whatever        |    2.0 | |  > 0       |       'MS/MS'      |    1.1 | |  > 0       |      'matching'    |    1.2 | |  > 0       |       unknown col     |    1.0 | |————|———————–|——–|","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_maxquant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the metacell dataframe — Metacell_maxquant","text":"","code":"Metacell_maxquant(qdata, conds, df, level = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_maxquant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the metacell dataframe — Metacell_maxquant","text":"qdata object class MsnSet conds xxx df list integer xxxxxxx level xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_maxquant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the metacell dataframe — Metacell_maxquant","text":"xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_maxquant.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sets the metacell dataframe — Metacell_maxquant","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_maxquant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the metacell dataframe — Metacell_maxquant","text":"","code":"file <- system.file(\"extdata\", \"Exp1_R25_pept.txt\", package = \"DaparToolshedData\") data <- read.table(file, header = TRUE, sep = \"\\t\", stringsAsFactors = FALSE) metadataFile <- system.file(\"extdata\", \"samples_Exp1_R25.txt\",     package = \"DaparToolshedData\" ) metadata <- read.table(metadataFile,     header = TRUE, sep = \"\\t\", as.is = TRUE,     stringsAsFactors = FALSE ) conds <- metadata$Condition qdata <- data[seq_len(10), seq.int(from = 56, to = 61)] df <- data[seq_len(10), seq.int(from = 43, to = 48)] df2 <- Metacell_maxquant(qdata, conds, df, level = \"peptide\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_proline.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the metacell dataframe for datasets which are from Proline software — Metacell_proline","title":"Sets the metacell dataframe for datasets which are from Proline software — Metacell_proline","text":"quantitative columns, missing value identified value rather value equal 0. datasets, metacell info computed 'PSM count' columns. Conversion rules Initial conversion rules proline |————–|—————–|—–| | Quanti       |    PSM count    | Tag | |————–|—————–|—–| |  == 0 | N.. |   whatever      | 2.0 | |  > 0         |    > 0          | 1.1 | |  > 0         |    == 0         | 1.2 | |  > 0         |   unknown col   | 1.0 | |————–|—————–|—–|","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_proline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the metacell dataframe for datasets which are from Proline software — Metacell_proline","text":"","code":"Metacell_proline(qdata, conds, df, level = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_proline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the metacell dataframe for datasets which are from Proline software — Metacell_proline","text":"qdata object class MsnSet conds xxx df list integer xxxxxxx level xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_proline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the metacell dataframe for datasets which are from Proline software — Metacell_proline","text":"xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_proline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sets the metacell dataframe for datasets which are from Proline software — Metacell_proline","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Metacell_proline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the metacell dataframe for datasets which are from Proline software — Metacell_proline","text":"","code":"file <- system.file(\"extdata\", \"Exp1_R25_pept.txt\", package = \"DaparToolshedData\") data <- read.table(file, header = TRUE, sep = \"\\t\", stringsAsFactors = FALSE) metadataFile <- system.file(\"extdata\", \"samples_Exp1_R25.txt\",     package = \"DaparToolshedData\" ) metadata <- read.table(metadataFile,     header = TRUE, sep = \"\\t\", as.is = TRUE,     stringsAsFactors = FALSE ) conds <- metadata$Condition qdata <- data[seq_len(100), seq.int(from = 56, to = 61)] df <- data[seq_len(100), seq.int(from = 43, to = 48)] df <- Metacell_proline(qdata, conds, df, level = \"peptide\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/NAIsZero.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — NAIsZero","title":"xxx — NAIsZero","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/NAIsZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — NAIsZero","text":"","code":"NAIsZero(obj, i)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/NAIsZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — NAIsZero","text":"obj xxx xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/OWAnova.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies aov() on a vector of protein abundances using the design derived from the sample names (simple aov wrapper) — OWAnova","title":"Applies aov() on a vector of protein abundances using the design derived from the sample names (simple aov wrapper) — OWAnova","text":"Applies aov() vector protein abundances using design derived sample names (simple aov wrapper)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/OWAnova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies aov() on a vector of protein abundances using the design derived from the sample names (simple aov wrapper) — OWAnova","text":"","code":"OWAnova(current_protein, conditions)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/OWAnova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies aov() on a vector of protein abundances using the design derived from the sample names (simple aov wrapper) — OWAnova","text":"current_protein real vector conditions list groups protein belongs ","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/OWAnova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies aov() on a vector of protein abundances using the design derived from the sample names (simple aov wrapper) — OWAnova","text":"see aov()","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/OWAnova.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Applies aov() on a vector of protein abundances using the design derived from the sample names (simple aov wrapper) — OWAnova","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/OWAnova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Applies aov() on a vector of protein abundances using the design derived from the sample names (simple aov wrapper) — OWAnova","text":"","code":"protein_abundance <- rep(rnorm(3, mean= 18, sd=2), each=3) + rnorm(9) groups <- c(rep(\"group1\",3),rep(\"group2\",3),rep(\"group3\",3)) OWAnova(protein_abundance,groups) #> Call: #>    aov(formula = intensities ~ conditions, data = NULL) #>  #> Terms: #>                 conditions Residuals #> Sum of Squares   14.141637  4.778459 #> Deg. of Freedom          2         6 #>  #> Residual standard error: 0.8924179 #> Estimated effects may be unbalanced"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Parent.html","id":null,"dir":"Reference","previous_headings":"","what":"Parent name of a node — Parent","title":"Parent name of a node — Parent","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Parent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parent name of a node — Parent","text":"","code":"Parent(level, node = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Parent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parent name of a node — Parent","text":"level xxx node xxx #' @examples Parent('protein', 'Missing') Parent('protein', 'Missing POV') Parent('protein', c('Missing POV', 'Missing MEC')) Parent('protein', c('Missing', 'Missing POV', 'Missing MEC'))","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Pipelines.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — Pipelines","title":"xxx — Pipelines","text":"Get list pipelines available package","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Pipelines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — Pipelines","text":"","code":"Pipelines()"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/Pipelines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — Pipelines","text":"NA","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ProstarVersions.html","id":null,"dir":"Reference","previous_headings":"","what":"Version number of Prostar suite — ProstarVersions","title":"Version number of Prostar suite — ProstarVersions","text":"function gives version number packages Prostar suite propose data processing. information can useful user wants publish works rerun data processing pipeline tin given set conditions. packages concerned Prostar, DaparToolshed DaparToolshedData","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ProstarVersions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Version number of Prostar suite — ProstarVersions","text":"","code":"ProstarVersions()"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ProstarVersions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Version number of Prostar suite — ProstarVersions","text":"list(3)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ProstarVersions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Version number of Prostar suite — ProstarVersions","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ProstarVersions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Version number of Prostar suite — ProstarVersions","text":"","code":"ProstarVersions() #> $Prostar #> [1] NA #>  #> $DaparToolshed #> [1] \"0.99.3\" #>  #> $DaparToolshedData #> [1] NA #>"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"List of metacell tags — paramshistory","title":"List of metacell tags — paramshistory","text":"function gives list metacell tags available. onlyPresent: case, function gives tags found dataset. addition, w.r.t hierarchy tags, leaves node present, tag corresponding node added. names common assays contained object. stored global metadata. function used whenever s necessary (re)detect MEC POV (new dataset post processing protein qMetacell aggregation)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of metacell tags — paramshistory","text":"","code":"paramshistory(object, ...)  # S4 method for class 'QFeatures' paramshistory(object, i, slotName = \"paramshistory\")  # S4 method for class 'SummarizedExperiment' paramshistory(object, slotName = \"paramshistory\")  paramshistory(object, i, slotName = \"paramshistory\") <- value  GetMetacellTags(object, ...)  # S4 method for class 'QFeatures' GetMetacellTags(object, i, ...)  # S4 method for class 'SummarizedExperiment' GetMetacellTags(object, ...)  # S4 method for class 'data.frame' GetMetacellTags(object, ...)  qMetacell(object, ...)  # S4 method for class 'QFeatures' qMetacell(object, i)  # S4 method for class 'SummarizedExperiment' qMetacell(object)  qMetacell(object, i, slotName = \"qMetacell\") <- value  GetUniqueTags(object, ...)  # S4 method for class 'QFeatures' GetUniqueTags(object, i)  # S4 method for class 'SummarizedExperiment' GetUniqueTags(object)  .GetMetadataSlot(object, slotName = NULL)  .GetRowdataSlot(object, slotName = NULL)  ConnectedComp(object, ...)  # S4 method for class 'QFeatures' ConnectedComp(object, i, slotName = \"ConnectedComp\")  # S4 method for class 'SummarizedExperiment' ConnectedComp(object, slotName = \"ConnectedComp\")  ConnectedComp(object, i, slotName = \"ConnectedComp\") <- value  typeDataset(object, ...)  # S4 method for class 'QFeatures' typeDataset(object, i, slotName = \"typeDataset\")  # S4 method for class 'SummarizedExperiment' typeDataset(object, slotName = \"typeDataset\")  typeDataset(object, i, slotName = \"typeDataset\") <- value  idcol(object, ...)  # S4 method for class 'QFeatures' idcol(object, i, slotName = \"idcol\")  # S4 method for class 'SummarizedExperiment' idcol(object, slotName = \"idcol\")  idcol(object, i, slotName = \"idcol\") <- value  parentProtId(object, ...)  # S4 method for class 'QFeatures' parentProtId(object, i, slotName = \"parentProtId\")  # S4 method for class 'SummarizedExperiment' parentProtId(object, slotName = \"parentProtId\")  parentProtId(object, i, slotName = \"parentProtId\") <- value  filename(object, ...)  # S4 method for class 'QFeatures' filename(object, slotName = \"filename\")  filename(object, slotName = \"filename\") <- value  analysis(object, ...)  # S4 method for class 'QFeatures' analysis(object, i, slotName = \"analysis\")  # S4 method for class 'SummarizedExperiment' analysis(object, slotName = \"analysis\")  analysis(object, i, slotName = \"analysis\") <- value  version(object, ...)  # S4 method for class 'QFeatures' version(object, slotName = \"version\")  version(object, slotName = \"version\") <- value  design.qf(object, ...)  # S4 method for class 'QFeatures' design.qf(object, slotName = \"design\")  design.qf(object, slotName = \"design\") <- value  mainAssay(object)  HypothesisTest(object, ...)  # S4 method for class 'QFeatures' HypothesisTest(object, i, slotName = \"HypothesisTest\")  # S4 method for class 'SummarizedExperiment' HypothesisTest(object, slotName = \"HypothesisTest\")  HypothesisTest(object, i) <- value  DifferentialAnalysis(object, ...)  # S4 method for class 'QFeatures' DifferentialAnalysis(object, i, slotName = \"DifferentialAnalysis\")  # S4 method for class 'SummarizedExperiment' DifferentialAnalysis(object, slotName = \"DifferentialAnalysis\")  DifferentialAnalysis(object, i) <- value  names_metacell(object, ...)  # S4 method for class 'QFeatures' names_metacell(object, i, slotName = \"names_metacell\")  # S4 method for class 'SummarizedExperiment' names_metacell(object, slotName = \"names_metacell\")  names_metacell(object, i, slotName = \"names_metacell\") <- value"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of metacell tags — paramshistory","text":"object xxx ... xxx index name assays extract quantitative metadata . must rowdata variable named slotName slotName xxx value xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of metacell tags — paramshistory","text":"vector tags.. NA NA NA NA NA NA NA","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-accessors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of metacell tags — paramshistory","text":"Additional slots rowdata SummarizedExperiment object: qMetacell: xxx Additional slots Metadata QFeatures object: xxx: xxxx Additional slots Metadata SummarizedExperiment object: qMetacell: xxxx parentProtId: xxx idcol: xxxx typeDataset: xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-accessors.html","id":"quantitative-metadata","dir":"Reference","previous_headings":"","what":"Quantitative metadata","title":"List of metacell tags — paramshistory","text":"Default slotName \"qMetacell\". value adjacency matrix row column names. matrix coerced compressed, column-oriented sparse matrix (class dgCMatrix) defined Matrix package, generaled sparseMatrix() constructor.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-accessors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List of metacell tags — paramshistory","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-accessors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of metacell tags — paramshistory","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept GetMetacellTags(obj, 1, level=\"peptide\") #> [1] \"Quantified\"          \"Quant. by direct id\" \"Quant. by recovery\"  #> [4] \"Missing\"             \"Missing POV\"         \"Missing MEC\"         #> [7] \"Imputed\"             \"Imputed POV\"         \"Imputed MEC\"         GetMetacellTags(obj, 1, level=\"peptide\", onlyPresent=TRUE) #> [1] \"Quant. by direct id\" \"Quant. by recovery\"  \"Missing POV\"         #> [4] \"Missing MEC\"         \"Quantified\"          \"Missing\"              data(ft, package='DaparToolshed') design.qf(ft)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Exports a QFeatures object to a Excel file. — QFeatures-excel","title":"Exports a QFeatures object to a Excel file. — QFeatures-excel","text":"function exports instance class QFeatures Excel file. resulting file composed four sheets: quantitative data contains content assay() object color code cell w.r.t. cell quantitative metadata. metadata content rowData() one-dimensionnal data (.e. adjacencyMatrix qMetacell slots part sheet), exp. design content colData(). condition table colored different color, quantitative metadata content qMetacell(). color code different tags. xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exports a QFeatures object to a Excel file. — QFeatures-excel","text":"","code":"write2excel(object, ...)  # S4 method for class 'QFeatures' write2excel(object, i = NULL, filename = \"newFile\", writeColdData = TRUE, ...)  # S4 method for class 'SummarizedExperiment' write2excel(object, filename, exp.design, writeColData = TRUE, ...)  .write2excel(object, filename, exp.design, writeColData = TRUE)  addColors(wb, n, tags, colors)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exports a QFeatures object to a Excel file. — QFeatures-excel","text":"object xxx ... xxx xxx filename xxx writeColdData xxx exp.design xxx writeColData boolean wb workbook n integer(1) number sheet workbook. tags xxx colors character() contains HEX code colors. size vector must number tags.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exports a QFeatures object to a Excel file. — QFeatures-excel","text":"Excel file.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-excel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Exports a QFeatures object to a Excel file. — QFeatures-excel","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exports a QFeatures object to a Excel file. — QFeatures-excel","text":"","code":"data(ft, package='DaparToolshed')  #--------------------------------------- # Export the whole dataset #---------------------------------------  write2excel(ft, filename = \"foo\") #> NULL unlink('foo.xls') write2excel(ft, 1, \"foo\") #> [1] \"foo.xlsx\" unlink('foo.xls')"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-filtering-oneSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter features of one SE based on their rowData — QFeatures-filtering-oneSE","title":"Filter features of one SE based on their rowData — QFeatures-filtering-oneSE","text":"filterFeaturesOneSE methods enables users filter features based variable rowData. directly inspired function filterFeature package QFeatures. first difference filter applies one SummarizedExperiment contained object rather applying SE. method generates new SummarizedExperiment object added QFeatures object. SE filter applies last one object, new xxxx. last one, new SE added SE deleted. features matching . filters can provided instances class AnnotationFilter (see package QFeatures) class FunctionFilter (see ).","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-filtering-oneSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter features of one SE based on their rowData — QFeatures-filtering-oneSE","text":"","code":"FunctionFilter(name, ...)  filterFeaturesOneSE(object, ...)  # S4 method for class 'QFeatures' filterFeaturesOneSE(object, i, name = \"newAssay\", filters)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-filtering-oneSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter features of one SE based on their rowData — QFeatures-filtering-oneSE","text":"name character(1) naming new assay. Default newAssay. Note function fail already assay name. ... Additional arguments object instance class QFeatures SummarizedExperiment. index name assay features filtered create new assay. filters list() containing instances class AnnotationFilter FunctionFilter","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-filtering-oneSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter features of one SE based on their rowData — QFeatures-filtering-oneSE","text":"filtered QFeature object","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-filtering-oneSE.html","id":"function-filters","dir":"Reference","previous_headings":"","what":"Function filters","title":"Filter features of one SE based on their rowData — QFeatures-filtering-oneSE","text":"function filters filters defined DaparToolshed package. filter defined name (name function) list contains parameters passed function. filters can created FunctionFilter constructor. functions divided two main categories: one filter one rowData feature, one based two-dimensional information adjacency matrix first category, filters class AnnotationFilter can used used QFeatures second category, package DaparToolshed provides filter functions based either adjacency matrix:    based quantitative metadata (identification):","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-filtering-oneSE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter features of one SE based on their rowData — QFeatures-filtering-oneSE","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-filtering-oneSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter features of one SE based on their rowData — QFeatures-filtering-oneSE","text":"","code":"data(feat1, package = 'QFeatures') ## ---------------------------------------- ## Creating function filters ## ----------------------------------------  #FunctionFilter('FUN', #               param1 = 'value_of_param1', #               param2 = 'value_of_param2')  FunctionFilter('qMetacellWholeLine',                cmd = 'delete',                pattern = 'imputed POV') #> An object of class \"FunctionFilter\" #> Slot \"name\": #> [1] \"qMetacellWholeLine\" #>  #> Slot \"params\": #> $cmd #> [1] \"delete\" #>  #> $pattern #> [1] \"imputed POV\" #>  #>   ## ---------------------------------------------------------------- ## Filter the last assay to keep only specific peptides. This filter ## only applies on peptide dataset. ## ----------------------------------------------------------------  spec.filter <- FunctionFilter('specPeptides', list()) ## using a user-defined character filter filterFeaturesOneSE(feat1, list(FunctionFilter('specPeptides', list()))) #> An instance of class QFeatures containing 1 set(s): #>  [1] psms: SummarizedExperiment with 10 rows and 2 columns    ## ---------------------------------------------------------------- ## Filter the last assay to keep only specific peptides and topn  ## peptides. The two filters are run sequentially. ## ----------------------------------------------------------------  lst.filters <- list(FunctionFilter('specPeptides', list())) lst.filters <- append(lst.filters, FunctionFilter('topnPeptides', fun = 'rowSums', top = 2)) filterFeaturesOneSE(feat1, lst.filters) #> An instance of class QFeatures containing 1 set(s): #>  [1] psms: SummarizedExperiment with 10 rows and 2 columns   ## ---------------------------------------------------------------- ## Filter the last assay to delete peptides where, in at least one  ## condition, there is less than 80% of samples marked as 'imputed POV' ## ----------------------------------------------------------------  filter <- FunctionFilter('qMetacellOnConditions', cmd = 'delete', mode = 'AtLeastOneCond', pattern = 'imputed POV', conds = SummarizedExperiment::colData(feat1)$Condition, percent = TRUE, th = 0.8, operator = '<')   filterFeaturesOneSE(feat1, filter) #> An instance of class QFeatures containing 1 set(s): #>  [1] psms: SummarizedExperiment with 10 rows and 2 columns"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility funcitons to dela with QFeatures objects. — QFeatures-utils","title":"Utility funcitons to dela with QFeatures objects. — QFeatures-utils","text":"xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility funcitons to dela with QFeatures objects. — QFeatures-utils","text":"","code":"last_assay(object)  n_assays_in_qf(object)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility funcitons to dela with QFeatures objects. — QFeatures-utils","text":"object instance class QFeatures","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility funcitons to dela with QFeatures objects. — QFeatures-utils","text":"NA","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/QFeatures-utils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility funcitons to dela with QFeatures objects. — QFeatures-utils","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ReplaceSpecialChars.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize names — ReplaceSpecialChars","title":"Standardize names — ReplaceSpecialChars","text":"Replace \".\", ' ', '-' character() '_' compliant functions Shinyjs, Shiny","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ReplaceSpecialChars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize names — ReplaceSpecialChars","text":"","code":"ReplaceSpecialChars(x)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ReplaceSpecialChars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize names — ReplaceSpecialChars","text":"x character() processed","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ReplaceSpecialChars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize names — ReplaceSpecialChars","text":"character() length 'x' modified names.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ReplaceSpecialChars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardize names — ReplaceSpecialChars","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ReplaceSpecialChars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize names — ReplaceSpecialChars","text":"","code":"ReplaceSpecialChars(c(\"foo.1\", \"foo-2\", \"foo 3\")) #> [1] \"foo_1\" \"foo-2\" \"foo_3\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/RunAggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation of peptide-level assay QFeatures — RunAggregation","title":"Aggregation of peptide-level assay QFeatures — RunAggregation","text":"function aggregate quantitative rowdata last assay contained QFeatures. Note function assumes intensities QFeatures already log-transformed.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/RunAggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation of peptide-level assay QFeatures — RunAggregation","text":"","code":"RunAggregation(   qf,   includeSharedPeptides = \"Yes_As_Specific\",   operator = \"Mean\",   considerPeptides = \"allPeptides\",   adjMatrix = \"adjacencyMatrix\",   ponderation = \"Global\",   n = NULL,   aggregated_col = NULL,   max_iter = 500 )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/RunAggregation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregation of peptide-level assay QFeatures — RunAggregation","text":"qf instance class QFeatures. last assay contained qf aggregated. Intensities assumed already log-transformed. includeSharedPeptides shared peptides handled. Either Yes_As_Specific (default), Yes_Iterative_Redistribution, Yes_Simple_Redistribution . See details. operator function used quantitative feature aggregation. Available functions Sum, Mean, Median, medianPolish robustSummary. See details. considerPeptides character(1) defining peptide consider. Available values allPeptides (default) topN. adjMatrix character(1) naming rowdata variable last assay qf containing adjacency matrix. ponderation character(1) defining consider create coefficient redistribution shared peptides. Available values Global (default), Condition Sample. n topN, specify number peptides use protein. aggregated_col character() column names rowdata aggregated. max_iter numeric(1) setting maximum number iteration.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/RunAggregation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregation of peptide-level assay QFeatures — RunAggregation","text":"QFeatures aggregated assay added.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/RunAggregation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregation of peptide-level assay QFeatures — RunAggregation","text":"Aggregation quantitative data performed using aggregateFeatures, inner.aggregate.iter Yes_Iterative_Redistribution Yes_Simple_Redistribution selected. handling shared peptide follow : Yes_As_Specific : Shared peptides used multiple times. peptide duplicated many times number proteins present, thus considered specific protein. Yes_Simple_Redistribution : Intensity shared peptides redistributed proportionally protein. See inner.aggregate.iter information. Yes_Iterative_Redistribution : Intensity shared peptides redistributed proportionally protein. See inner.aggregate.iter information. : shared peptides used. peptide contained shared peptides, intensity set 0 every sample. Available functions : Sum : base::colSums() base::rowSums() Yes_Iterative_Redistribution Yes_Simple_Redistribution. Mean : base::colMeans() base::rowMeans() Yes_Iterative_Redistribution Yes_Simple_Redistribution. Median : matrixStats::colMedians() matrixStats::rowMedians() Yes_Iterative_Redistribution Yes_Simple_Redistribution. medianPolish : MsCoreUtils::medianPolish(). robustSummary : MsCoreUtils::robustSummary().","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/RunAggregation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Aggregation of peptide-level assay QFeatures — RunAggregation","text":"Samuel Wieczorek, Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/RunAggregation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation of peptide-level assay QFeatures — RunAggregation","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") ft <- Exp1_R25_pept[1:100] obj.agg <- RunAggregation(ft, \"Yes_As_Specific\", \"Sum\", \"allPeptides\", aggregated_col = colnames(SummarizedExperiment::rowData(ft[[length(ft)]]))) obj.agg <- RunAggregation(ft, \"Yes_As_Specific\", \"Mean\", \"allPeptides\", aggregated_col = colnames(SummarizedExperiment::rowData(ft[[length(ft)]]))) obj.agg <- RunAggregation(ft, \"Yes_As_Specific\", \"Sum\", \"topN\", n = 4, aggregated_col = colnames(SummarizedExperiment::rowData(ft[[length(ft)]]))) obj.agg <- RunAggregation(ft, \"Yes_As_Specific\", \"Mean\", \"topN\", n = 4, aggregated_col = colnames(SummarizedExperiment::rowData(ft[[length(ft)]])))  obj.agg <- RunAggregation(ft, \"No\", \"Sum\", \"allPeptides\") obj.agg <- RunAggregation(ft, \"No\", \"Sum\", \"topN\", n = 4)  obj.agg <- RunAggregation(ft, \"Yes_Redistribution\", \"Sum\", \"allPeptides\", aggregated_col = colnames(SummarizedExperiment::rowData(ft[[length(ft)]]))) obj.agg <- RunAggregation(ft, \"Yes_Redistribution\", \"Sum\", \"topN\", n = 4, aggregated_col = colnames(SummarizedExperiment::rowData(ft[[length(ft)]]))) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/adjacency-matrix-filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a peptide assay on the basis of its adjacency matrix. — adjacency-matrix-filter","title":"Filter a peptide assay on the basis of its adjacency matrix. — adjacency-matrix-filter","text":"functions filters (delete) peptides assay, applying function peptides proteins. can used alone usual usage create instance class FunctionFilter pass function filterFeaturesOneSE order create new assay, embedded QFeatures object.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/adjacency-matrix-filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a peptide assay on the basis of its adjacency matrix. — adjacency-matrix-filter","text":"","code":"AdjMatFilters()  allPeptides(object, ...)  specPeptides(object, ...)  subAdjMat_specificPeptides(X)  sharedPeptides(object, ...)  subAdjMat_sharedPeptides(X)  topnFunctions()  topnPeptides(object, fun, top)  subAdjMat_topnPeptides(X, qData, fun, top)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/adjacency-matrix-filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a peptide assay on the basis of its adjacency matrix. — adjacency-matrix-filter","text":"object object class SummarizedExperiment ... Additional arguments X xxx fun list() additional parameters top integer(1) number xxx qData xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/adjacency-matrix-filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a peptide assay on the basis of its adjacency matrix. — adjacency-matrix-filter","text":"NA","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/adjacency-matrix-filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter a peptide assay on the basis of its adjacency matrix. — adjacency-matrix-filter","text":"function builds intermediate matrix scores peptide based 'fun' parameter. matrix built, one select 'n' peptides higher score list filter functions given adjMatFilters(): specPeptides(): returns new assay class SummazizedExperiment specific peptides; sharedpeptides(): returns new assay class SummazizedExperiment shared peptides; opnPeptides(): returns new assay class SummazizedExperiment 'n' peptides best satisfies condition. condition represented functions calculates score peptide among samples. list functions given topnFunctions(): rowMedians(): xxx; rowMeans(): xxx; rowSums(): xxx;","code":""},{"path":[]},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/adjacency-matrix-filter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter a peptide assay on the basis of its adjacency matrix. — adjacency-matrix-filter","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/adjacency-matrix-filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter a peptide assay on the basis of its adjacency matrix. — adjacency-matrix-filter","text":"","code":"library(Matrix) #>  #> Attaching package: ‘Matrix’ #> The following object is masked from ‘package:S4Vectors’: #>  #>     expand library(QFeatures) #------------------------------------------------ # This function will keep only specific peptides #------------------------------------------------  f1 <- FunctionFilter(\"specPeptides\", list())  #------------------------------------------------ # This function will keep only shared peptides #------------------------------------------------  f2 <- FunctionFilter(\"sharedPeptides\", list())  #------------------------------------------------ # This function will keep only the 'n' best peptides # w.r.t the quantitative sum of each peptides among # all samples #------------------------------------------------  f3 <- FunctionFilter(\"topnPeptides\", fun = \"rowSums\", top = 2)  #------------------------------------------------------ # To run the filter(s) on the dataset, use [xxx()] # IF several filters must be used, store them in a list #------------------------------------------------------  data(ft, package='DaparToolshed') lst.filters <- list() lst.filters <- append(lst.filters, f1) lst.filters <- append(lst.filters, f3)  ft <- filterFeaturesOneSE(     object = ft,     i = 1,     name = \"filtered\",     filters = lst.filters )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/applyAnovasOnProteins.html","id":null,"dir":"Reference","previous_headings":"","what":"iteratively applies OWAnova() on the features of an MSnSet object — applyAnovasOnProteins","title":"iteratively applies OWAnova() on the features of an MSnSet object — applyAnovasOnProteins","text":"iteratively applies OWAnova() features MSnSet object","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/applyAnovasOnProteins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"iteratively applies OWAnova() on the features of an MSnSet object — applyAnovasOnProteins","text":"","code":"applyAnovasOnProteins(obj, i)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/applyAnovasOnProteins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"iteratively applies OWAnova() on the features of an MSnSet object — applyAnovasOnProteins","text":"obj QFreatures object xxx '","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/applyAnovasOnProteins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"iteratively applies OWAnova() on the features of an MSnSet object — applyAnovasOnProteins","text":"list linear models","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/applyAnovasOnProteins.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"iteratively applies OWAnova() on the features of an MSnSet object — applyAnovasOnProteins","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/applyAnovasOnProteins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"iteratively applies OWAnova() on the features of an MSnSet object — applyAnovasOnProteins","text":"","code":"data(Exp1_R25_prot, package='DaparToolshedData') exdata <- Exp1_R25_prot[1:5,] applyAnovasOnProteins(exdata, 1) #>      CON__A2I7N1;CON__A2I7N0 CON__P00761 #> [1,] aov,13                  aov,13      #>      P02768upsedyp|ALBU_HUMAN_upsedyp;CON__P02768-1 CON__P04264 CON__P07477 #> [1,] aov,13                                         aov,13      aov,13      #> attr(,\"names\") #> [1] \"CON__A2I7N1;CON__A2I7N0\"                        #> [2] \"CON__P00761\"                                    #> [3] \"P02768upsedyp|ALBU_HUMAN_upsedyp;CON__P02768-1\" #> [4] \"CON__P04264\"                                    #> [5] \"CON__P07477\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/buildGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a CC — buildGraph","title":"Display a CC — buildGraph","text":"Display CC","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/buildGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a CC — buildGraph","text":"","code":"buildGraph(The.CC, X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/buildGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a CC — buildGraph","text":".CC cc (list) X xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/buildGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a CC — buildGraph","text":"plot","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/buildGraph.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display a CC — buildGraph","text":"Thomas Burger, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/buildGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a CC — buildGraph","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(100)] X <- QFeatures::adjacencyMatrix(obj[[1]]) ll <- get.pep.prot.cc(X) g <- buildGraph(ll[[1]], X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the design is valid — check.conditions","title":"Check if the design is valid — check.conditions","text":"Check design valid","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the design is valid — check.conditions","text":"","code":"check.conditions(conds)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the design is valid — check.conditions","text":"conds vector containing conditions.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the design is valid — check.conditions","text":"list including : \"valid\" : Wether conditions valid . \"warn\" : message describing issue conditions ar valid.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.conditions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if the design is valid — check.conditions","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the design is valid — check.conditions","text":"","code":"data(Exp1_R25_pept, package='DaparToolshedData') check.conditions(design.qf(Exp1_R25_pept)$Condition) #> $valid #> [1] TRUE #>  #> $warn #> NULL #>"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.design.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the design is valid — check.design","title":"Check if the design is valid — check.design","text":"Check design valid","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the design is valid — check.design","text":"","code":"check.design(sTab)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the design is valid — check.design","text":"sTab data.frame correspond pData() function package MSnbase.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the design is valid — check.design","text":"boolean","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.design.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if the design is valid — check.design","text":"Thomas Burger, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/check.design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the design is valid — check.design","text":"","code":"data(Exp1_R25_pept, package='DaparToolshedData') check.design(SummarizedExperiment::colData(Exp1_R25_pept)[, seq(3)]) #> $valid #> [1] TRUE #>  #> $warn #> NULL #>"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/classic1wayAnova.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to perform a One-way Anova statistical test on a MsnBase dataset — classic1wayAnova","title":"Function to perform a One-way Anova statistical test on a MsnBase dataset — classic1wayAnova","text":"Function perform One-way Anova statistical test MsnBase dataset","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/classic1wayAnova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to perform a One-way Anova statistical test on a MsnBase dataset — classic1wayAnova","text":"","code":"classic1wayAnova(current_line, conditions)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/classic1wayAnova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to perform a One-way Anova statistical test on a MsnBase dataset — classic1wayAnova","text":"current_line line currently treated quantitative data perform ANOVA conditions conditions represent different classes studied factor","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/classic1wayAnova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to perform a One-way Anova statistical test on a MsnBase dataset — classic1wayAnova","text":"named vector containing different values aov model","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/classic1wayAnova.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to perform a One-way Anova statistical test on a MsnBase dataset — classic1wayAnova","text":"Hélène Borges","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/classic1wayAnova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to perform a One-way Anova statistical test on a MsnBase dataset — classic1wayAnova","text":"","code":"if (FALSE) examples/ex_classic1wayAnova.R # \\dontrun{}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compare-assays.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two assays — plotCompareAssays","title":"Compare two assays — plotCompareAssays","text":"plot compares quantitative proteomics data two assays. can used example compare effect normalization process. comparison made division operator.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compare-assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two assays — plotCompareAssays","text":"","code":"plotCompareAssays(   obj,   i,   j,   info = NULL,   pal.name = \"Set1\",   subset.view = NULL,   n = 100,   type = \"scatter\",   FUN = NULL )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compare-assays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two assays — plotCompareAssays","text":"obj instance class omXplore. numeric matrix containing quantitative data normalization. j numeric matrix containing quantitative data normalization info xxx pal.name xxx subset.view xxx n xxx type type plot. Available values 'scatter' (default) 'line' FUN xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compare-assays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two assays — plotCompareAssays","text":"plot","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compare-assays.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare two assays — plotCompareAssays","text":"Samuel Wieczorek, Enora Fremy","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compare-assays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two assays — plotCompareAssays","text":"","code":"data(Exp1_R25_prot, package=\"DaparToolshedData\") plotCompareAssays(Exp1_R25_prot, 1, 2, n = 5)  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"type\":\"scatter\",\"zoomType\":\"None\",\"showAxes\":true,\"width\":0,\"height\":0,\"resetZoomButton\":{\"position\":{\"align\":\"left\",\"verticalAlign\":\"top\"}}},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}},\"series\":[{\"name\":\"Intensity_C_R1\",\"data\":[{\"x\":641150000,\"y\":4.563064287700467e-08,\"name\":null},{\"x\":61827000,\"y\":4.186153892045906e-07,\"name\":null},{\"x\":7073200,\"y\":3.216921849301767e-06,\"name\":null},{\"x\":61500000,\"y\":4.207167979620067e-07,\"name\":null},{\"x\":7299600,\"y\":3.123374702636841e-06,\"name\":null}]},{\"name\":\"Intensity_C_R2\",\"data\":[{\"x\":656870000,\"y\":4.459182583559651e-08,\"name\":null},{\"x\":76055000,\"y\":3.442316713008788e-07,\"name\":null},{\"x\":5757800,\"y\":3.900289389415708e-06,\"name\":null},{\"x\":85147000,\"y\":3.093879099001677e-07,\"name\":null},{\"x\":6303700,\"y\":3.583255460493384e-06,\"name\":null}]},{\"name\":\"Intensity_C_R3\",\"data\":[{\"x\":512390000,\"y\":5.646610409817286e-08,\"name\":null},{\"x\":58830000,\"y\":4.3872256842534e-07,\"name\":null},{\"x\":7335600,\"y\":3.10901406050776e-06,\"name\":null},{\"x\":72749000,\"y\":3.589935817844437e-07,\"name\":null},{\"x\":16026000,\"y\":1.493442596157391e-06,\"name\":null}]},{\"name\":\"Intensity_D_R1\",\"data\":[{\"x\":163620000,\"y\":1.667630721500175e-07,\"name\":null},{\"x\":65710000,\"y\":3.952154863237815e-07,\"name\":null},{\"x\":5463500,\"y\":4.096530434464647e-06,\"name\":null},{\"x\":64679000,\"y\":4.011625726701487e-07,\"name\":null},{\"x\":3382400,\"y\":6.412492860441523e-06,\"name\":null}]},{\"name\":\"Intensity_D_R2\",\"data\":[{\"x\":165980000,\"y\":1.645164126492326e-07,\"name\":null},{\"x\":84384000,\"y\":3.120315005276669e-07,\"name\":null},{\"x\":6806700,\"y\":3.334732556862611e-06,\"name\":null},{\"x\":67743000,\"y\":3.840037869925266e-07,\"name\":null},{\"x\":14320000,\"y\":1.660022915978611e-06,\"name\":null}]},{\"name\":\"Intensity_D_R3\",\"data\":[{\"x\":172610000,\"y\":1.585246556238568e-07,\"name\":null},{\"x\":58943000,\"y\":4.379284589324656e-07,\"name\":null},{\"x\":5318200,\"y\":4.201140724785189e-06,\"name\":null},{\"x\":65538000,\"y\":3.961950061269632e-07,\"name\":null},{\"x\":8119600,\"y\":2.826860587499739e-06,\"name\":null}]}],\"colors\":[\"#E41A1C\",\"#377EB8\"],\"tooltip\":{\"enabled\":false}},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compareNormalizationD_HC.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a plot from a dataframe. Same as compareNormalizationD but uses the library highcharter — compareNormalizationD_HC","title":"Builds a plot from a dataframe. Same as compareNormalizationD but uses the library highcharter — compareNormalizationD_HC","text":"Plot compare quantitative proteomics data normalization using package highcharter","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compareNormalizationD_HC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a plot from a dataframe. Same as compareNormalizationD but uses the library highcharter — compareNormalizationD_HC","text":"","code":"compareNormalizationD_HC(   qDataBefore,   qDataAfter,   keyId = NULL,   conds = NULL,   pal = NULL,   subset.view = NULL,   n = 100,   type = \"scatter\" )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compareNormalizationD_HC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a plot from a dataframe. Same as compareNormalizationD but uses the library highcharter — compareNormalizationD_HC","text":"qDataBefore dataframe contains quantitative data normalization. qDataAfter dataframe contains quantitative data normalization. keyId xxx conds vector conditions (one condition per sample). pal xxx subset.view xxx n integer equal maximum number displayed points. number must less equal size dataset. less , random selection type scatter line","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compareNormalizationD_HC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a plot from a dataframe. Same as compareNormalizationD but uses the library highcharter — compareNormalizationD_HC","text":"plot","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compareNormalizationD_HC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Builds a plot from a dataframe. Same as compareNormalizationD but uses the library highcharter — compareNormalizationD_HC","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compareNormalizationD_HC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds a plot from a dataframe. Same as compareNormalizationD but uses the library highcharter — compareNormalizationD_HC","text":"","code":"data(Exp1_R25_prot, package=\"DaparToolshedData\") obj <- Exp1_R25_prot qDataBefore <- SummarizedExperiment::assay(obj[[length(obj)]]) conds <- design.qf(obj)$Condition id <- SummarizedExperiment::rowData(obj[[length(obj)]])[, omXplore::get_colID(obj[[length(obj)]])] # pal <- ExtendPalette(2) qDataAfter <- LOESS(qDataBefore, conds, type = \"overall\")  n <- 1 compareNormalizationD_HC( qDataBefore = qDataBefore, qDataAfter = qDataAfter,  keyId = id,  pal = NULL,  n = n, subset.view = seq_len(n), conds = conds) #> Warning: Color palette set to default.  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"type\":\"scatter\",\"zoomType\":\"None\",\"showAxes\":true,\"resetZoomButton\":{\"position\":{\"align\":\"left\",\"verticalAlign\":\"top\"}}},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":true,\"filename\":\"compareNormalization\",\"buttons\":{\"contextButton\":{\"menuItems\":[\"downloadPNG\",\"downloadSVG\",\"downloadPDF\"]}}},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}},\"series\":[{\"name\":\"Intensity_C_R1\",\"data\":[{\"x\":21.32980947458864,\"y\":1.001249475617915,\"name\":\"CON__A2I7N1;CON__A2I7N0\"}]},{\"name\":\"Intensity_C_R2\",\"data\":[{\"x\":21.29457139231285,\"y\":1.002289037317698,\"name\":\"CON__A2I7N1;CON__A2I7N0\"}]},{\"name\":\"Intensity_C_R3\",\"data\":[{\"x\":21.36591657001674,\"y\":0.9958211361819608,\"name\":\"CON__A2I7N1;CON__A2I7N0\"}]},{\"name\":\"Intensity_D_R1\",\"data\":[{\"x\":21.31561837611934,\"y\":0.9957235494354676,\"name\":\"CON__A2I7N1;CON__A2I7N0\"}]},{\"name\":\"Intensity_D_R2\",\"data\":[{\"x\":20.89947493961432,\"y\":0.9997730004427543,\"name\":\"CON__A2I7N1;CON__A2I7N0\"}]},{\"name\":\"Intensity_D_R3\",\"data\":[{\"x\":21.37283955976277,\"y\":0.9958264298070904,\"name\":\"CON__A2I7N1;CON__A2I7N0\"}]}],\"colors\":[\"#E41A1C\",\"#E41A1C\",\"#E41A1C\",\"#377EB8\",\"#377EB8\",\"#377EB8\"],\"tooltip\":{\"headerFormat\":\"\",\"pointFormat\":\"Id: {point.name}\"}},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute.selection.table.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies an FDR threshold on a table of adjusted p-values and summarizes the results — compute.selection.table","title":"Applies an FDR threshold on a table of adjusted p-values and summarizes the results — compute.selection.table","text":"Applies FDR threshold table adjusted p-values summarizes results","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute.selection.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies an FDR threshold on a table of adjusted p-values and summarizes the results — compute.selection.table","text":"","code":"compute.selection.table(x, fdr.threshold)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute.selection.table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies an FDR threshold on a table of adjusted p-values and summarizes the results — compute.selection.table","text":"x table adjusted p-values fdr.threshold FDR threshold","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute.selection.table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies an FDR threshold on a table of adjusted p-values and summarizes the results — compute.selection.table","text":"summary number significantly differentially abundant proteins, overall per contrast","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute.selection.table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Applies an FDR threshold on a table of adjusted p-values and summarizes the results — compute.selection.table","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute.selection.table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Applies an FDR threshold on a table of adjusted p-values and summarizes the results — compute.selection.table","text":"","code":"data(Exp1_R25_prot, package='DaparToolshedData') exdata <- Exp1_R25_prot[1:5,] adjpvaltab <- globalAdjPval(testAnovaModels(applyAnovasOnProteins(exdata, 1), \"TukeyHSD\")$P_Value)  #> Procedure of Benjamini-Hochberg is used. pi0 is fixed to 1. seltab <- compute.selection.table(adjpvaltab, 0.2) seltab #>   V1_pval Total Ctr   DA prot  #>         2         2         2"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute_t_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxxxx — compute_t_tests","title":"xxxxxx — compute_t_tests","text":"xxxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute_t_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxxxx — compute_t_tests","text":"","code":"compute_t_tests(   obj,   i = 1,   contrast = c(\"OnevsOne\", \"OnevsAll\"),   type = c(\"Student\", \"Welch\") )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute_t_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxxxx — compute_t_tests","text":"obj matrix quantitative data, without missing values. xxx contrast Indicates test consists comparison biological condition versus ones (contrast=1; example H0:\"C1=C2\" vs H1:\"C1!=C2\", etc.) condition versus others (contrast=2; e.g.  H0:\"C1=(C2+C3)/2\" vs H1:\"C1!=(C2+C3)/2\", etc. three conditions). type xxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute_t_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxxxx — compute_t_tests","text":"list two items : logFC P_Value; dataframe. first one contains logFC values comparisons (one column one comparison), second one contains pvalue comparisons (one column one comparison). names columns two dataframes identical correspond description comparison.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute_t_tests.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxxxxx — compute_t_tests","text":"Florence Combes, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/compute_t_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxxxx — compute_t_tests","text":"","code":"data(Exp1_R25_prot, package = \"DaparToolshedData\") obj <- Exp1_R25_prot[seq_len(1000)] level <- 'protein' metacell.mask <- match.metacell(omXplore::get_metacell(obj[[1]]),  c(\"Missing POV\", \"Missing MEC\"), level) # Simulate imputation obj <- NAIsZero(obj, 1) obj <- NAIsZero(obj, 2) ttest <- compute_t_tests(obj, 2)  ttest <- compute_t_tests(obj, 1)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/create-example.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an example dataset — create_ft_example","title":"Creates an example dataset — create_ft_example","text":"function builds dataset instance class QFeatures.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/create-example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an example dataset — create_ft_example","text":"","code":"create_ft_example(with.na = FALSE)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/create-example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an example dataset — create_ft_example","text":".na logical(1) indicates whether example dataset contains missing values . Default FALSE.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/create-example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an example dataset — create_ft_example","text":"instance class QFeatures","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/create-example.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates an example dataset — create_ft_example","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/create-example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an example dataset — create_ft_example","text":"","code":"create_ft_example() #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object. #> Setting assay rownames. #> An instance of class QFeatures containing 1 set(s): #>  [1] original: SummarizedExperiment with 6 rows and 6 columns  create_ft_example(TRUE) #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object. #> Setting assay rownames. #> An instance of class QFeatures containing 1 set(s): #>  [1] original: SummarizedExperiment with 6 rows and 6 columns"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/display.CC.visNet.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a CC — display.CC.visNet","title":"Display a CC — display.CC.visNet","text":"Display CC","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/display.CC.visNet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a CC — display.CC.visNet","text":"","code":"display.CC.visNet(   g,   layout = layout_nicely,   obj = NULL,   prot.tooltip = NULL,   pept.tooltip = NULL )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/display.CC.visNet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a CC — display.CC.visNet","text":"g cc (list) layout xxxxx obj xxx prot.tooltip xxx pept.tooltip xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/display.CC.visNet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a CC — display.CC.visNet","text":"plot","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/display.CC.visNet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display a CC — display.CC.visNet","text":"Thomas Burger, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/display.CC.visNet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a CC — display.CC.visNet","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(100)] X <- QFeatures::adjacencyMatrix(obj[[1]]) ll <- get.pep.prot.cc(X) g <- buildGraph(ll[[1]], X) display.CC.visNet(g)  {\"x\":{\"nodes\":{\"id\":[1,2,3],\"group\":[\"shared.peptide\",\"protein\",\"protein\"],\"label\":[\"AADAIIIK\",\"116\",\"115\"],\"title\":[\"<p>1<br>Tooltip !<\\/p>\",\"<p>2<br>Tooltip !<\\/p>\",\"<p>3<br>Tooltip !<\\/p>\"],\"size\":[10,20,20]},\"edges\":{\"from\":[1,1],\"to\":[2,3]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"groups\":{\"spec.peptide\":{\"color\":\"#5CA3F7\"},\"shared.peptide\":{\"color\":\"#0EA513\"},\"useDefaultGroups\":true,\"protein\":{\"color\":\"#ECB57C\",\"shape\":\"dot\"}},\"edges\":{\"width\":2,\"color\":\"#A9A9A9\"}},\"groups\":[\"shared.peptide\",\"protein\"],\"width\":\"100%\",\"height\":\"100%\",\"idselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"highlight\":{\"enabled\":false,\"hoverNearest\":false,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatHSDResults.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — formatHSDResults","title":"xxx — formatHSDResults","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatHSDResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — formatHSDResults","text":"","code":"formatHSDResults(post_hoc_models_summaries)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatHSDResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — formatHSDResults","text":"post_hoc_models_summaries xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatHSDResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — formatHSDResults","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatHSDResults.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxx — formatHSDResults","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatHSDResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — formatHSDResults","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatLimmaResult.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxx — formatLimmaResult","title":"xxxx — formatLimmaResult","text":"xxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatLimmaResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxx — formatLimmaResult","text":"","code":"formatLimmaResult(fit, conds, contrast, design.level)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatLimmaResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxx — formatLimmaResult","text":"fit xxxx conds xxxx contrast xxxx design.level xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatLimmaResult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxx — formatLimmaResult","text":"list two dataframes : logFC P_Value. first one contains logFC values comparisons (one column one comparison), second one contains pvalue comparisons (one column one comparison). names columns two dataframes identical correspond description comparison.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatLimmaResult.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxxx — formatLimmaResult","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatLimmaResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxx — formatLimmaResult","text":"","code":"library(SummarizedExperiment) data(Exp1_R25_prot, package='DaparToolshedData') obj <- Exp1_R25_prot[seq(100)] level <- 'protein' metacell.mask <- match.metacell(omXplore::get_metacell(obj[[1]]),  c(\"Missing POV\", \"Missing MEC\"), level) # Simulate imputation assay(obj[[1]])[which(is.na(assay(obj[[1]])))] <- 0 assay(obj[[2]])[which(is.na(assay(obj[[2]])))] <- 0 qData <- as.matrix(SummarizedExperiment::assay(obj[[2]])) sTab <- SummarizedExperiment::colData(obj) limma <- limmaCompleteTest(qData, sTab)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract logFC and raw pvalues from multiple post-hoc models summaries — formatPHResults","title":"Extract logFC and raw pvalues from multiple post-hoc models summaries — formatPHResults","text":"Extract logFC raw pvalues multiple post-hoc models summaries","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract logFC and raw pvalues from multiple post-hoc models summaries — formatPHResults","text":"","code":"formatPHResults(post_hoc_models_summaries)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract logFC and raw pvalues from multiple post-hoc models summaries — formatPHResults","text":"post_hoc_models_summaries list summaries post-hoc models.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract logFC and raw pvalues from multiple post-hoc models summaries — formatPHResults","text":"list 2 dataframes containing logFC values pvalues comparison.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHResults.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract logFC and raw pvalues from multiple post-hoc models summaries — formatPHResults","text":"Helene Borges","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract logFC and raw pvalues from multiple post-hoc models summaries — formatPHResults","text":"","code":"if (FALSE) examples/ex_formatPHResults.R # \\dontrun{}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHTResults.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — formatPHTResults","title":"xxx — formatPHTResults","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHTResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — formatPHTResults","text":"","code":"formatPHTResults(post_hoc_models_summaries)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHTResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — formatPHTResults","text":"post_hoc_models_summaries xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHTResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — formatPHTResults","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHTResults.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxx — formatPHTResults","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/formatPHTResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — formatPHTResults","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ft.html","id":null,"dir":"Reference","previous_headings":"","what":"ft dataset — ft","title":"ft dataset — ft","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ft dataset — ft","text":"","code":"data(ft, package = 'DaparToolshed')"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ft.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ft dataset — ft","text":"object class QFeatures","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ft_na.html","id":null,"dir":"Reference","previous_headings":"","what":"ft_na dataset — ft_na","title":"ft_na dataset — ft_na","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/ft_na.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ft_na dataset — ft_na","text":"ft_na dataset","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/fudge2LRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Heuristic to choose the value of the hyperparameter (fudge factor) used to regularize the variance estimator in the likelihood ratio statistic — fudge2LRT","title":"Heuristic to choose the value of the hyperparameter (fudge factor) used to regularize the variance estimator in the likelihood ratio statistic — fudge2LRT","text":"#' fudge2LRT: heuristic choose value hyperparameter (fudge factor) used regularize variance estimator likelihood ratio statistic (implemented samLRT). follow heuristic described [1] adapt code fudge2 function siggene R package. [1] Tusher, Tibshirani Chu, Significance analysis microarrays applied ionizing radiation response, PNAS 2001 98: 5116-5121, (Apr 24).","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/fudge2LRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heuristic to choose the value of the hyperparameter (fudge factor) used to regularize the variance estimator in the likelihood ratio statistic — fudge2LRT","text":"","code":"fudge2LRT(   lmm.res.h0,   lmm.res.h1,   cc,   n,   p,   s,   alpha = seq(0, 1, 0.05),   include.zero = TRUE )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/fudge2LRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heuristic to choose the value of the hyperparameter (fudge factor) used to regularize the variance estimator in the likelihood ratio statistic — fudge2LRT","text":"lmm.res.h0 vector object containing estimates (used compute statistic) H0 connected component. fast version estimator used (implemented package), lmm.res.h0 vector containing averages squared residuals. fixed effect model used, vector lm objects mixed effect model used vector lmer object. lmm.res.h1 similar lmm.res.h0, vector object containing estimates (used compute statistic) H1 protein. cc list containing indices peptides proteins belonging connected component. n number samples used test p number proteins experiment s vector containing maximum likelihood estimate variance chosen model. using fast version estimator implemented package, thing input lmm.res.h1. models (e.g. mixed models) can obtained samLRT. alpha vector proportions used build candidate values regularizer. use quantiles s proportions. Default seq(0, 1, 0.05) include.zero logical value indicating 0 included list candidates. Default TRUE.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/fudge2LRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heuristic to choose the value of the hyperparameter (fudge factor) used to regularize the variance estimator in the likelihood ratio statistic — fudge2LRT","text":"(fudge2 function siggene): s.zero: value fudge factor s0. alpha.hat: optimal quantile 's' values. s0=0, 'alpha.hat' returned. vec.cv: vector coefficients variations.  Following Tusher et al. (2001), optimal 'alpha' quantile given quantile leads smallest CV modified test statistics. msg: character string summarizing important information fudge factor.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/fudge2LRT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heuristic to choose the value of the hyperparameter (fudge factor) used to regularize the variance estimator in the likelihood ratio statistic — fudge2LRT","text":"Thomas Burger, Laurent Jacob","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/fudge2LRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heuristic to choose the value of the hyperparameter (fudge factor) used to regularize the variance estimator in the likelihood ratio statistic — fudge2LRT","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/get.pep.prot.cc.html","id":null,"dir":"Reference","previous_headings":"","what":"Build the list of connex composant of the adjacency matrix — get.pep.prot.cc","title":"Build the list of connex composant of the adjacency matrix — get.pep.prot.cc","text":"Build list connex composant adjacency matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/get.pep.prot.cc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build the list of connex composant of the adjacency matrix — get.pep.prot.cc","text":"","code":"get.pep.prot.cc(X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/get.pep.prot.cc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build the list of connex composant of the adjacency matrix — get.pep.prot.cc","text":"X adjacency matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/get.pep.prot.cc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build the list of connex composant of the adjacency matrix — get.pep.prot.cc","text":"list CC","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/get.pep.prot.cc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build the list of connex composant of the adjacency matrix — get.pep.prot.cc","text":"Thomas Burger, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/get.pep.prot.cc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build the list of connex composant of the adjacency matrix — get.pep.prot.cc","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] X <- QFeatures::adjacencyMatrix(obj[[1]]) ll <- get.pep.prot.cc(X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getDesignLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — getDesignLevel","title":"xxx — getDesignLevel","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getDesignLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — getDesignLevel","text":"","code":"getDesignLevel(sTab)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getDesignLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — getDesignLevel","text":"sTab xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getDesignLevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — getDesignLevel","text":"","code":"data(Exp1_R25_pept, package='DaparToolshedData') sTab <- SummarizedExperiment::colData(Exp1_R25_pept) getDesignLevel(sTab) #> [1] 1"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getExtension.html","id":null,"dir":"Reference","previous_headings":"","what":"Extension of a file — GetExtension","title":"Extension of a file — GetExtension","text":"Extension file","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getExtension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extension of a file — GetExtension","text":"","code":"GetExtension(fname)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getExtension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extension of a file — GetExtension","text":"fname character() containing file name.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getExtension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extension of a file — GetExtension","text":"","code":"GetExtension('foo.txt') #> [1] \"txt\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getListNbValuesInLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the possible number of values in lines in the data — getListNbValuesInLines","title":"Returns the possible number of values in lines in the data — getListNbValuesInLines","text":"Returns possible number values lines data","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getListNbValuesInLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the possible number of values in lines in the data — getListNbValuesInLines","text":"","code":"getListNbValuesInLines(object, conds, type = \"WholeMatrix\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getListNbValuesInLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the possible number of values in lines in the data — getListNbValuesInLines","text":"object object class QFeatures conds xxxx type WholeMatrix, AllCond AtLeastOneCond","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getListNbValuesInLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the possible number of values in lines in the data — getListNbValuesInLines","text":"integer","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getListNbValuesInLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns the possible number of values in lines in the data — getListNbValuesInLines","text":"Samuel Wieczorek, Enora Fremy","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getListNbValuesInLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the possible number of values in lines in the data — getListNbValuesInLines","text":"","code":"data(Exp1_R25_prot, package='DaparToolshedData') res <- getListNbValuesInLines(Exp1_R25_prot[[1]])"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getNumberOfEmptyLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the number of empty lines in the data — getNumberOfEmptyLines","title":"Returns the number of empty lines in the data — getNumberOfEmptyLines","text":"Returns number empty lines matrix.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getNumberOfEmptyLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the number of empty lines in the data — getNumberOfEmptyLines","text":"","code":"getNumberOfEmptyLines(qData)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getNumberOfEmptyLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the number of empty lines in the data — getNumberOfEmptyLines","text":"qData matrix corresponding quantitative data.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getNumberOfEmptyLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the number of empty lines in the data — getNumberOfEmptyLines","text":"integer","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getNumberOfEmptyLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns the number of empty lines in the data — getNumberOfEmptyLines","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getNumberOfEmptyLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the number of empty lines in the data — getNumberOfEmptyLines","text":"","code":"library(QFeatures) data(Exp1_R25_pept, package=\"DaparToolshedData\") qData <- assay(Exp1_R25_pept[[1]]) getNumberOfEmptyLines(qData) #> [1] 733"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getProteinsStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the number of proteins that are only defined by specific peptides, shared peptides or a mixture of two. — getProteinsStats","title":"Computes the number of proteins that are only defined by specific peptides, shared peptides or a mixture of two. — getProteinsStats","text":"function computes number proteins defined specific peptides, shared peptides mixture two.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getProteinsStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the number of proteins that are only defined by specific peptides, shared peptides or a mixture of two. — getProteinsStats","text":"","code":"getProteinsStats(X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getProteinsStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the number of proteins that are only defined by specific peptides, shared peptides or a mixture of two. — getProteinsStats","text":"X adjacency matrix specific shared peptides.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getProteinsStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the number of proteins that are only defined by specific peptides, shared peptides or a mixture of two. — getProteinsStats","text":"list","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getProteinsStats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the number of proteins that are only defined by specific peptides, shared peptides or a mixture of two. — getProteinsStats","text":"Samuel Wieczorek, Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/getProteinsStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the number of proteins that are only defined by specific peptides, shared peptides or a mixture of two. — getProteinsStats","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(20)] obj.last <- obj[[length(obj)]] X <- BuildAdjacencyMatrix(obj.last) getProteinsStats(X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/globalAdjPval.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the adjusted p-values on all the stacked contrasts using CP4P — globalAdjPval","title":"Computes the adjusted p-values on all the stacked contrasts using CP4P — globalAdjPval","text":"Computes adjusted p-values stacked contrasts using CP4P","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/globalAdjPval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the adjusted p-values on all the stacked contrasts using CP4P — globalAdjPval","text":"","code":"globalAdjPval(x, pval.threshold = 1.05, method = 1, display = T)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/globalAdjPval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the adjusted p-values on all the stacked contrasts using CP4P — globalAdjPval","text":"x proteins x contrasts dataframe (raw) p-values pval.threshold p-values threshold considered. Default 1.05 (equivalent threshold). Applying threshold nearby 1 can instrumental improve uniformity null, notably case upstream mutliple contrat correction (experienced users ) method method method estimate pi_0, see CP4P display T, calibration plot diplayed using CP4P","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/globalAdjPval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the adjusted p-values on all the stacked contrasts using CP4P — globalAdjPval","text":"proteins x contrasts table adjusted p-values","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/globalAdjPval.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the adjusted p-values on all the stacked contrasts using CP4P — globalAdjPval","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/globalAdjPval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the adjusted p-values on all the stacked contrasts using CP4P — globalAdjPval","text":"","code":"data(Exp1_R25_prot, package='DaparToolshedData') exdata <- Exp1_R25_prot[1:5,] globalAdjPval(testAnovaModels(applyAnovasOnProteins(exdata, 1), \"TukeyHSD\")$P_Value)  #> Procedure of Benjamini-Hochberg is used. pi0 is fixed to 1. #>                                                     V1_pval #> CON__A2I7N1.CON__A2I7N0                        0.7209545661 #> CON__P00761                                    0.8916825703 #> P02768upsedyp.ALBU_HUMAN_upsedyp.CON__P02768.1 0.0001321402 #> CON__P04264                                    0.1253349546 #> CON__P07477                                    0.8916825703"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/hc_logFC_DensityPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Density plots of logFC values — hc_logFC_DensityPlot","title":"Density plots of logFC values — hc_logFC_DensityPlot","text":"function show density plots Fold Change (calculated limma) list comparisons conditions differential analysis.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/hc_logFC_DensityPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density plots of logFC values — hc_logFC_DensityPlot","text":"","code":"hc_logFC_DensityPlot(df_logFC, th_logFC = 0, pal = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/hc_logFC_DensityPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density plots of logFC values — hc_logFC_DensityPlot","text":"df_logFC dataframe contains logFC values th_logFC threshold log(Fold Change) distinguish differential non-differential data pal xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/hc_logFC_DensityPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density plots of logFC values — hc_logFC_DensityPlot","text":"highcharts density plot","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/hc_logFC_DensityPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Density plots of logFC values — hc_logFC_DensityPlot","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/hc_logFC_DensityPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density plots of logFC values — hc_logFC_DensityPlot","text":"","code":"library(SummarizedExperiment) data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept # Simulate missing value imputation assay(obj[[1]])[which(is.na(assay(obj[[1]])))] <- 0 assay(obj[[2]])[which(is.na(assay(obj[[2]])))] <- 0  qData <- as.matrix(assay(obj[[2]])) sTab <- SummarizedExperiment::colData(obj) limma <- limmaCompleteTest(qData, sTab) #> Warning: Zero sample variances detected, have been offset away from zero pal <- ExtendPalette(2, \"Dark2\") hc_logFC_DensityPlot(limma$logFC, th_logFC = 1, pal = pal) #> Warning: The color palette has not the same dimension as the  #>                 number of samples  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"type\":\"spline\",\"zoomType\":\"x\",\"showAxes\":true,\"resetZoomButton\":{\"position\":{\"align\":\"left\",\"verticalAlign\":\"top\"}}},\"title\":{\"text\":\"log(FC) repartition\"},\"yAxis\":{\"title\":{\"text\":\"Density\"}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":true,\"filename\":\"densityplot\",\"buttons\":{\"contextButton\":{\"menuItems\":[\"downloadPNG\",\"downloadSVG\",\"downloadPDF\"]}}},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"animation\":{\"duration\":100},\"connectNulls\":true,\"marker\":{\"enabled\":false}},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}},\"legend\":{\"enabled\":true},\"xAxis\":{\"title\":{\"text\":\"log(FC)\"},\"plotBands\":[{\"from\":-1,\"to\":1,\"color\":\"lightgrey\"}],\"plotLines\":[{\"color\":\"grey\",\"width\":2,\"value\":0,\"zIndex\":5}]},\"tooltip\":{\"headerFormat\":\"\",\"pointFormat\":\"<b> {series.name} <\\/b>: {point.y} \",\"valueDecimals\":2},\"colors\":[\"#A6CEE3\"],\"series\":[{\"data\":[{\"x\":-26.71442004172597,\"y\":0.0001218898777896514},{\"x\":-26.60798676080181,\"y\":0.000370256768408846},{\"x\":-26.50155347987765,\"y\":0.0002401908894173301},{\"x\":-26.3951201989535,\"y\":8.264599268567638e-06},{\"x\":-26.28868691802935,\"y\":5.716853167842047e-10},{\"x\":-26.18225363710519,\"y\":3.970662671235139e-06},{\"x\":-26.07582035618103,\"y\":0.000128811776051608},{\"x\":-25.96938707525688,\"y\":0.0005624814782173945},{\"x\":-25.86295379433272,\"y\":0.0006182430694988744},{\"x\":-25.75652051340857,\"y\":0.0004898726289743192},{\"x\":-25.65008723248441,\"y\":0.0007280669510770598},{\"x\":-25.54365395156026,\"y\":0.000711984559029128},{\"x\":-25.4372206706361,\"y\":0.0004774608387205242},{\"x\":-25.33078738971194,\"y\":0.0005108519225373553},{\"x\":-25.22435410878779,\"y\":0.0006335091483026556},{\"x\":-25.11792082786363,\"y\":0.0003352594122134247},{\"x\":-25.01148754693948,\"y\":2.008284268884397e-05},{\"x\":-24.90505426601532,\"y\":0.0002526447838666168},{\"x\":-24.79862098509117,\"y\":0.0003792057911779828},{\"x\":-24.69218770416701,\"y\":0.0001075322976826668},{\"x\":-24.58575442324286,\"y\":0.0002134783117080843},{\"x\":-24.4793211423187,\"y\":0.0007570918552009655},{\"x\":-24.37288786139455,\"y\":0.001011234499354486},{\"x\":-24.26645458047039,\"y\":0.0006940018409861621},{\"x\":-24.16002129954623,\"y\":0.0006075636740528412},{\"x\":-24.05358801862208,\"y\":0.0008762081810038622},{\"x\":-23.94715473769792,\"y\":0.0008898220640515812},{\"x\":-23.84072145677377,\"y\":0.001107770436016709},{\"x\":-23.73428817584961,\"y\":0.001495461818262281},{\"x\":-23.62785489492546,\"y\":0.0005401919376303203},{\"x\":-23.5214216140013,\"y\":0.0003043591251119036},{\"x\":-23.41498833307715,\"y\":0.0006836134563704344},{\"x\":-23.30855505215299,\"y\":0.0006246697541902128},{\"x\":-23.20212177122884,\"y\":0.001107221424990089},{\"x\":-23.09568849030468,\"y\":0.002790926594113859},{\"x\":-22.98925520938052,\"y\":0.003075233137498013},{\"x\":-22.88282192845637,\"y\":0.001296060305617035},{\"x\":-22.77638864753221,\"y\":0.001378187738089335},{\"x\":-22.66995536660806,\"y\":0.002149087696705619},{\"x\":-22.5635220856839,\"y\":0.001447483473963794},{\"x\":-22.45708880475975,\"y\":0.0008834695998133204},{\"x\":-22.35065552383559,\"y\":0.0006900579768573383},{\"x\":-22.24422224291143,\"y\":0.001156027137699209},{\"x\":-22.13778896198728,\"y\":0.0009632927207593824},{\"x\":-22.03135568106313,\"y\":0.00138943507666239},{\"x\":-21.92492240013897,\"y\":0.00178684471131022},{\"x\":-21.81848911921481,\"y\":0.001433370459414792},{\"x\":-21.71205583829066,\"y\":0.001150082274087929},{\"x\":-21.6056225573665,\"y\":0.0006492159393065026},{\"x\":-21.49918927644235,\"y\":0.0007419898278360767},{\"x\":-21.39275599551819,\"y\":0.0003444828550745307},{\"x\":-21.28632271459404,\"y\":0.0001213837265074579},{\"x\":-21.17988943366988,\"y\":0.0005620892559705719},{\"x\":-21.07345615274572,\"y\":0.001001379922582398},{\"x\":-20.96702287182157,\"y\":0.000799573602048841},{\"x\":-20.86058959089741,\"y\":0.0004852880476185871},{\"x\":-20.75415630997326,\"y\":1.657042667764534e-05},{\"x\":-20.6477230290491,\"y\":7.705614397257281e-10},{\"x\":-20.54128974812495,\"y\":2.127973144314146e-10},{\"x\":-20.43485646720079,\"y\":4.470821043325398e-06},{\"x\":-20.32842318627664,\"y\":0.0001398733333799117},{\"x\":-20.22198990535248,\"y\":0.0005440202965788136},{\"x\":-20.11555662442833,\"y\":5.490832547643312e-05},{\"x\":-20.00912334350417,\"y\":1.28212364185581e-06},{\"x\":-19.90269006258001,\"y\":5.956086123051755e-11},{\"x\":-19.79625678165586,\"y\":0},{\"x\":-19.68982350073171,\"y\":0},{\"x\":-19.58339021980755,\"y\":5.865643033385093e-18},{\"x\":-19.47695693888339,\"y\":1.233262712517165e-10},{\"x\":-19.37052365795924,\"y\":2.555534980436732e-06},{\"x\":-19.26409037703508,\"y\":8.868106152401176e-05},{\"x\":-19.15765709611093,\"y\":0.0006052970397560822},{\"x\":-19.05122381518677,\"y\":0.0007656665921001547},{\"x\":-18.94479053426262,\"y\":2.690874300790955e-05},{\"x\":-18.83835725333846,\"y\":1.25026234595391e-09},{\"x\":-18.7319239724143,\"y\":2.57124674753233e-11},{\"x\":-18.62549069149015,\"y\":5.219975065641231e-07},{\"x\":-18.51905741056599,\"y\":2.048798982962244e-05},{\"x\":-18.41262412964184,\"y\":0.0002102799874125817},{\"x\":-18.30619084871768,\"y\":0.0005496298864335755},{\"x\":-18.19975756779353,\"y\":0.0005832028634199941},{\"x\":-18.09332428686937,\"y\":0.001187786298868264},{\"x\":-17.98689100594522,\"y\":0.0004437095243651209},{\"x\":-17.88045772502106,\"y\":0.0003898518401974816},{\"x\":-17.77402444409691,\"y\":0.0007549933490289859},{\"x\":-17.66759116317275,\"y\":0.0005244029773269814},{\"x\":-17.56115788224859,\"y\":0.001126829095009842},{\"x\":-17.45472460132444,\"y\":0.0006609727839277005},{\"x\":-17.34829132040029,\"y\":0.0002409050310772039},{\"x\":-17.24185803947613,\"y\":4.398142177950786e-05},{\"x\":-17.13542475855197,\"y\":0.0008324767728290487},{\"x\":-17.02899147762782,\"y\":0.00161781724602618},{\"x\":-16.92255819670366,\"y\":0.00201072666325997},{\"x\":-16.8161249157795,\"y\":0.001174713839632373},{\"x\":-16.70969163485535,\"y\":0.0003213660520629245},{\"x\":-16.6032583539312,\"y\":0.001313576562192358},{\"x\":-16.49682507300704,\"y\":0.002777178243118028},{\"x\":-16.39039179208288,\"y\":0.003943648911872575},{\"x\":-16.28395851115873,\"y\":0.005639242845554124},{\"x\":-16.17752523023457,\"y\":0.00386657892136219},{\"x\":-16.07109194931042,\"y\":0.004885272783558205},{\"x\":-15.96465866838626,\"y\":0.006018029054850733},{\"x\":-15.85822538746211,\"y\":0.006823106399268862},{\"x\":-15.75179210653795,\"y\":0.01135656951708556},{\"x\":-15.6453588256138,\"y\":0.01336938994373373},{\"x\":-15.53892554468964,\"y\":0.01490194231973708},{\"x\":-15.43249226376548,\"y\":0.01632793073106431},{\"x\":-15.32605898284133,\"y\":0.01288162540247084},{\"x\":-15.21962570191717,\"y\":0.01866245494138051},{\"x\":-15.11319242099302,\"y\":0.01752915531836344},{\"x\":-15.00675914006886,\"y\":0.01589994077528302},{\"x\":-14.90032585914471,\"y\":0.01482226404528666},{\"x\":-14.79389257822055,\"y\":0.01677706368278096},{\"x\":-14.6874592972964,\"y\":0.01216681059927851},{\"x\":-14.58102601637224,\"y\":0.009859785464819396},{\"x\":-14.47459273544809,\"y\":0.009547895496097879},{\"x\":-14.36815945452393,\"y\":0.007795257272668595},{\"x\":-14.26172617359977,\"y\":0.005447195397770719},{\"x\":-14.15529289267562,\"y\":0.00351522200643651},{\"x\":-14.04885961175146,\"y\":0.004074896885684877},{\"x\":-13.94242633082731,\"y\":0.001643912864831761},{\"x\":-13.83599304990315,\"y\":0.00171481878316464},{\"x\":-13.729559768979,\"y\":0.001658501046265989},{\"x\":-13.62312648805484,\"y\":0.001711925645472627},{\"x\":-13.51669320713069,\"y\":0.001418722169613573},{\"x\":-13.41025992620653,\"y\":0.0007815795739492502},{\"x\":-13.30382664528237,\"y\":0.0002382716866555903},{\"x\":-13.19739336435822,\"y\":0.000154290381732792},{\"x\":-13.09096008343406,\"y\":0.0004826619093162606},{\"x\":-12.98452680250991,\"y\":0.0005560780534057008},{\"x\":-12.87809352158575,\"y\":0.0002722074726089736},{\"x\":-12.7716602406616,\"y\":4.981470881065291e-05},{\"x\":-12.66522695973744,\"y\":1.497132533008167e-06},{\"x\":-12.55879367881329,\"y\":7.536276359372362e-06},{\"x\":-12.45236039788913,\"y\":0.0002384797829885184},{\"x\":-12.34592711696498,\"y\":0.0008544762806353698},{\"x\":-12.23949383604082,\"y\":0.0003592038747171711},{\"x\":-12.13306055511666,\"y\":2.879802282189257e-05},{\"x\":-12.02662727419251,\"y\":6.157985947590875e-07},{\"x\":-11.92019399326835,\"y\":2.899409410779528e-11},{\"x\":-11.8137607123442,\"y\":2.34178592116414e-17},{\"x\":-11.70732743142004,\"y\":1.272966747568211e-17},{\"x\":-11.60089415049589,\"y\":1.552262875127309e-18},{\"x\":-11.49446086957173,\"y\":5.699342829405476e-18},{\"x\":-11.38802758864758,\"y\":5.707414492382688e-18},{\"x\":-11.28159430772342,\"y\":1.464464383251541e-18},{\"x\":-11.17516102679927,\"y\":0},{\"x\":-11.06872774587511,\"y\":2.784042618485339e-18},{\"x\":-10.96229446495095,\"y\":9.03787719799843e-18},{\"x\":-10.8558611840268,\"y\":2.56449964754054e-10},{\"x\":-10.74942790310264,\"y\":5.505213615133476e-06},{\"x\":-10.64299462217849,\"y\":0.0001654080292623708},{\"x\":-10.53656134125433,\"y\":0.0004042777982402314},{\"x\":-10.43012806033018,\"y\":0.0007742245242526713},{\"x\":-10.32369477940602,\"y\":0.0006718427451263673},{\"x\":-10.21726149848186,\"y\":0.0002112511394690066},{\"x\":-10.11082821755771,\"y\":0.000171579039086017},{\"x\":-10.00439493663356,\"y\":0.0003753230212285673},{\"x\":-9.897961655709398,\"y\":0.0002065972442317187},{\"x\":-9.791528374785244,\"y\":0.0004118644072850719},{\"x\":-9.68509509386109,\"y\":0.0003143303436087928},{\"x\":-9.578661812936932,\"y\":0.0002276550354314161},{\"x\":-9.472228532012778,\"y\":0.0003579461580256751},{\"x\":-9.365795251088624,\"y\":0.0001790361781275886},{\"x\":-9.259361970164466,\"y\":0.0004845811127005004},{\"x\":-9.152928689240312,\"y\":0.001900543056945489},{\"x\":-9.046495408316154,\"y\":0.002676375587019143},{\"x\":-8.940062127392,\"y\":0.002766784045404557},{\"x\":-8.833628846467846,\"y\":0.004734695207164416},{\"x\":-8.727195565543688,\"y\":0.006500660800691533},{\"x\":-8.620762284619534,\"y\":0.01029263739441489},{\"x\":-8.51432900369538,\"y\":0.01582176753718583},{\"x\":-8.407895722771222,\"y\":0.02349337124729787},{\"x\":-8.301462441847068,\"y\":0.03148723665539079},{\"x\":-8.19502916092291,\"y\":0.04229521494012638},{\"x\":-8.088595879998756,\"y\":0.05088927673620994},{\"x\":-7.982162599074602,\"y\":0.06058601576744385},{\"x\":-7.875729318150444,\"y\":0.07884780418069719},{\"x\":-7.76929603722629,\"y\":0.08976297413709744},{\"x\":-7.662862756302136,\"y\":0.09366518518660133},{\"x\":-7.556429475377978,\"y\":0.1001846920377332},{\"x\":-7.449996194453824,\"y\":0.09914333295552603},{\"x\":-7.343562913529667,\"y\":0.08173284927529047},{\"x\":-7.237129632605512,\"y\":0.06389772686423582},{\"x\":-7.130696351681358,\"y\":0.04593496380195933},{\"x\":-7.0242630707572,\"y\":0.02856160247452114},{\"x\":-6.917829789833046,\"y\":0.01974862878138528},{\"x\":-6.811396508908892,\"y\":0.01317077167152741},{\"x\":-6.704963227984734,\"y\":0.008271365051586172},{\"x\":-6.59852994706058,\"y\":0.005706264214355387},{\"x\":-6.492096666136423,\"y\":0.003971650922317317},{\"x\":-6.385663385212268,\"y\":0.00314948424570501},{\"x\":-6.279230104288114,\"y\":0.00216600102619874},{\"x\":-6.172796823363957,\"y\":0.001435642869017185},{\"x\":-6.066363542439802,\"y\":0.001596480364140489},{\"x\":-5.959930261515648,\"y\":0.0008024993571010498},{\"x\":-5.85349698059149,\"y\":0.0005237812278061661},{\"x\":-5.747063699667336,\"y\":0.0006079127231212505},{\"x\":-5.640630418743182,\"y\":0.0007574405039226263},{\"x\":-5.534197137819024,\"y\":0.0001272092582857762},{\"x\":-5.42776385689487,\"y\":0.0001389283174793783},{\"x\":-5.321330575970713,\"y\":0.0003639945585984512},{\"x\":-5.214897295046558,\"y\":0.0002326656072379481},{\"x\":-5.108464014122404,\"y\":7.964123050165071e-06},{\"x\":-5.002030733198247,\"y\":3.707976345762416e-10},{\"x\":-4.895597452274092,\"y\":3.010807390195935e-17},{\"x\":-4.789164171349938,\"y\":8.995637632607142e-18},{\"x\":-4.682730890425781,\"y\":3.689563747246936e-19},{\"x\":-4.576297609501626,\"y\":8.922597351441457e-19},{\"x\":-4.469864328577469,\"y\":0},{\"x\":-4.363431047653314,\"y\":0},{\"x\":-4.25699776672916,\"y\":0},{\"x\":-4.150564485805003,\"y\":0},{\"x\":-4.044131204880848,\"y\":0},{\"x\":-3.937697923956694,\"y\":1.491492523559619e-18},{\"x\":-3.831264643032537,\"y\":4.466901422523332e-18},{\"x\":-3.724831362108382,\"y\":9.550716923216031e-19},{\"x\":-3.618398081184225,\"y\":3.053550321747935e-18},{\"x\":-3.511964800260071,\"y\":0},{\"x\":-3.405531519335916,\"y\":0},{\"x\":-3.299098238411759,\"y\":1.413075158655908e-18},{\"x\":-3.192664957487604,\"y\":9.104512795343875e-18},{\"x\":-3.08623167656345,\"y\":1.839093896061703e-17},{\"x\":-2.979798395639293,\"y\":2.383104596251142e-17},{\"x\":-2.873365114715138,\"y\":1.780345421740026e-10},{\"x\":-2.766931833790984,\"y\":3.736065580214326e-06},{\"x\":-2.660498552866827,\"y\":0.0001196372128730069},{\"x\":-2.554065271942672,\"y\":0.0005478263277586093},{\"x\":-2.447631991018515,\"y\":0.0004805430709999919},{\"x\":-2.341198710094361,\"y\":0.0007449186054918608},{\"x\":-2.234765429170206,\"y\":0.000399438904829102},{\"x\":-2.128332148246049,\"y\":0.0004736575856081887},{\"x\":-2.021898867321894,\"y\":0.000942995055572752},{\"x\":-1.91546558639774,\"y\":0.001374230973858001},{\"x\":-1.809032305473583,\"y\":0.001651509921326687},{\"x\":-1.702599024549428,\"y\":0.001436337844426849},{\"x\":-1.596165743625271,\"y\":0.00131269631681705},{\"x\":-1.489732462701117,\"y\":0.002718253273673628},{\"x\":-1.383299181776962,\"y\":0.005600627815412377},{\"x\":-1.276865900852805,\"y\":0.006060797915728822},{\"x\":-1.170432619928651,\"y\":0.0080488588827759},{\"x\":-1.063999339004496,\"y\":0.01634904108771909},{\"x\":-0.9575660580803387,\"y\":0.02499397002003626},{\"x\":-0.8511327771561845,\"y\":0.04121317574905921},{\"x\":-0.7446994962320268,\"y\":0.07612164327342598},{\"x\":-0.6382662153078726,\"y\":0.1371365862441365},{\"x\":-0.5318329343837185,\"y\":0.2079896872610552},{\"x\":-0.4253996534595608,\"y\":0.2461607124114758},{\"x\":-0.3189663725354066,\"y\":0.3585745112539854},{\"x\":-0.2125330916112524,\"y\":0.5447278747445833},{\"x\":-0.1060998106870947,\"y\":0.9228103900729434},{\"x\":0.00033347023705943,\"y\":1.966834199048913},{\"x\":0.1067667511612171,\"y\":1.535251932663382},{\"x\":0.2132000320853713,\"y\":0.8129360927530731},{\"x\":0.3196333130095255,\"y\":0.3479905416782688},{\"x\":0.4260665939336832,\"y\":0.1445022200501067},{\"x\":0.5324998748578373,\"y\":0.0729392862898621},{\"x\":0.6389331557819915,\"y\":0.03778662656219733},{\"x\":0.7453664367061492,\"y\":0.02264908328355709},{\"x\":0.8517997176303034,\"y\":0.01678807954400135},{\"x\":0.9582329985544575,\"y\":0.01623103562173297},{\"x\":1.064666279478615,\"y\":0.01270632431557676},{\"x\":1.171099560402769,\"y\":0.01705001634190689},{\"x\":1.277532841326927,\"y\":0.01936000693617541},{\"x\":1.383966122251081,\"y\":0.02900123528110943},{\"x\":1.490399403175235,\"y\":0.04293120112865817},{\"x\":1.596832684099393,\"y\":0.04268966443706181},{\"x\":1.703265965023547,\"y\":0.02602314117367226},{\"x\":1.809699245947701,\"y\":0.01436895856374732},{\"x\":1.916132526871859,\"y\":0.006528976813444309},{\"x\":2.022565807796013,\"y\":0.003731678063400659},{\"x\":2.128999088720171,\"y\":0.003457303596380558},{\"x\":2.235432369644325,\"y\":0.003471001888833391},{\"x\":2.341865650568479,\"y\":0.001989131278454364},{\"x\":2.448298931492637,\"y\":0.0009454347230841728},{\"x\":2.554732212416791,\"y\":0.001010720194253916},{\"x\":2.661165493340945,\"y\":0.0004803616725829885},{\"x\":2.767598774265103,\"y\":0.001273163209424202},{\"x\":2.874032055189257,\"y\":0.0005590808088373118},{\"x\":2.980465336113415,\"y\":7.224328075650896e-05},{\"x\":3.086898617037569,\"y\":2.006142061650384e-06},{\"x\":3.193331897961723,\"y\":9.632251750501461e-11},{\"x\":3.299765178885881,\"y\":0},{\"x\":3.406198459810035,\"y\":0},{\"x\":3.512631740734189,\"y\":0},{\"x\":3.619065021658347,\"y\":0},{\"x\":3.725498302582501,\"y\":0},{\"x\":3.831931583506659,\"y\":0},{\"x\":3.938364864430813,\"y\":0},{\"x\":4.044798145354967,\"y\":0},{\"x\":4.151231426279125,\"y\":0},{\"x\":4.257664707203279,\"y\":0},{\"x\":4.364097988127433,\"y\":0},{\"x\":4.470531269051591,\"y\":0},{\"x\":4.576964549975745,\"y\":0},{\"x\":4.683397830899899,\"y\":2.060796796981356e-18},{\"x\":4.789831111824057,\"y\":1.256426509096785e-17},{\"x\":4.896264392748211,\"y\":2.173716807204791e-17},{\"x\":5.002697673672369,\"y\":2.39049437244261e-17},{\"x\":5.109130954596523,\"y\":2.76316744842501e-17},{\"x\":5.215564235520677,\"y\":8.660329646667384e-17},{\"x\":5.321997516444831,\"y\":4.840200359673966e-17},{\"x\":5.428430797368989,\"y\":1.036380205083874e-17},{\"x\":5.534864078293147,\"y\":1.259382850922228e-17},{\"x\":5.641297359217297,\"y\":2.76872198485642e-10},{\"x\":5.747730640141455,\"y\":5.949757062333393e-06},{\"x\":5.854163921065613,\"y\":0.0002088954491239032},{\"x\":5.960597201989764,\"y\":0.001273977548184013},{\"x\":6.067030482913921,\"y\":0.001070452174329129},{\"x\":6.173463763838079,\"y\":0.000683117823946904},{\"x\":6.279897044762237,\"y\":0.0009765343065696387},{\"x\":6.386330325686387,\"y\":0.003251493904029156},{\"x\":6.492763606610545,\"y\":0.004270169678613398},{\"x\":6.599196887534703,\"y\":0.006287315027882484},{\"x\":6.705630168458853,\"y\":0.01350414720724791},{\"x\":6.812063449383011,\"y\":0.01695235691968635},{\"x\":6.918496730307169,\"y\":0.02166389377293526},{\"x\":7.024930011231319,\"y\":0.029171404309117},{\"x\":7.131363292155477,\"y\":0.04166939368397728},{\"x\":7.237796573079635,\"y\":0.05746318771254236},{\"x\":7.344229854003785,\"y\":0.0669331683923181},{\"x\":7.450663134927943,\"y\":0.07720791282811196},{\"x\":7.557096415852101,\"y\":0.08456614581650194},{\"x\":7.663529696776251,\"y\":0.08463796734635477},{\"x\":7.769962977700409,\"y\":0.08315648540240529},{\"x\":7.876396258624567,\"y\":0.07666424379441565},{\"x\":7.982829539548717,\"y\":0.06622378751593093},{\"x\":8.089262820472875,\"y\":0.05343606081983163},{\"x\":8.195696101397033,\"y\":0.04181077149385507},{\"x\":8.302129382321191,\"y\":0.0295183296835676},{\"x\":8.408562663245341,\"y\":0.01757104933414257},{\"x\":8.514995944169499,\"y\":0.01271781854771781},{\"x\":8.621429225093657,\"y\":0.01231412862979862},{\"x\":8.727862506017807,\"y\":0.0107260885404118},{\"x\":8.834295786941965,\"y\":0.007567125399431285},{\"x\":8.940729067866123,\"y\":0.005125081374570311},{\"x\":9.047162348790273,\"y\":0.00389231004986969},{\"x\":9.153595629714431,\"y\":0.003463113683416647},{\"x\":9.260028910638589,\"y\":0.003063145611212112},{\"x\":9.366462191562739,\"y\":0.002319698537721423},{\"x\":9.472895472486897,\"y\":0.001837590663257505},{\"x\":9.579328753411055,\"y\":0.001618475328281941},{\"x\":9.685762034335205,\"y\":0.00122184017002414},{\"x\":9.792195315259363,\"y\":0.001565945882950203},{\"x\":9.898628596183521,\"y\":0.002147240184034358},{\"x\":10.00506187710768,\"y\":0.001623275500214008},{\"x\":10.11149515803183,\"y\":0.001289268288499412},{\"x\":10.21792843895599,\"y\":0.0008951358075944165},{\"x\":10.32436171988014,\"y\":0.0007039897934807738},{\"x\":10.4307950008043,\"y\":0.0007544618937011267},{\"x\":10.53722828172845,\"y\":0.0002342196272302788},{\"x\":10.64366156265261,\"y\":5.618735250260665e-05},{\"x\":10.75009484357676,\"y\":0.0003154846331748426},{\"x\":10.85652812450092,\"y\":0.0003661234042917397},{\"x\":10.96296140542508,\"y\":1.28799791989397e-05},{\"x\":11.06939468634923,\"y\":6.004346408755609e-10},{\"x\":11.17582796727338,\"y\":0},{\"x\":11.28226124819754,\"y\":0},{\"x\":11.38869452912169,\"y\":3.565443208707653e-18},{\"x\":11.49512781004585,\"y\":1.19555178789715e-10},{\"x\":11.60156109097001,\"y\":2.548764172135502e-06},{\"x\":11.70799437189416,\"y\":8.072960328158486e-05},{\"x\":11.81442765281832,\"y\":0.0003237067474407264},{\"x\":11.92086093374247,\"y\":0.0005882895523852996},{\"x\":12.02729421466663,\"y\":0.0004727470529339355},{\"x\":12.13372749559078,\"y\":2.092323733241604e-05},{\"x\":12.24016077651494,\"y\":1.652601955200846e-07},{\"x\":12.3465940574391,\"y\":7.660466532929136e-12},{\"x\":12.45302733836325,\"y\":2.14922548289365e-17},{\"x\":12.55946061928741,\"y\":2.169590286795256e-10},{\"x\":12.66589390021156,\"y\":4.610670402400308e-06},{\"x\":12.77232718113572,\"y\":0.0001528312810661079},{\"x\":12.87876046205987,\"y\":0.0007881828347767771},{\"x\":12.98519374298403,\"y\":0.001190413075232649},{\"x\":13.09162702390818,\"y\":0.0003929880442831961},{\"x\":13.19806030483234,\"y\":0.0004393733399387812},{\"x\":13.3044935857565,\"y\":0.0001793987661091061},{\"x\":13.41092686668065,\"y\":0.000452192727929257},{\"x\":13.5173601476048,\"y\":0.000119057340953552},{\"x\":13.62379342852896,\"y\":1.27340753581128e-05},{\"x\":13.73022670945312,\"y\":0.0002878184411069586},{\"x\":13.83665999037727,\"y\":0.001261753296809395},{\"x\":13.94309327130143,\"y\":0.001867138854642237},{\"x\":14.04952655222559,\"y\":0.00215145589249377},{\"x\":14.15595983314974,\"y\":0.004128334054922497},{\"x\":14.26239311407389,\"y\":0.007281220097840191},{\"x\":14.36882639499805,\"y\":0.008679096330068652},{\"x\":14.4752596759222,\"y\":0.008662196754529998},{\"x\":14.58169295684636,\"y\":0.008097125463273597},{\"x\":14.68812623777052,\"y\":0.008531262454499811},{\"x\":14.79455951869467,\"y\":0.009639650360035645},{\"x\":14.90099279961883,\"y\":0.01241231583546022},{\"x\":15.00742608054298,\"y\":0.01242577736561261},{\"x\":15.11385936146714,\"y\":0.01340550588373333},{\"x\":15.22029264239129,\"y\":0.01125899646031595},{\"x\":15.32672592331545,\"y\":0.0126268588313489},{\"x\":15.4331592042396,\"y\":0.01437883698220714},{\"x\":15.53959248516376,\"y\":0.01278170984259917},{\"x\":15.64602576608792,\"y\":0.01252292906053897},{\"x\":15.75245904701207,\"y\":0.01008630683406375},{\"x\":15.85889232793622,\"y\":0.009075673221720246},{\"x\":15.96532560886038,\"y\":0.006889841210132665},{\"x\":16.07175888978454,\"y\":0.007442553700499283},{\"x\":16.17819217070869,\"y\":0.006265133441917973},{\"x\":16.28462545163285,\"y\":0.003292294899851362},{\"x\":16.39105873255701,\"y\":0.003469323275293424},{\"x\":16.49749201348116,\"y\":0.002658789734620211},{\"x\":16.60392529440531,\"y\":0.002465050166910185},{\"x\":16.71035857532947,\"y\":0.001265440856938608},{\"x\":16.81679185625362,\"y\":0.001408927624304387},{\"x\":16.92322513717778,\"y\":0.001174724720209639},{\"x\":17.02965841810194,\"y\":0.002046332783916094},{\"x\":17.13609169902609,\"y\":0.0004874758193161141},{\"x\":17.24252497995025,\"y\":0.0007329596699128609},{\"x\":17.3489582608744,\"y\":0.0006841884380101058},{\"x\":17.45539154179856,\"y\":4.192943515300349e-05},{\"x\":17.56182482272271,\"y\":0.0003085981777517924},{\"x\":17.66825810364687,\"y\":0.00101190008012096},{\"x\":17.77469138457103,\"y\":0.0009410529536534452},{\"x\":17.88112466549518,\"y\":0.002701860999914726},{\"x\":17.98755794641934,\"y\":0.0015185050801246},{\"x\":18.09399122734349,\"y\":0.001115573019367058},{\"x\":18.20042450826764,\"y\":0.0007753988069722709},{\"x\":18.3068577891918,\"y\":0.0005223461992230043},{\"x\":18.41329107011596,\"y\":4.129940746925659e-05},{\"x\":18.51972435104011,\"y\":0.0003551627829669607},{\"x\":18.62615763196427,\"y\":0.0003510622868706869},{\"x\":18.73259091288843,\"y\":3.601697700841893e-05},{\"x\":18.83902419381258,\"y\":0.0003084106318452843},{\"x\":18.94545747473673,\"y\":0.0007917275488105131},{\"x\":19.05189075566089,\"y\":0.0003718319757795903},{\"x\":19.15832403658504,\"y\":0.0007428432093489355},{\"x\":19.2647573175092,\"y\":0.00167140689042759},{\"x\":19.37119059843336,\"y\":0.0005234556871159029},{\"x\":19.47762387935752,\"y\":4.695425509064065e-05},{\"x\":19.58405716028167,\"y\":1.155749729449493e-06},{\"x\":19.69049044120582,\"y\":2.882856235535301e-10},{\"x\":19.79692372212998,\"y\":4.980315683434302e-06},{\"x\":19.90335700305413,\"y\":0.0001556411160382039},{\"x\":20.00979028397829,\"y\":0.0004998089917638484},{\"x\":20.11622356490245,\"y\":8.170759544355387e-05},{\"x\":20.2226568458266,\"y\":1.348579205933346e-05},{\"x\":20.32909012675076,\"y\":0.0003186005691969188},{\"x\":20.43552340767491,\"y\":0.0003573061044262418},{\"x\":20.54195668859906,\"y\":0.000216325344102219},{\"x\":20.64838996952322,\"y\":0.000483322447522478},{\"x\":20.75482325044738,\"y\":9.94125678157978e-05},{\"x\":20.86125653137153,\"y\":1.985998426399636e-05},{\"x\":20.96768981229569,\"y\":0.0004806322890506603},{\"x\":21.07412309321985,\"y\":0.0004887402313525885},{\"x\":21.180556374144,\"y\":0.0006611559854903617},{\"x\":21.28698965506815,\"y\":0.0004871864539742304},{\"x\":21.39342293599231,\"y\":9.621912661963349e-05},{\"x\":21.49985621691647,\"y\":2.946748906228466e-06},{\"x\":21.60628949784062,\"y\":2.151132245783957e-05},{\"x\":21.71272277876478,\"y\":0.0006267358479735851},{\"x\":21.81915605968894,\"y\":0.0009352349778824827},{\"x\":21.92558934061309,\"y\":0.0009805549690062765},{\"x\":22.03202262153724,\"y\":0.001036372888552056},{\"x\":22.1384559024614,\"y\":0.001484366782248967},{\"x\":22.24488918338555,\"y\":0.001464697939539535},{\"x\":22.35132246430971,\"y\":0.00111478247954378},{\"x\":22.45775574523387,\"y\":0.001410416429422254},{\"x\":22.56418902615802,\"y\":0.0005624755021568825},{\"x\":22.67062230708218,\"y\":0.0005064506050535699},{\"x\":22.77705558800633,\"y\":0.0005551970691806238},{\"x\":22.88348886893048,\"y\":0.001043588986760823},{\"x\":22.98992214985464,\"y\":0.001366415872872972},{\"x\":23.0963554307788,\"y\":0.002082841925048956},{\"x\":23.20278871170296,\"y\":0.001760830001149091},{\"x\":23.30922199262711,\"y\":0.0008543898878806507},{\"x\":23.41565527355127,\"y\":0.0009823707233283961},{\"x\":23.52208855447542,\"y\":0.001038624081543086},{\"x\":23.62852183539957,\"y\":0.001716146168795818},{\"x\":23.73495511632373,\"y\":0.001716113523615699},{\"x\":23.84138839724789,\"y\":0.0007563900011949307},{\"x\":23.94782167817204,\"y\":0.0009472919057077168},{\"x\":24.0542549590962,\"y\":0.0009720709190175997},{\"x\":24.16068824002036,\"y\":0.000835934983855913},{\"x\":24.26712152094451,\"y\":0.0008893486149131764},{\"x\":24.37355480186866,\"y\":0.0006617469071369712},{\"x\":24.47998808279282,\"y\":0.000514513914657109},{\"x\":24.58642136371697,\"y\":0.0003930346791802577},{\"x\":24.69285464464113,\"y\":0.0008609421423729194},{\"x\":24.79928792556529,\"y\":0.001332544743007082},{\"x\":24.90572120648944,\"y\":0.0008651173799635969},{\"x\":25.0121544874136,\"y\":0.0007871461927754443},{\"x\":25.11858776833775,\"y\":0.0004146517422920244},{\"x\":25.22502104926191,\"y\":1.412912960758354e-05},{\"x\":25.33145433018606,\"y\":6.616452142983042e-10},{\"x\":25.43788761111022,\"y\":4.270502111616498e-17},{\"x\":25.54432089203438,\"y\":1.323145331866716e-17},{\"x\":25.65075417295853,\"y\":7.229928154599245e-17},{\"x\":25.75718745388269,\"y\":4.426750009531488e-10},{\"x\":25.86362073480684,\"y\":9.488278635350801e-06},{\"x\":25.97005401573099,\"y\":0.0002735410982282074},{\"x\":26.07648729665515,\"y\":0.0003595035724203698},{\"x\":26.18292057757931,\"y\":0.0004840092909750192},{\"x\":26.28935385850346,\"y\":0.00101016416760743},{\"x\":26.39578713942762,\"y\":0.0008922625674767},{\"x\":26.50222042035178,\"y\":0.0004709535032074409},{\"x\":26.60865370127593,\"y\":0.0002155881079964526},{\"x\":26.71508698220008,\"y\":7.264952941272762e-06},{\"x\":26.82152026312424,\"y\":9.829026267138521e-06},{\"x\":26.9279535440484,\"y\":0.0002831592051397791},{\"x\":27.03438682497255,\"y\":0.0003631982685089492},{\"x\":27.14082010589671,\"y\":8.571746884921819e-05},{\"x\":27.24725338682087,\"y\":2.651346555588857e-06},{\"x\":27.35368666774502,\"y\":8.264722996313425e-06},{\"x\":27.46011994866917,\"y\":0.0002401908894174369},{\"x\":27.56655322959333,\"y\":0.0003702567684088773},{\"x\":27.67298651051748,\"y\":0.0001218898777896673}],\"type\":null,\"name\":\"25fmol_vs_10fmol_logFC\"}],\"annotations\":[{\"labelOptions\":{\"shape\":\"connector\",\"backgroundColor\":\"lightgrey\",\"align\":\"left\",\"style\":{\"fontSize\":\"1.5em\",\"textOutline\":\"1px white\"},\"borderWidth\":0,\"x\":20},\"labels\":[{\"point\":{\"xAxis\":0,\"yAxis\":0,\"x\":0,\"y\":1.966834199048913},\"text\":\"n Filtered out = 10112<br>(72.65%)\"}]},{\"labelOptions\":{\"shape\":\"connector\",\"backgroundColor\":\"rgba(255,255,255,0.5)\",\"verticalAlign\":\"top\",\"borderWidth\":0,\"crop\":true,\"style\":{\"color\":\"blue\",\"fontSize\":\"1.5em\",\"textOutline\":\"1px white\"},\"y\":-10},\"labels\":[{\"point\":{\"xAxis\":0,\"yAxis\":0,\"x\":-13.85721002086298,\"y\":0.0001218898777896514},\"text\":\"nInf = 1833<br>(13.17)%\"}]},{\"labelOptions\":{\"shape\":\"connector\",\"backgroundColor\":\"blue\",\"verticalAlign\":\"top\",\"borderWidth\":0,\"style\":{\"color\":\"blue\",\"fontSize\":\"1.5em\",\"textOutline\":\"1px white\"},\"y\":-5},\"labels\":[{\"point\":{\"xAxis\":0,\"yAxis\":0,\"x\":14.33649325525874,\"y\":0.01270632431557676},\"text\":\"nSup = 1974<br>(14.18)%\"}]}]},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/import-export-QFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an object of class QFeatures from text file. — createQFeatures","title":"Creates an object of class QFeatures from text file. — createQFeatures","text":"Creates object class QFeatures single tabulated-like file quantitative meta-data dataframe samples description.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/import-export-QFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an object of class QFeatures from text file. — createQFeatures","text":"","code":"createQFeatures(   data = NULL,   file = \"myDataset\",   sample,   indQData,   keyId = \"AutoID\",   indexForMetacell = NULL,   logData = FALSE,   force.na = TRUE,   typeDataset,   parentProtId = NULL,   analysis = \"foo\",   description = NULL,   processes = NULL,   typePipeline = NULL,   software = NULL,   name = \"original\" )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/import-export-QFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an object of class QFeatures from text file. — createQFeatures","text":"data name tab-separated file contains data. file character(1). name file xxx sample dataframe describing samples (lines). indQData vector string element name column designTable integrated rowData() table QFeatures object. keyId character(1) numeric(1) indice column containing ID entities (peptides proteins) indexForMetacell must order samples experimental design logData xxx force.na boolean indicates '0' 'NaN' values quantitative values  must replaced 'NA' (Default FALSE) typeDataset string indicates whether dataset parentProtId character(1) peptide entities, string name column rowData. contains id parent proteins used generate adjacency matrix process aggregation. analysis character(1) name MS study. description text describes study. processes vector character() contains name processes already run data. Default 'original'. typePipeline character(1) type pipeline used dataset. list predefined pipelines DaparToolshed can obtained function pipelines(). Default value NULL software character(1) name character(1) name assay QFeatures object. Default 'original'","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/import-export-QFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an object of class QFeatures from text file. — createQFeatures","text":"instance class QFeatures.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/import-export-QFeatures.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates an object of class QFeatures from text file. — createQFeatures","text":"Samuel Wieczorek, Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/import-export-QFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an object of class QFeatures from text file. — createQFeatures","text":"","code":"data.file <- system.file(\"extdata\", \"Exp1_R25_pept.txt\", package = \"DaparToolshedData\")  data <- read.table(data.file, header = TRUE, sep = \"\\t\", as.is = TRUE, stringsAsFactors = FALSE)   qdata.indices <- 56:61 qdata.names <- colnames(data)[qdata.indices]   sample.file <- system.file(\"extdata\", \"samples_Exp1_R25.txt\", package = \"DaparToolshedData\")  sample <- read.table(sample.file, header = TRUE, sep = \" \", as.is = TRUE, stringsAsFactors = FALSE)   metacell.indices <- 43:48 metacell.names <- colnames(data)[metacell.indices]    ft <- createQFeatures(file = data.file,   data = data,    sample = sample,   indQData = 56:61,   keyId = \"Sequence\",   analysis = \"test\",   logData = TRUE,   indexForMetacell = as.numeric(43:48),   typeDataset = \"peptide\",   parentProtId = \"Protein_group_IDs\",   force.na = TRUE,   software = \"maxquant\"   ) #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object. #> Setting assay rownames.   ft <- createQFeatures(file = data.file,   data = data,    sample = sample,   indQData = 56:61,   keyId = \"Sequence\",   analysis = \"test\",   logData = TRUE,   typeDataset = \"peptide\",   parentProtId = \"Protein_group_IDs\",   force.na = TRUE,   software = \"maxquant\" ) #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object. #> Setting assay rownames.     ft <- createQFeatures(file = data.file,   data = data,    sample = sample,   indQData = qdata.names,   keyId = \"Sequence\",   analysis = \"test\",   indexForMetacell = metacell.names,   typeDataset = \"peptide\",   parentProtId = \"Protein_group_IDs\",   force.na = TRUE,   software = \"maxquant\") #> Checking arguments. #> Loading data as a 'SummarizedExperiment' object. #> Formatting sample annotations (colData). #> Formatting data as a 'QFeatures' object. #> Setting assay rownames."},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/impute.pa2.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing values imputation from a MSnSet object — impute.pa2","title":"Missing values imputation from a MSnSet object — impute.pa2","text":"method variation function impute.pa() package imp4p.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/impute.pa2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing values imputation from a MSnSet object — impute.pa2","text":"","code":"impute.pa2(   tab,   conditions,   q.min = 0,   q.norm = 3,   eps = 0,   distribution = \"unif\" )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/impute.pa2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing values imputation from a MSnSet object — impute.pa2","text":"tab object class MSnSet. conditions vector conditions dataset q.min quantile value observed values allowing defining maximal value can generated. maximal value defined quantile q.min observed values distribution minus eps. Default 0 (maximal value minimum observed values minus eps). q.norm quantile value normal distribution allowing defining minimal value can generated. Default 3 (minimal value maximal value minus qn*median(sd(observed values)) sd standard deviation row condition). eps value allowing defining maximal value can generated. maximal value defined quantile q.min observed values distribution minus eps. Default 0. distribution type distribution used. Values unif beta.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/impute.pa2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing values imputation from a MSnSet object — impute.pa2","text":"object obj imputed","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/impute.pa2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Missing values imputation from a MSnSet object — impute.pa2","text":"Thomas Burger, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/impute.pa2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing values imputation from a MSnSet object — impute.pa2","text":"","code":"library(QFeatures) utils::data(Exp1_R25_pept, package = \"DaparToolshedData\") qdata <- assay(Exp1_R25_pept[[1]]) conds <- design.qf(Exp1_R25_pept)$Condition obj.imp <- impute.pa2(qdata, conds, distribution = \"beta\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.aggregate.iter.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation of quantitative data with redistribution of shared peptides — inner.aggregate.iter","title":"Aggregation of quantitative data with redistribution of shared peptides — inner.aggregate.iter","text":"function aggregate quantitative data using method redistribution shared peptides. Intensity shared peptides redistributed proportionally protein. Note function assumes intensities log-transformed.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.aggregate.iter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation of quantitative data with redistribution of shared peptides — inner.aggregate.iter","text":"","code":"inner.aggregate.iter(   pepData,   X,   init.method = \"Mean\",   method = \"Mean\",   n = NULL,   uniqueiter = FALSE,   topn_fun = \"Mean\",   max_iter = 500 )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.aggregate.iter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregation of quantitative data with redistribution of shared peptides — inner.aggregate.iter","text":"pepData matrix containing peptide intensities. X matrix acting adjacency matrix. init.method function used initializing aggregation. Available functions Sum, Mean, Median, medianPolish robustSummary. See details. method function used aggregation. Available functions Sum, Mean, Median, medianPolish robustSummary. See details. n numeric(1) specifying number peptides use protein. NULL, peptides considered. uniqueiter bole topn_fun function used determine choose top n peptides. Available functions Sum, Mean Median. See details. max_iter numeric(1) setting maximum number iteration.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.aggregate.iter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregation of quantitative data with redistribution of shared peptides — inner.aggregate.iter","text":"matrix containing aggregated values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.aggregate.iter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregation of quantitative data with redistribution of shared peptides — inner.aggregate.iter","text":"Available functions : Sum : base::rowSums() Mean : base::rowMeans() Median : matrixStats::rowMedians() medianPolish : MsCoreUtils::medianPolish(), available topn_fun. Note method takes significantly time others, parallelized efficient. robustSummary : MsCoreUtils::robustSummary(), available topn_fun. Note method takes significantly time others, parallelized efficient.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.aggregate.iter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Aggregation of quantitative data with redistribution of shared peptides — inner.aggregate.iter","text":"Samuel Wieczorek, Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.aggregate.iter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation of quantitative data with redistribution of shared peptides — inner.aggregate.iter","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] X <- BuildAdjacencyMatrix(obj[[length(obj)]]) qdata.agg <- inner.aggregate.iter(assay(obj[[length(obj)]]), X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean-based aggregation — inner.mean","title":"Mean-based aggregation — inner.mean","text":"Aggregation using mean method.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean-based aggregation — inner.mean","text":"","code":"inner.mean(pepData, X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean-based aggregation — inner.mean","text":"pepData matrix containing peptide intensities. X matrix acting adjacency matrix.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean-based aggregation — inner.mean","text":"matrix containing aggregated values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.mean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mean-based aggregation — inner.mean","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean-based aggregation — inner.mean","text":"","code":"if (FALSE) { # \\dontrun{ library(QFeatures) data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] X <- BuildAdjacencyMatrix(obj) i.mean <- inner.mean(assay(obj), X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.median.html","id":null,"dir":"Reference","previous_headings":"","what":"Median-based aggregation — inner.median","title":"Median-based aggregation — inner.median","text":"Aggregation using median method.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median-based aggregation — inner.median","text":"","code":"inner.median(pepData, X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median-based aggregation — inner.median","text":"pepData matrix containing peptide intensities. X matrix acting adjacency matrix.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median-based aggregation — inner.median","text":"matrix containing aggregated values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.median.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Median-based aggregation — inner.median","text":"Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.median.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median-based aggregation — inner.median","text":"","code":"if (FALSE) { # \\dontrun{ library(QFeatures) data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] X <- BuildAdjacencyMatrix(obj) i.mean <- inner.median(assay(obj), X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.medianpolish.html","id":null,"dir":"Reference","previous_headings":"","what":"medianPolish-based aggregation — inner.medianpolish","title":"medianPolish-based aggregation — inner.medianpolish","text":"Aggregation using medianPolish method. Note method parallelized efficient.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.medianpolish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"medianPolish-based aggregation — inner.medianpolish","text":"","code":"inner.medianpolish(pepData, X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.medianpolish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"medianPolish-based aggregation — inner.medianpolish","text":"pepData matrix containing peptide intensities. X matrix acting adjacency matrix.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.medianpolish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"medianPolish-based aggregation — inner.medianpolish","text":"matrix containing aggregated values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.medianpolish.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"medianPolish-based aggregation — inner.medianpolish","text":"Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.medianpolish.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"medianPolish-based aggregation — inner.medianpolish","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] X <- BuildAdjacencyMatrix(obj) i.mean <- inner.medianpolish(assay(obj), X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.robustsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"robustSummary-based aggregation — inner.robustsummary","title":"robustSummary-based aggregation — inner.robustsummary","text":"Aggregation using robustSummary method.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.robustsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"robustSummary-based aggregation — inner.robustsummary","text":"","code":"inner.robustsummary(pepData, X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.robustsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"robustSummary-based aggregation — inner.robustsummary","text":"pepData matrix containing peptide intensities. Note function assume data already log-transformed. X matrix acting adjacency matrix.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.robustsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"robustSummary-based aggregation — inner.robustsummary","text":"matrix containing aggregated values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.robustsummary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"robustSummary-based aggregation — inner.robustsummary","text":"Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.robustsummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"robustSummary-based aggregation — inner.robustsummary","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] X <- BuildAdjacencyMatrix(obj) i.mean <- inner.robustSummary(assay(obj), X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum-based aggregation — inner.sum","title":"Sum-based aggregation — inner.sum","text":"Aggregation using sum method.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum-based aggregation — inner.sum","text":"","code":"inner.sum(pepData, X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum-based aggregation — inner.sum","text":"pepData matrix containing peptide intensities. X matrix acting adjacency matrix.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum-based aggregation — inner.sum","text":"matrix containing aggregated values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.sum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sum-based aggregation — inner.sum","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/inner.sum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum-based aggregation — inner.sum","text":"","code":"if (FALSE) { # \\dontrun{ library(QFeatures) data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] X <- BuildAdjacencyMatrix(obj[[length(obj)]]) i.sum <- inner.sum(assay(obj[[length(obj)]]), X) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.OfType.html","id":null,"dir":"Reference","previous_headings":"","what":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — is.OfType","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — is.OfType","text":"Similar function .na() focused equality paramter 'type'.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.OfType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — is.OfType","text":"","code":"is.OfType(data, type)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.OfType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — is.OfType","text":"data data.frame type value search dataframe","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.OfType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — is.OfType","text":"boolean dataframe","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.OfType.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — is.OfType","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.OfType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — is.OfType","text":"","code":"library(QFeatures) data(ft, package='DaparToolshed') obj <- ft[[1]] data <- qMetacell(obj) is.OfType(as.data.frame(data), \"MEC\") #>   metacell_Sample_A_R1 metacell_Sample_A_R2 metacell_Sample_A_R3 #> 1                FALSE                FALSE                FALSE #> 2                FALSE                FALSE                FALSE #> 3                FALSE                FALSE                FALSE #> 4                FALSE                FALSE                FALSE #> 5                FALSE                FALSE                FALSE #> 6                FALSE                FALSE                FALSE #>   metacell_Sample_B_R1 metacell_Sample_B_R2 metacell_Sample_B_R3 #> 1                FALSE                FALSE                FALSE #> 2                FALSE                FALSE                FALSE #> 3                FALSE                FALSE                FALSE #> 4                FALSE                FALSE                FALSE #> 5                FALSE                FALSE                FALSE #> 6                FALSE                FALSE                FALSE"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.subset.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — is.subset","title":"xxx — is.subset","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — is.subset","text":"","code":"is.subset(set1, set2)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — is.subset","text":"set1 xxx set2 xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — is.subset","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/is.subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — is.subset","text":"","code":"is.subset('a', letters) #> [1] TRUE is.subset(c('a', 'c', 't'), letters) #> [1] TRUE is.subset(c('a', 3, 't'), letters) #> [1] FALSE is.subset(3, letters) #> [1] FALSE"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/limmaCompleteTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes a hierarchical differential analysis — limmaCompleteTest","title":"Computes a hierarchical differential analysis — limmaCompleteTest","text":"Computes hierarchical differential analysis","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/limmaCompleteTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes a hierarchical differential analysis — limmaCompleteTest","text":"","code":"limmaCompleteTest(qData, sTab, comp.type = \"OnevsOne\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/limmaCompleteTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes a hierarchical differential analysis — limmaCompleteTest","text":"qData matrix quantitative data, without missing values. sTab dataframe experimental design (design.qf()). comp.type string corresponds type comparison. Values : 'anova1way', 'OnevsOne' 'OnevsAll'; default 'OnevsOne'.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/limmaCompleteTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes a hierarchical differential analysis — limmaCompleteTest","text":"list two dataframes : logFC P_Value. first one contains logFC values comparisons (one column one comparison), second one contains pvalue comparisons (one column one comparison). names columns two dataframes identical correspond description comparison.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/limmaCompleteTest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes a hierarchical differential analysis — limmaCompleteTest","text":"Hélène Borges, Thomas Burger, Quentin Giai-Gianetto, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/limmaCompleteTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes a hierarchical differential analysis — limmaCompleteTest","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept qData <- as.matrix(SummarizedExperiment::assay(obj[[2]])) sTab <- SummarizedExperiment::colData(obj) limma <- limmaCompleteTest(qData, sTab, comp.type = \"anova1way\") #> Warning: Partial NA coefficients for 1020 probe(s)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds the contrast matrix — make.contrast","title":"Builds the contrast matrix — make.contrast","text":"Builds contrast matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds the contrast matrix — make.contrast","text":"","code":"make.contrast(design, condition, contrast = 1, design.level = 1)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds the contrast matrix — make.contrast","text":"design data.frame correspond colData() function package MultiAssayExperiment. condition xxxxx contrast integer Indicates test consists comparison biological condition versus ones (Contrast=1; example H0:\"C1=C2\" vs H1:\"C1!=C2\", etc.) condition versus others (Contrast=2; e.g.  H0:\"C1=(C2+C3)/2\" vs H1:\"C1!=(C2+C3)/2\", etc. three conditions). design.level xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds the contrast matrix — make.contrast","text":"contrast matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.contrast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Builds the contrast matrix — make.contrast","text":"Thomas Burger, Quentin Giai-Gianetto, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds the contrast matrix — make.contrast","text":"","code":"data(Exp1_R25_pept, package='DaparToolshedData') design <- make.design(SummarizedExperiment::colData(Exp1_R25_pept)) conds <- design.qf(Exp1_R25_pept)$Condition make.contrast(design, conds) #> [1] \"( ConditionA )/ 1 -( ConditionB )/ 1\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds the design matrix for designs of level 1 — make.design.1","title":"Builds the design matrix for designs of level 1 — make.design.1","text":"Builds design matrix designs level 1","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds the design matrix for designs of level 1 — make.design.1","text":"","code":"make.design.1(sTab)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds the design matrix for designs of level 1 — make.design.1","text":"sTab data.frame correspond pData() function package MSnbase.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds the design matrix for designs of level 1 — make.design.1","text":"design matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Builds the design matrix for designs of level 1 — make.design.1","text":"Thomas Burger, Quentin Giai-Gianetto, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds the design matrix for designs of level 1 — make.design.1","text":"","code":"data(Exp1_R25_pept, package='DaparToolshedData') make.design.1(SummarizedExperiment::colData(Exp1_R25_pept)) #>      ConditionA ConditionB #> [1,]          1          0 #> [2,]          1          0 #> [3,]          1          0 #> [4,]          0          1 #> [5,]          0          1 #> [6,]          0          1"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds the design matrix for designs of level 2 — make.design.2","title":"Builds the design matrix for designs of level 2 — make.design.2","text":"Builds design matrix designs level 2","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds the design matrix for designs of level 2 — make.design.2","text":"","code":"make.design.2(sTab)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds the design matrix for designs of level 2 — make.design.2","text":"sTab data.frame correspond colData() function package MSnbase.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds the design matrix for designs of level 2 — make.design.2","text":"design matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Builds the design matrix for designs of level 2 — make.design.2","text":"Thomas Burger, Quentin Giai-Gianetto, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds the design matrix for designs of level 2 — make.design.2","text":"","code":"data(Exp1_R25_pept, package='DaparToolshedData') make.design.2(SummarizedExperiment::colData(Exp1_R25_pept)) #>                Condition1.RepBio1 Condition1.RepBio2 Condition1.RepBio3 #> Intensity_C_R1                  1                  0                  0 #> Intensity_C_R2                  0                  1                  0 #> Intensity_C_R3                  0                  0                  1 #> Intensity_D_R1                  0                  0                  0 #> Intensity_D_R2                  0                  0                  0 #> Intensity_D_R3                  0                  0                  0 #>                Condition2.RepBio4 Condition2.RepBio5 Condition2.RepBio6 #> Intensity_C_R1                  0                  0                  0 #> Intensity_C_R2                  0                  0                  0 #> Intensity_C_R3                  0                  0                  0 #> Intensity_D_R1                  1                  0                  0 #> Intensity_D_R2                  0                  1                  0 #> Intensity_D_R3                  0                  0                  1"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds the design matrix for designs of level 3 — make.design.3","title":"Builds the design matrix for designs of level 3 — make.design.3","text":"Builds design matrix designs level 3","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds the design matrix for designs of level 3 — make.design.3","text":"","code":"make.design.3(sTab)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds the design matrix for designs of level 3 — make.design.3","text":"sTab data.frame correspond colData() function package MSnbase.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds the design matrix for designs of level 3 — make.design.3","text":"design matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Builds the design matrix for designs of level 3 — make.design.3","text":"Thomas Burger, Quentin Giai-Gianetto, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds the design matrix for designs of level 3 — make.design.3","text":"","code":"data(Exp1_R25_pept, package='DaparToolshedData') sTab <- cbind(SummarizedExperiment::colData(Exp1_R25_pept), Tech.Rep = 1:6) make.design.3(sTab) #>                Condition1.RepBio1.RepTech1 Condition1.RepBio2.RepTech2 #> Intensity_C_R1                           1                           0 #> Intensity_C_R2                           0                           1 #> Intensity_C_R3                           0                           0 #> Intensity_D_R1                           0                           0 #> Intensity_D_R2                           0                           0 #> Intensity_D_R3                           0                           0 #>                Condition1.RepBio3.RepTech3 Condition2.RepBio4.RepTech4 #> Intensity_C_R1                           0                           0 #> Intensity_C_R2                           0                           0 #> Intensity_C_R3                           1                           0 #> Intensity_D_R1                           0                           1 #> Intensity_D_R2                           0                           0 #> Intensity_D_R3                           0                           0 #>                Condition2.RepBio5.RepTech5 Condition2.RepBio6.RepTech6 #> Intensity_C_R1                           0                           0 #> Intensity_C_R2                           0                           0 #> Intensity_C_R3                           0                           0 #> Intensity_D_R1                           0                           0 #> Intensity_D_R2                           1                           0 #> Intensity_D_R3                           0                           1"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds the design matrix — make.design","title":"Builds the design matrix — make.design","text":"Builds design matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds the design matrix — make.design","text":"","code":"make.design(sTab)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds the design matrix — make.design","text":"sTab data.frame correspond pData() function package MSnbase.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds the design matrix — make.design","text":"design matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Builds the design matrix — make.design","text":"Thomas Burger, Quentin Giai-Gianetto, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/make.design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds the design matrix — make.design","text":"","code":"data(Exp1_R25_pept, package='DaparToolshedData') make.design(SummarizedExperiment::colData(Exp1_R25_pept)) #>      ConditionA ConditionB #> [1,]          1          0 #> [2,]          1          0 #> [3,]          1          0 #> [4,]          0          1 #> [5,]          0          1 #> [6,]          0          1"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/match.metacell.html","id":null,"dir":"Reference","previous_headings":"","what":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — match.metacell","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — match.metacell","text":"Similar function .na() focused equality paramter 'type'.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/match.metacell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — match.metacell","text":"","code":"match.metacell(metadata, pattern = NULL, level)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/match.metacell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — match.metacell","text":"metadata data.frame pattern value search dataframe level xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/match.metacell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — match.metacell","text":"boolean dataframe","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/match.metacell.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — match.metacell","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/match.metacell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Similar to the function is.na() but focused on the equality with the paramter 'type'. — match.metacell","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10), ] metadata <- qMetacell(obj[[1]]) m <- match.metacell(metadata, pattern = \"Missing\", level = \"peptide\") m <- match.metacell(metadata, pattern = 'Missing POV', level = \"peptide\") m <- match.metacell(metadata, pattern = c('Missing', 'Missing POV'), level = \"peptide\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell-plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot of missing values per lines using highcharter — metacell-plots","title":"Bar plot of missing values per lines using highcharter — metacell-plots","text":"method plots bar plot represents distribution number missing values (NA) per lines (ie proteins). Plots heatmap quantitative data. column represent one conditions object class obj color proportional mean intensity line dataset. lines sorted order vizualize easily different number missing values. white square plotted missing values. #' Plots heatmap quantitative data. column represent one conditions object class MsnSet color proportional mean intensity line dataset. lines sorted order vizualize easily different number missing values. white square plotted missing values. method shows density plots represents repartition Partial Observed Values replicate dataset. colors correspond different conditions (slot Condition dataset class MsnSet). x-axis represent mean intensity one condition one entity dataset (. e. protein) whereas y-axis count number observed values entity considered condition.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell-plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot of missing values per lines using highcharter — metacell-plots","text":"","code":"metacellPerLinesHisto_HC(   obj,   group,   pattern = NULL,   detailed = FALSE,   indLegend = \"auto\",   showValues = FALSE )  metacellPerLinesHistoPerCondition_HC(   obj,   group,   pattern = NULL,   indLegend = \"auto\",   showValues = FALSE,   pal = NULL )  metacellHisto_HC(   obj,   group = NULL,   pattern = NULL,   indLegend = \"auto\",   showValues = FALSE,   pal = NULL )  wrapper.mvImage(obj, group = NULL, pattern = \"Missing MEC\")  mvImage(obj, group)  hc_mvTypePlot2(obj, group, pal = NULL, pattern, typeofMV = NULL, title = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell-plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot of missing values per lines using highcharter — metacell-plots","text":"obj xxx group xxx pattern xxx detailed 'value' 'percent' indLegend xxx showValues logical indicates whether numeric values drawn bars. pal different colors conditions typeofMV xxx title title plot","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell-plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bar plot of missing values per lines using highcharter — metacell-plots","text":"bar plot heatmap heatmap Density plots","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell-plots.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bar plot of missing values per lines using highcharter — metacell-plots","text":"Florence Combes, Samuel Wieczorek Samuel Wieczorek, Alexia Dorffer Samuel Wieczorek, Thomas Burger Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell-plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bar plot of missing values per lines using highcharter — metacell-plots","text":"","code":"if (FALSE) { # interactive() data(ft_na) grp <- design.qf(ft_na)$Condition metacellPerLinesHisto_HC(ft_na[[1]], group = grp, pattern = \"Missing POV\") metacellPerLinesHisto_HC(ft_na[[1]]) metacellPerLinesHisto_HC(ft_na[[1]], group = grp, pattern = \"Quantified\") metacellPerLinesHisto_HC(ft_na[[1]], group = grp, pattern = \"Quant. by direct id\") metacellPerLinesHisto_HC(ft_na[[1]], group = grp, pattern = \"Quant. by recovery\") pattern <- c(\"Quantified\", \"Quant. by direct id\", \"Quant. by recovery\") metacellPerLinesHisto_HC(ft_na[[1]], group = grp, pattern = pattern)   metacellPerLinesHistoPerCondition_HC(ft_na[[1]], group = grp, pattern = \"Missing POV\") metacellPerLinesHistoPerCondition_HC(ft_na[[1]]) metacellPerLinesHistoPerCondition_HC(ft_na[[1]], group = grp, pattern = \"Quantified\") metacellPerLinesHistoPerCondition_HC(ft_na[[1]], group = grp, pattern = \"Quant. by direct id\") metacellPerLinesHistoPerCondition_HC(ft_na[[1]], group = grp, pattern = \"Quant. by recovery\") pattern <- c(\"Quantified\", \"Quant. by direct id\", \"Quant. by recovery\") metacellPerLinesHistoPerCondition_HC(ft_na[[1]], group = grp, pattern = pattern)   metacellHisto_HC(ft_na[[1]], group = grp, pattern = \"Missing POV\") metacellHisto_HC(ft_na[[1]]) metacellHisto_HC(ft_na[[1]], group = grp, pattern = \"Quantified\") metacellHisto_HC(ft_na[[1]], group = grp, pattern = \"Quant. by direct id\") metacellHisto_HC(ft_na[[1]], group = grp, pattern = \"Quant. by recovery\") pattern <- c(\"Quantified\", \"Quant. by direct id\", \"Quant. by recovery\") metacellHisto_HC(ft_na[[1]], group = grp, pattern = pattern)   } data(Exp1_R25_pept, package = 'DaparToolshedData') pattern <- \"Missing POV\" pal <- ExtendPalette(2, \"Dark2\") metacellHisto_HC(Exp1_R25_pept[[1]], pattern, showValues = TRUE, pal = pal) #> NULL  data(Exp1_R25_pept, package = 'DaparToolshedData') mvImage(Exp1_R25_pept[[1]], design.qf(Exp1_R25_pept)$Condition)   data(Exp1_R25_pept, package = 'DaparToolshedData') pal <- ExtendPalette(length(unique(design.qf(Exp1_R25_pept)$Condition)), \"Dark2\") pattern <- \"Missing MEC\" hc_mvTypePlot2(Exp1_R25_pept[[1]], group = design.qf(Exp1_R25_pept)$Condition, pattern = pattern, pal = pal)  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"type\":\"spline\",\"zoomType\":\"xy\",\"showAxes\":true,\"resetZoomButton\":{\"position\":{\"align\":\"left\",\"verticalAlign\":\"top\"}}},\"title\":[],\"yAxis\":{\"title\":{\"text\":\"Number of quantity values per condition\"},\"tickInterval\":0.5},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":true,\"filename\":\"Missing MEC_distribution\",\"buttons\":{\"contextButton\":{\"menuItems\":[\"downloadPNG\",\"downloadSVG\",\"downloadPDF\"]}}},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"showInLegend\":true,\"animation\":{\"duration\":100},\"connectNulls\":true,\"marker\":{\"enabled\":false}},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}},\"legend\":{\"align\":\"left\",\"verticalAlign\":\"top\",\"layout\":\"vertical\"},\"xAxis\":{\"title\":{\"text\":\"Mean of intensities\"}},\"tooltip\":{\"headerFormat\":\"\",\"pointFormat\":\"<b> {series.name} <\\/b>: {point.y} \",\"valueDecimals\":2},\"series\":[{\"data\":[],\"showInLegend\":false,\"color\":\"#1B9E77\",\"name\":\"25fmol\"},{\"data\":[],\"showInLegend\":false,\"color\":\"#1B9E77\",\"name\":\"25fmol\"},{\"data\":[{\"x\":-11822391.93894799,\"y\":3.000000001435245},{\"x\":4801818.936220756,\"y\":3.000000036112844},{\"x\":21426029.8113895,\"y\":3.000000025800093},{\"x\":38050240.68655825,\"y\":3.000000010201002},{\"x\":54674451.56172699,\"y\":3.000000005528974},{\"x\":71298662.43689573,\"y\":3.000000003580586},{\"x\":87922873.31206448,\"y\":3.000000002649069},{\"x\":104547084.1872332,\"y\":3.000000001929541},{\"x\":121171295.062402,\"y\":3.000000001449972},{\"x\":137795505.9375707,\"y\":3.00000000115035},{\"x\":154419716.8127395,\"y\":3.000000000866369},{\"x\":171043927.6879082,\"y\":3.000000000696822},{\"x\":187668138.563077,\"y\":3.000000000561932},{\"x\":204292349.4382457,\"y\":3.000000000441634},{\"x\":220916560.3134145,\"y\":3.000000000413033},{\"x\":237540771.1885832,\"y\":3.000000000320186},{\"x\":254164982.0637519,\"y\":3.00000000028123},{\"x\":270789192.9389207,\"y\":3.000000000327809},{\"x\":287413403.8140894,\"y\":3.000000000233087},{\"x\":304037614.6892582,\"y\":3.000000000248365},{\"x\":320661825.5644269,\"y\":3.00000000018917},{\"x\":337286036.4395956,\"y\":3.000000000151875},{\"x\":353910247.3147644,\"y\":3.00000000014904},{\"x\":370534458.1899331,\"y\":3.000000000158075},{\"x\":387158669.0651019,\"y\":3.000000000169135},{\"x\":403782879.9402707,\"y\":3.00000000014887},{\"x\":420407090.8154394,\"y\":3.00000000015322},{\"x\":437031301.6906081,\"y\":3.000000000100251},{\"x\":453655512.5657769,\"y\":3.000000000095344},{\"x\":470279723.4409456,\"y\":3.000000000085126},{\"x\":486903934.3161144,\"y\":3.000000000078402},{\"x\":503528145.1912831,\"y\":3.000000000114703},{\"x\":520152356.0664518,\"y\":3.000000000085757},{\"x\":536776566.9416206,\"y\":3.000000000075047},{\"x\":553400777.8167893,\"y\":3.000000000066771},{\"x\":570024988.6919581,\"y\":3.000000000074376},{\"x\":586649199.5671268,\"y\":3.000000000059781},{\"x\":603273410.4422956,\"y\":3.000000000048316},{\"x\":619897621.3174642,\"y\":3.000000000053637},{\"x\":636521832.192633,\"y\":3.000000000061707},{\"x\":653146043.0678017,\"y\":3.000000000070558},{\"x\":669770253.9429705,\"y\":3.000000000103397},{\"x\":686394464.8181392,\"y\":3.000000000069206},{\"x\":703018675.693308,\"y\":3.000000000040673},{\"x\":719642886.5684767,\"y\":3.000000000036909},{\"x\":736267097.4436455,\"y\":3.000000000044726},{\"x\":752891308.3188142,\"y\":3.000000000064194},{\"x\":769515519.193983,\"y\":3.000000000042919},{\"x\":786139730.0691518,\"y\":3.000000000043942},{\"x\":802763940.9443204,\"y\":3.000000000041665},{\"x\":819388151.8194892,\"y\":3.000000000050034},{\"x\":836012362.6946579,\"y\":3.000000000043044},{\"x\":852636573.5698267,\"y\":3.000000000061314},{\"x\":869260784.4449954,\"y\":3.000000000069605},{\"x\":885884995.3201642,\"y\":3.000000000051726},{\"x\":902509206.1953329,\"y\":3.000000000052943},{\"x\":919133417.0705017,\"y\":3.000000000054338},{\"x\":935757627.9456704,\"y\":3.000000000046869},{\"x\":952381838.8208392,\"y\":3.000000000049404},{\"x\":969006049.6960078,\"y\":3.000000000039591},{\"x\":985630260.5711766,\"y\":3.000000000022381},{\"x\":1002254471.446345,\"y\":3.000000000045567},{\"x\":1018878682.321514,\"y\":3.000000000039722},{\"x\":1035502893.196683,\"y\":3.000000000032015},{\"x\":1052127104.071852,\"y\":3.000000000029185},{\"x\":1068751314.94702,\"y\":3.000000000041135},{\"x\":1085375525.822189,\"y\":3.000000000055692},{\"x\":1101999736.697358,\"y\":3.000000000045069},{\"x\":1118623947.572527,\"y\":3.000000000045926},{\"x\":1135248158.447695,\"y\":3.000000000055902},{\"x\":1151872369.322864,\"y\":3.000000000048765},{\"x\":1168496580.198033,\"y\":3.000000000027538},{\"x\":1185120791.073202,\"y\":3.000000000028235},{\"x\":1201745001.94837,\"y\":3.000000000025039},{\"x\":1218369212.823539,\"y\":3.000000000029472},{\"x\":1234993423.698708,\"y\":3.000000000027248},{\"x\":1251617634.573877,\"y\":3.000000000026991},{\"x\":1268241845.449045,\"y\":3.000000000020215},{\"x\":1284866056.324214,\"y\":3.000000000022222},{\"x\":1301490267.199383,\"y\":3.000000000022676},{\"x\":1318114478.074552,\"y\":3.000000000030496},{\"x\":1334738688.94972,\"y\":3.000000000027144},{\"x\":1351362899.824889,\"y\":3.000000000036766},{\"x\":1367987110.700058,\"y\":3.00000000002882},{\"x\":1384611321.575227,\"y\":3.000000000017497},{\"x\":1401235532.450395,\"y\":3.000000000011782},{\"x\":1417859743.325564,\"y\":3.000000000011411},{\"x\":1434483954.200733,\"y\":3.000000000018547},{\"x\":1451108165.075902,\"y\":3.000000000024465},{\"x\":1467732375.95107,\"y\":3.000000000027799},{\"x\":1484356586.826239,\"y\":3.000000000022447},{\"x\":1500980797.701408,\"y\":3.00000000000805},{\"x\":1517605008.576576,\"y\":3.00000000000606},{\"x\":1534229219.451745,\"y\":3.000000000014246},{\"x\":1550853430.326914,\"y\":3.000000000011003},{\"x\":1567477641.202083,\"y\":3.000000000008584},{\"x\":1584101852.077252,\"y\":3.000000000008391},{\"x\":1600726062.95242,\"y\":3.000000000005423},{\"x\":1617350273.827589,\"y\":3.000000000008227},{\"x\":1633974484.702758,\"y\":3.000000000011211},{\"x\":1650598695.577927,\"y\":3.000000000008128},{\"x\":1667222906.453095,\"y\":3.00000000001261},{\"x\":1683847117.328264,\"y\":3.00000000001708},{\"x\":1700471328.203433,\"y\":3.000000000015425},{\"x\":1717095539.078602,\"y\":3.00000000001561},{\"x\":1733719749.95377,\"y\":3.00000000001013},{\"x\":1750343960.828939,\"y\":3.000000000010572},{\"x\":1766968171.704108,\"y\":3.000000000008329},{\"x\":1783592382.579277,\"y\":3.000000000009995},{\"x\":1800216593.454445,\"y\":3.000000000021598},{\"x\":1816840804.329614,\"y\":3.000000000023145},{\"x\":1833465015.204783,\"y\":3.000000000013487},{\"x\":1850089226.079952,\"y\":3.000000000003622},{\"x\":1866713436.95512,\"y\":3.000000000000002},{\"x\":1883337647.830289,\"y\":3.000000000006663},{\"x\":1899961858.705458,\"y\":3.000000000025828},{\"x\":1916586069.580626,\"y\":3.000000000031914},{\"x\":1933210280.455795,\"y\":3.000000000013268},{\"x\":1949834491.330964,\"y\":3.000000000000468},{\"x\":1966458702.206133,\"y\":3.000000000001289},{\"x\":1983082913.081301,\"y\":3.000000000008483},{\"x\":1999707123.95647,\"y\":3.000000000010359},{\"x\":2016331334.831639,\"y\":3.000000000003312},{\"x\":2032955545.706808,\"y\":3.000000000003018},{\"x\":2049579756.581976,\"y\":3.000000000003899},{\"x\":2066203967.457145,\"y\":3.000000000000899},{\"x\":2082828178.332314,\"y\":3.000000000008976},{\"x\":2099452389.207483,\"y\":3.000000000018263},{\"x\":2116076600.082651,\"y\":3.000000000016129},{\"x\":2132700810.95782,\"y\":3.000000000010276},{\"x\":2149325021.832989,\"y\":3.000000000005958},{\"x\":2165949232.708158,\"y\":3.000000000002911},{\"x\":2182573443.583326,\"y\":3},{\"x\":2199197654.458495,\"y\":3},{\"x\":2215821865.333663,\"y\":3},{\"x\":2232446076.208832,\"y\":3.000000000002819},{\"x\":2249070287.084001,\"y\":3.000000000004107},{\"x\":2265694497.95917,\"y\":3.000000000000888},{\"x\":2282318708.834339,\"y\":3.000000000001537},{\"x\":2298942919.709507,\"y\":3.000000000007276},{\"x\":2315567130.584676,\"y\":3.000000000009816},{\"x\":2332191341.459845,\"y\":3.000000000004285},{\"x\":2348815552.335013,\"y\":3.000000000000528},{\"x\":2365439763.210182,\"y\":3.000000000001419},{\"x\":2382063974.085351,\"y\":3.000000000003805},{\"x\":2398688184.96052,\"y\":3.000000000004448},{\"x\":2415312395.835689,\"y\":3.000000000004778},{\"x\":2431936606.710857,\"y\":3.000000000008129},{\"x\":2448560817.586026,\"y\":3.000000000007832},{\"x\":2465185028.461195,\"y\":3.000000000002163},{\"x\":2481809239.336363,\"y\":3.000000000003765},{\"x\":2498433450.211532,\"y\":3.000000000002732},{\"x\":2515057661.086701,\"y\":3.000000000002206},{\"x\":2531681871.96187,\"y\":3.000000000004278},{\"x\":2548306082.837039,\"y\":3.00000000000133},{\"x\":2564930293.712207,\"y\":3},{\"x\":2581554504.587376,\"y\":3},{\"x\":2598178715.462545,\"y\":3.0000000000021},{\"x\":2614802926.337713,\"y\":3.000000000005737},{\"x\":2631427137.212882,\"y\":3.000000000005229},{\"x\":2648051348.088051,\"y\":3.000000000002562},{\"x\":2664675558.96322,\"y\":3.000000000000001},{\"x\":2681299769.838388,\"y\":3.000000000002346},{\"x\":2697923980.713557,\"y\":3.000000000007435},{\"x\":2714548191.588726,\"y\":3.000000000005846},{\"x\":2731172402.463895,\"y\":3.000000000000001},{\"x\":2747796613.339064,\"y\":3.000000000000772},{\"x\":2764420824.214232,\"y\":3.00000000000336},{\"x\":2781045035.089401,\"y\":3.000000000003682},{\"x\":2797669245.96457,\"y\":3.000000000002145},{\"x\":2814293456.839738,\"y\":3.000000000009284},{\"x\":2830917667.714907,\"y\":3.00000000001373},{\"x\":2847541878.590076,\"y\":3.000000000009539},{\"x\":2864166089.465245,\"y\":3.000000000004373},{\"x\":2880790300.340414,\"y\":3.000000000000001},{\"x\":2897414511.215582,\"y\":3},{\"x\":2914038722.090751,\"y\":3.000000000000739},{\"x\":2930662932.965919,\"y\":3.000000000003308},{\"x\":2947287143.841088,\"y\":3.000000000003767},{\"x\":2963911354.716257,\"y\":3.000000000000238},{\"x\":2980535565.591426,\"y\":3.000000000002576},{\"x\":2997159776.466595,\"y\":3.000000000005939},{\"x\":3013783987.341763,\"y\":3.000000000003641},{\"x\":3030408198.216932,\"y\":3.000000000003235},{\"x\":3047032409.092101,\"y\":3},{\"x\":3063656619.967269,\"y\":3},{\"x\":3080280830.842438,\"y\":3},{\"x\":3096905041.717607,\"y\":3},{\"x\":3113529252.592776,\"y\":3},{\"x\":3130153463.467945,\"y\":3},{\"x\":3146777674.343113,\"y\":3},{\"x\":3163401885.218282,\"y\":3.000000000001117},{\"x\":3180026096.093451,\"y\":3.000000000004243},{\"x\":3196650306.968619,\"y\":3.000000000002453},{\"x\":3213274517.843788,\"y\":3},{\"x\":3229898728.718957,\"y\":3},{\"x\":3246522939.594126,\"y\":3},{\"x\":3263147150.469295,\"y\":3},{\"x\":3279771361.344463,\"y\":3},{\"x\":3296395572.219632,\"y\":3},{\"x\":3313019783.094801,\"y\":3},{\"x\":3329643993.969969,\"y\":3},{\"x\":3346268204.845138,\"y\":3.000000000002272},{\"x\":3362892415.720307,\"y\":3.000000000012937},{\"x\":3379516626.595476,\"y\":3.000000000016044},{\"x\":3396140837.470644,\"y\":3.000000000000003},{\"x\":3412765048.345813,\"y\":3},{\"x\":3429389259.220982,\"y\":3},{\"x\":3446013470.096151,\"y\":3},{\"x\":3462637680.97132,\"y\":3},{\"x\":3479261891.846488,\"y\":3},{\"x\":3495886102.721657,\"y\":3},{\"x\":3512510313.596826,\"y\":3},{\"x\":3529134524.471994,\"y\":3.000000000001109},{\"x\":3545758735.347163,\"y\":3.000000000005941},{\"x\":3562382946.222332,\"y\":3.000000000001253},{\"x\":3579007157.097501,\"y\":3.000000000003397},{\"x\":3595631367.97267,\"y\":3.000000000003927},{\"x\":3612255578.847838,\"y\":3.000000000000001},{\"x\":3628879789.723007,\"y\":3.000000000000806},{\"x\":3645504000.598176,\"y\":3.000000000005302},{\"x\":3662128211.473344,\"y\":3.000000000001707},{\"x\":3678752422.348513,\"y\":3},{\"x\":3695376633.223682,\"y\":3},{\"x\":3712000844.098851,\"y\":3},{\"x\":3728625054.97402,\"y\":3.000000000000595},{\"x\":3745249265.849188,\"y\":3.000000000005728},{\"x\":3761873476.724357,\"y\":3.000000000009304},{\"x\":3778497687.599525,\"y\":3.000000000000002},{\"x\":3795121898.474694,\"y\":3},{\"x\":3811746109.349863,\"y\":3},{\"x\":3828370320.225032,\"y\":3},{\"x\":3844994531.100201,\"y\":3},{\"x\":3861618741.975369,\"y\":3},{\"x\":3878242952.850538,\"y\":3},{\"x\":3894867163.725707,\"y\":3},{\"x\":3911491374.600875,\"y\":3},{\"x\":3928115585.476044,\"y\":3},{\"x\":3944739796.351213,\"y\":3},{\"x\":3961364007.226382,\"y\":3.000000000000428},{\"x\":3977988218.101551,\"y\":3.000000000006478},{\"x\":3994612428.976719,\"y\":3.000000000000909},{\"x\":4011236639.851888,\"y\":3.000000000000359},{\"x\":4027860850.727057,\"y\":3.000000000006697},{\"x\":4044485061.602225,\"y\":3.000000000000758},{\"x\":4061109272.477394,\"y\":3},{\"x\":4077733483.352563,\"y\":3},{\"x\":4094357694.227732,\"y\":3.00000000000014},{\"x\":4110981905.102901,\"y\":3.000000000004295},{\"x\":4127606115.978069,\"y\":3.000000000003378},{\"x\":4144230326.853238,\"y\":3},{\"x\":4160854537.728407,\"y\":3},{\"x\":4177478748.603575,\"y\":3},{\"x\":4194102959.478744,\"y\":3},{\"x\":4210727170.353913,\"y\":3},{\"x\":4227351381.229082,\"y\":3},{\"x\":4243975592.10425,\"y\":3},{\"x\":4260599802.979419,\"y\":3.000000000000001},{\"x\":4277224013.854588,\"y\":3.000000000006976},{\"x\":4293848224.729757,\"y\":3.000000000000825},{\"x\":4310472435.604926,\"y\":3.000000000005427},{\"x\":4327096646.480095,\"y\":3.000000000002343},{\"x\":4343720857.355264,\"y\":3.000000000000056},{\"x\":4360345068.230433,\"y\":3},{\"x\":4376969279.105601,\"y\":3},{\"x\":4393593489.980769,\"y\":3.000000000000001},{\"x\":4410217700.855938,\"y\":3.000000000005822},{\"x\":4426841911.731107,\"y\":3.000000000001909},{\"x\":4443466122.606276,\"y\":3.000000000000082},{\"x\":4460090333.481444,\"y\":3},{\"x\":4476714544.356613,\"y\":3},{\"x\":4493338755.231782,\"y\":3},{\"x\":4509962966.106951,\"y\":3.000000000003306},{\"x\":4526587176.98212,\"y\":3.000000000004208},{\"x\":4543211387.857288,\"y\":3.000000000000299},{\"x\":4559835598.732457,\"y\":3},{\"x\":4576459809.607626,\"y\":3},{\"x\":4593084020.482795,\"y\":3},{\"x\":4609708231.357964,\"y\":3},{\"x\":4626332442.233132,\"y\":3},{\"x\":4642956653.108301,\"y\":3},{\"x\":4659580863.98347,\"y\":3},{\"x\":4676205074.858638,\"y\":3},{\"x\":4692829285.733807,\"y\":3},{\"x\":4709453496.608975,\"y\":3},{\"x\":4726077707.484144,\"y\":3},{\"x\":4742701918.359313,\"y\":3},{\"x\":4759326129.234482,\"y\":3},{\"x\":4775950340.109651,\"y\":3},{\"x\":4792574550.984819,\"y\":3},{\"x\":4809198761.859988,\"y\":3},{\"x\":4825822972.735157,\"y\":3},{\"x\":4842447183.610326,\"y\":3},{\"x\":4859071394.485495,\"y\":3},{\"x\":4875695605.360663,\"y\":3},{\"x\":4892319816.235832,\"y\":3},{\"x\":4908944027.111001,\"y\":3},{\"x\":4925568237.98617,\"y\":3.000000000002311},{\"x\":4942192448.861339,\"y\":3.00000000000467},{\"x\":4958816659.736506,\"y\":3.000000000000832},{\"x\":4975440870.611675,\"y\":3},{\"x\":4992065081.486844,\"y\":3},{\"x\":5008689292.362013,\"y\":3},{\"x\":5025313503.237182,\"y\":3},{\"x\":5041937714.11235,\"y\":3},{\"x\":5058561924.987519,\"y\":3},{\"x\":5075186135.862688,\"y\":3},{\"x\":5091810346.737857,\"y\":3},{\"x\":5108434557.613026,\"y\":3},{\"x\":5125058768.488194,\"y\":3},{\"x\":5141682979.363363,\"y\":3},{\"x\":5158307190.238532,\"y\":3},{\"x\":5174931401.113701,\"y\":3},{\"x\":5191555611.98887,\"y\":3},{\"x\":5208179822.864038,\"y\":3},{\"x\":5224804033.739207,\"y\":3},{\"x\":5241428244.614375,\"y\":3},{\"x\":5258052455.489544,\"y\":3},{\"x\":5274676666.364713,\"y\":3},{\"x\":5291300877.239882,\"y\":3},{\"x\":5307925088.11505,\"y\":3},{\"x\":5324549298.990219,\"y\":3},{\"x\":5341173509.865388,\"y\":3},{\"x\":5357797720.740557,\"y\":3},{\"x\":5374421931.615726,\"y\":3.000000000003226},{\"x\":5391046142.490894,\"y\":3.000000000003672},{\"x\":5407670353.366063,\"y\":3.000000000000916},{\"x\":5424294564.241232,\"y\":3},{\"x\":5440918775.116401,\"y\":3},{\"x\":5457542985.99157,\"y\":3},{\"x\":5474167196.866738,\"y\":3},{\"x\":5490791407.741907,\"y\":3},{\"x\":5507415618.617076,\"y\":3.000000000002674},{\"x\":5524039829.492244,\"y\":3.000000000003944},{\"x\":5540664040.367413,\"y\":3.000000000001196},{\"x\":5557288251.242581,\"y\":3.000000000004542},{\"x\":5573912462.11775,\"y\":3.000000000002875},{\"x\":5590536672.992919,\"y\":3.000000000002518},{\"x\":5607160883.868088,\"y\":3.0000000000042},{\"x\":5623785094.743257,\"y\":3.000000000001493},{\"x\":5640409305.618425,\"y\":3},{\"x\":5657033516.493594,\"y\":3},{\"x\":5673657727.368763,\"y\":3},{\"x\":5690281938.243932,\"y\":3},{\"x\":5706906149.119101,\"y\":3},{\"x\":5723530359.994269,\"y\":3},{\"x\":5740154570.869438,\"y\":3},{\"x\":5756778781.744607,\"y\":3},{\"x\":5773402992.619776,\"y\":3},{\"x\":5790027203.494945,\"y\":3},{\"x\":5806651414.370112,\"y\":3},{\"x\":5823275625.245281,\"y\":3},{\"x\":5839899836.12045,\"y\":3},{\"x\":5856524046.995619,\"y\":3},{\"x\":5873148257.870788,\"y\":3},{\"x\":5889772468.745956,\"y\":3},{\"x\":5906396679.621125,\"y\":3},{\"x\":5923020890.496294,\"y\":3},{\"x\":5939645101.371463,\"y\":3},{\"x\":5956269312.246632,\"y\":3},{\"x\":5972893523.1218,\"y\":3},{\"x\":5989517733.996969,\"y\":3},{\"x\":6006141944.872138,\"y\":3},{\"x\":6022766155.747307,\"y\":3},{\"x\":6039390366.622476,\"y\":3},{\"x\":6056014577.497644,\"y\":3},{\"x\":6072638788.372813,\"y\":3},{\"x\":6089262999.247981,\"y\":3},{\"x\":6105887210.12315,\"y\":3},{\"x\":6122511420.998319,\"y\":3},{\"x\":6139135631.873487,\"y\":3},{\"x\":6155759842.748656,\"y\":3},{\"x\":6172384053.623825,\"y\":3},{\"x\":6189008264.498994,\"y\":3},{\"x\":6205632475.374163,\"y\":3},{\"x\":6222256686.249331,\"y\":3},{\"x\":6238880897.1245,\"y\":3},{\"x\":6255505107.999669,\"y\":3},{\"x\":6272129318.874838,\"y\":3},{\"x\":6288753529.750007,\"y\":3},{\"x\":6305377740.625175,\"y\":3},{\"x\":6322001951.500344,\"y\":3},{\"x\":6338626162.375513,\"y\":3},{\"x\":6355250373.250682,\"y\":3.000000000002363},{\"x\":6371874584.125851,\"y\":3.000000000003874},{\"x\":6388498795.001019,\"y\":3.000000000001577},{\"x\":6405123005.876187,\"y\":3},{\"x\":6421747216.751356,\"y\":3},{\"x\":6438371427.626525,\"y\":3},{\"x\":6454995638.501694,\"y\":3},{\"x\":6471619849.376863,\"y\":3},{\"x\":6488244060.252031,\"y\":3},{\"x\":6504868271.1272,\"y\":3},{\"x\":6521492482.002369,\"y\":3},{\"x\":6538116692.877538,\"y\":3},{\"x\":6554740903.752707,\"y\":3},{\"x\":6571365114.627875,\"y\":3},{\"x\":6587989325.503044,\"y\":3},{\"x\":6604613536.378213,\"y\":3},{\"x\":6621237747.253382,\"y\":3},{\"x\":6637861958.128551,\"y\":3},{\"x\":6654486169.003719,\"y\":3},{\"x\":6671110379.878887,\"y\":3},{\"x\":6687734590.754056,\"y\":3},{\"x\":6704358801.629225,\"y\":3},{\"x\":6720983012.504394,\"y\":3},{\"x\":6737607223.379562,\"y\":3},{\"x\":6754231434.254731,\"y\":3},{\"x\":6770855645.1299,\"y\":3},{\"x\":6787479856.005069,\"y\":3},{\"x\":6804104066.880238,\"y\":3},{\"x\":6820728277.755406,\"y\":3},{\"x\":6837352488.630575,\"y\":3},{\"x\":6853976699.505744,\"y\":3},{\"x\":6870600910.380913,\"y\":3},{\"x\":6887225121.256082,\"y\":3},{\"x\":6903849332.13125,\"y\":3.000000000002776},{\"x\":6920473543.006419,\"y\":3.000000000004606},{\"x\":6937097753.881588,\"y\":3.000000000000433},{\"x\":6953721964.756756,\"y\":3},{\"x\":6970346175.631925,\"y\":3},{\"x\":6986970386.507093,\"y\":3},{\"x\":7003594597.382262,\"y\":3},{\"x\":7020218808.257431,\"y\":3},{\"x\":7036843019.1326,\"y\":3},{\"x\":7053467230.007769,\"y\":3},{\"x\":7070091440.882937,\"y\":3},{\"x\":7086715651.758106,\"y\":3},{\"x\":7103339862.633275,\"y\":3},{\"x\":7119964073.508444,\"y\":3},{\"x\":7136588284.383613,\"y\":3},{\"x\":7153212495.258781,\"y\":3},{\"x\":7169836706.13395,\"y\":3},{\"x\":7186460917.009119,\"y\":3},{\"x\":7203085127.884288,\"y\":3},{\"x\":7219709338.759457,\"y\":3},{\"x\":7236333549.634624,\"y\":3},{\"x\":7252957760.509793,\"y\":3},{\"x\":7269581971.384962,\"y\":3},{\"x\":7286206182.260131,\"y\":3},{\"x\":7302830393.1353,\"y\":3},{\"x\":7319454604.010468,\"y\":3},{\"x\":7336078814.885637,\"y\":3},{\"x\":7352703025.760806,\"y\":3.000000000000115},{\"x\":7369327236.635975,\"y\":3.000000000002394},{\"x\":7385951447.511144,\"y\":3.000000000005305},{\"x\":7402575658.386312,\"y\":3.000000000000001},{\"x\":7419199869.261481,\"y\":3},{\"x\":7435824080.13665,\"y\":3},{\"x\":7452448291.011819,\"y\":3},{\"x\":7469072501.886988,\"y\":3},{\"x\":7485696712.762156,\"y\":3},{\"x\":7502320923.637325,\"y\":3},{\"x\":7518945134.512493,\"y\":3},{\"x\":7535569345.387662,\"y\":3},{\"x\":7552193556.262831,\"y\":3},{\"x\":7568817767.138,\"y\":3},{\"x\":7585441978.013168,\"y\":3},{\"x\":7602066188.888337,\"y\":3},{\"x\":7618690399.763506,\"y\":3},{\"x\":7635314610.638675,\"y\":3},{\"x\":7651938821.513844,\"y\":3},{\"x\":7668563032.389012,\"y\":3},{\"x\":7685187243.264181,\"y\":3},{\"x\":7701811454.13935,\"y\":3},{\"x\":7718435665.014519,\"y\":3},{\"x\":7735059875.889688,\"y\":3},{\"x\":7751684086.764856,\"y\":3},{\"x\":7768308297.640025,\"y\":3},{\"x\":7784932508.515194,\"y\":3.000000000001087},{\"x\":7801556719.390362,\"y\":3.000000000005012},{\"x\":7818180930.265531,\"y\":3.000000000001715},{\"x\":7834805141.140699,\"y\":3},{\"x\":7851429352.015868,\"y\":3},{\"x\":7868053562.891037,\"y\":3},{\"x\":7884677773.766206,\"y\":3},{\"x\":7901301984.641375,\"y\":3},{\"x\":7917926195.516543,\"y\":3},{\"x\":7934550406.391712,\"y\":3},{\"x\":7951174617.266881,\"y\":3},{\"x\":7967798828.14205,\"y\":3},{\"x\":7984423039.017219,\"y\":3},{\"x\":8001047249.892387,\"y\":3},{\"x\":8017671460.767556,\"y\":3},{\"x\":8034295671.642725,\"y\":3},{\"x\":8050919882.517894,\"y\":3},{\"x\":8067544093.393063,\"y\":3},{\"x\":8084168304.26823,\"y\":3},{\"x\":8100792515.143399,\"y\":3},{\"x\":8117416726.018568,\"y\":3},{\"x\":8134040936.893737,\"y\":3},{\"x\":8150665147.768906,\"y\":3},{\"x\":8167289358.644074,\"y\":3},{\"x\":8183913569.519243,\"y\":3},{\"x\":8200537780.394412,\"y\":3},{\"x\":8217161991.269581,\"y\":3.000000000000248},{\"x\":8233786202.14475,\"y\":3.000000000002888},{\"x\":8250410413.019918,\"y\":3.000000000004678},{\"x\":8267034623.895087,\"y\":3.000000000000001},{\"x\":8283658834.770256,\"y\":3},{\"x\":8300283045.645425,\"y\":3},{\"x\":8316907256.520594,\"y\":3},{\"x\":8333531467.395762,\"y\":3},{\"x\":8350155678.270931,\"y\":3},{\"x\":8366779889.146099,\"y\":3},{\"x\":8383404100.021268,\"y\":3},{\"x\":8400028310.896437,\"y\":3},{\"x\":8416652521.771605,\"y\":3},{\"x\":8433276732.646774,\"y\":3},{\"x\":8449900943.521943,\"y\":3.000000000000214},{\"x\":8466525154.397112,\"y\":3.000000000005294},{\"x\":8483149365.272281,\"y\":3.000000000002305}],\"showInLegend\":false,\"color\":\"#1B9E77\",\"name\":\"25fmol\"},{\"data\":[],\"showInLegend\":false,\"color\":\"#D95F02\",\"name\":\"10fmol\"},{\"data\":[],\"showInLegend\":false,\"color\":\"#D95F02\",\"name\":\"10fmol\"},{\"data\":[{\"x\":-10973625.66818514,\"y\":3.000000002202718},{\"x\":5016582.644932352,\"y\":3.00000003905736},{\"x\":21006790.95804984,\"y\":3.000000027435924},{\"x\":36996999.27116733,\"y\":3.000000011678436},{\"x\":52987207.58428482,\"y\":3.000000006160544},{\"x\":68977415.89740232,\"y\":3.000000003990361},{\"x\":84967624.21051979,\"y\":3.000000002858096},{\"x\":100957832.5236373,\"y\":3.000000001934745},{\"x\":116948040.8367548,\"y\":3.000000001568171},{\"x\":132938249.1498723,\"y\":3.000000001224262},{\"x\":148928457.4629897,\"y\":3.000000000843465},{\"x\":164918665.7761072,\"y\":3.000000000673801},{\"x\":180908874.0892247,\"y\":3.000000000542131},{\"x\":196899082.4023422,\"y\":3.000000000394705},{\"x\":212889290.7154597,\"y\":3.000000000384245},{\"x\":228879499.0285772,\"y\":3.000000000338289},{\"x\":244869707.3416947,\"y\":3.000000000261701},{\"x\":260859915.6548122,\"y\":3.000000000281827},{\"x\":276850123.9679297,\"y\":3.000000000272769},{\"x\":292840332.2810472,\"y\":3.000000000212587},{\"x\":308830540.5941647,\"y\":3.000000000178181},{\"x\":324820748.9072822,\"y\":3.000000000142175},{\"x\":340810957.2203996,\"y\":3.000000000173479},{\"x\":356801165.5335171,\"y\":3.000000000150282},{\"x\":372791373.8466346,\"y\":3.000000000113914},{\"x\":388781582.1597521,\"y\":3.000000000122501},{\"x\":404771790.4728696,\"y\":3.000000000168903},{\"x\":420761998.7859871,\"y\":3.000000000154013},{\"x\":436752207.0991046,\"y\":3.000000000174004},{\"x\":452742415.4122221,\"y\":3.000000000098166},{\"x\":468732623.7253395,\"y\":3.000000000087436},{\"x\":484722832.038457,\"y\":3.000000000091793},{\"x\":500713040.3515745,\"y\":3.000000000112415},{\"x\":516703248.664692,\"y\":3.00000000006828},{\"x\":532693456.9778095,\"y\":3.000000000059188},{\"x\":548683665.2909271,\"y\":3.00000000006663},{\"x\":564673873.6040446,\"y\":3.000000000044826},{\"x\":580664081.9171619,\"y\":3.000000000065709},{\"x\":596654290.2302794,\"y\":3.000000000063222},{\"x\":612644498.5433969,\"y\":3.000000000066041},{\"x\":628634706.8565145,\"y\":3.000000000095691},{\"x\":644624915.169632,\"y\":3.000000000076763},{\"x\":660615123.4827495,\"y\":3.000000000074893},{\"x\":676605331.795867,\"y\":3.000000000085679},{\"x\":692595540.1089844,\"y\":3.000000000052034},{\"x\":708585748.4221019,\"y\":3.000000000051345},{\"x\":724575956.7352194,\"y\":3.000000000038062},{\"x\":740566165.0483369,\"y\":3.000000000034603},{\"x\":756556373.3614544,\"y\":3.000000000050954},{\"x\":772546581.6745719,\"y\":3.000000000072064},{\"x\":788536789.9876894,\"y\":3.000000000084626},{\"x\":804526998.3008069,\"y\":3.000000000083697},{\"x\":820517206.6139244,\"y\":3.000000000067957},{\"x\":836507414.9270418,\"y\":3.000000000043259},{\"x\":852497623.2401593,\"y\":3.000000000022546},{\"x\":868487831.5532768,\"y\":3.000000000060532},{\"x\":884478039.8663943,\"y\":3.000000000071859},{\"x\":900468248.1795118,\"y\":3.000000000047922},{\"x\":916458456.4926293,\"y\":3.000000000045573},{\"x\":932448664.8057468,\"y\":3.000000000034388},{\"x\":948438873.1188642,\"y\":3.000000000035548},{\"x\":964429081.4319817,\"y\":3.000000000039988},{\"x\":980419289.7450992,\"y\":3.000000000033435},{\"x\":996409498.0582167,\"y\":3.000000000033402},{\"x\":1012399706.371334,\"y\":3.000000000036661},{\"x\":1028389914.684452,\"y\":3.000000000045268},{\"x\":1044380122.997569,\"y\":3.000000000045818},{\"x\":1060370331.310687,\"y\":3.00000000003894},{\"x\":1076360539.623804,\"y\":3.000000000048797},{\"x\":1092350747.936922,\"y\":3.00000000004133},{\"x\":1108340956.250039,\"y\":3.000000000038672},{\"x\":1124331164.563157,\"y\":3.000000000036225},{\"x\":1140321372.876274,\"y\":3.000000000029606},{\"x\":1156311581.189391,\"y\":3.000000000031354},{\"x\":1172301789.502509,\"y\":3.000000000035008},{\"x\":1188291997.815626,\"y\":3.000000000041942},{\"x\":1204282206.128744,\"y\":3.000000000033614},{\"x\":1220272414.441861,\"y\":3.000000000030703},{\"x\":1236262622.754979,\"y\":3.000000000032808},{\"x\":1252252831.068096,\"y\":3.000000000029299},{\"x\":1268243039.381214,\"y\":3.00000000002142},{\"x\":1284233247.694331,\"y\":3.000000000016601},{\"x\":1300223456.007449,\"y\":3.00000000003128},{\"x\":1316213664.320566,\"y\":3.000000000034995},{\"x\":1332203872.633684,\"y\":3.000000000036308},{\"x\":1348194080.946801,\"y\":3.000000000029631},{\"x\":1364184289.259919,\"y\":3.000000000025584},{\"x\":1380174497.573036,\"y\":3.000000000043456},{\"x\":1396164705.886154,\"y\":3.000000000042285},{\"x\":1412154914.199271,\"y\":3.000000000022851},{\"x\":1428145122.512389,\"y\":3.000000000012972},{\"x\":1444135330.825506,\"y\":3.000000000021451},{\"x\":1460125539.138624,\"y\":3.000000000022453},{\"x\":1476115747.451741,\"y\":3.000000000011932},{\"x\":1492105955.764859,\"y\":3.000000000012057},{\"x\":1508096164.077976,\"y\":3.000000000008961},{\"x\":1524086372.391094,\"y\":3.000000000006595},{\"x\":1540076580.704211,\"y\":3.000000000008204},{\"x\":1556066789.017329,\"y\":3.000000000007768},{\"x\":1572056997.330446,\"y\":3.000000000009098},{\"x\":1588047205.643564,\"y\":3.000000000013255},{\"x\":1604037413.956681,\"y\":3.000000000014734},{\"x\":1620027622.269799,\"y\":3.000000000008997},{\"x\":1636017830.582916,\"y\":3.000000000012957},{\"x\":1652008038.896034,\"y\":3.000000000011228},{\"x\":1667998247.209151,\"y\":3.00000000000641},{\"x\":1683988455.522269,\"y\":3.000000000003919},{\"x\":1699978663.835386,\"y\":3.000000000003477},{\"x\":1715968872.148504,\"y\":3.000000000009218},{\"x\":1731959080.461621,\"y\":3.000000000017705},{\"x\":1747949288.774739,\"y\":3.00000000001931},{\"x\":1763939497.087856,\"y\":3.000000000016029},{\"x\":1779929705.400974,\"y\":3.000000000017918},{\"x\":1795919913.714091,\"y\":3.000000000023074},{\"x\":1811910122.027209,\"y\":3.00000000001982},{\"x\":1827900330.340326,\"y\":3.000000000010766},{\"x\":1843890538.653444,\"y\":3.000000000010943},{\"x\":1859880746.966561,\"y\":3.000000000012194},{\"x\":1875870955.279679,\"y\":3.000000000007546},{\"x\":1891861163.592796,\"y\":3.000000000002365},{\"x\":1907851371.905913,\"y\":3.00000000000166},{\"x\":1923841580.219031,\"y\":3.000000000007999},{\"x\":1939831788.532148,\"y\":3.000000000010847},{\"x\":1955821996.845266,\"y\":3.000000000013422},{\"x\":1971812205.158383,\"y\":3.000000000018314},{\"x\":1987802413.471501,\"y\":3.000000000016298},{\"x\":2003792621.784618,\"y\":3.000000000007788},{\"x\":2019782830.097736,\"y\":3.000000000000379},{\"x\":2035773038.410853,\"y\":3.000000000004516},{\"x\":2051763246.723971,\"y\":3.000000000008417},{\"x\":2067753455.037088,\"y\":3.000000000007859},{\"x\":2083743663.350206,\"y\":3.000000000008489},{\"x\":2099733871.663323,\"y\":3.000000000008328},{\"x\":2115724079.976441,\"y\":3.000000000009839},{\"x\":2131714288.289558,\"y\":3.000000000008944},{\"x\":2147704496.602676,\"y\":3.000000000003021},{\"x\":2163694704.915793,\"y\":3.000000000005641},{\"x\":2179684913.228911,\"y\":3.000000000009112},{\"x\":2195675121.542028,\"y\":3.000000000002262},{\"x\":2211665329.855146,\"y\":3.00000000000328},{\"x\":2227655538.168263,\"y\":3.000000000009761},{\"x\":2243645746.481381,\"y\":3.000000000009624},{\"x\":2259635954.794498,\"y\":3.00000000000658},{\"x\":2275626163.107616,\"y\":3.000000000004785},{\"x\":2291616371.420733,\"y\":3.000000000002163},{\"x\":2307606579.73385,\"y\":3.000000000004458},{\"x\":2323596788.046968,\"y\":3.000000000002609},{\"x\":2339586996.360085,\"y\":3.000000000008515},{\"x\":2355577204.673203,\"y\":3.000000000013352},{\"x\":2371567412.98632,\"y\":3.000000000002933},{\"x\":2387557621.299438,\"y\":3},{\"x\":2403547829.612556,\"y\":3},{\"x\":2419538037.925673,\"y\":3},{\"x\":2435528246.238791,\"y\":3},{\"x\":2451518454.551908,\"y\":3},{\"x\":2467508662.865026,\"y\":3},{\"x\":2483498871.178143,\"y\":3},{\"x\":2499489079.491261,\"y\":3},{\"x\":2515479287.804378,\"y\":3.000000000001986},{\"x\":2531469496.117496,\"y\":3.000000000004651},{\"x\":2547459704.430613,\"y\":3.00000000000187},{\"x\":2563449912.743731,\"y\":3.000000000000003},{\"x\":2579440121.056848,\"y\":3.000000000002877},{\"x\":2595430329.369966,\"y\":3.000000000005627},{\"x\":2611420537.683083,\"y\":3.00000000000236},{\"x\":2627410745.996201,\"y\":3.000000000006421},{\"x\":2643400954.309318,\"y\":3.000000000007532},{\"x\":2659391162.622436,\"y\":3.000000000011033},{\"x\":2675381370.935553,\"y\":3.000000000005556},{\"x\":2691371579.248671,\"y\":3.000000000001499},{\"x\":2707361787.561788,\"y\":3.000000000003077},{\"x\":2723351995.874906,\"y\":3.00000000000506},{\"x\":2739342204.188023,\"y\":3},{\"x\":2755332412.501141,\"y\":3},{\"x\":2771322620.814258,\"y\":3.000000000001517},{\"x\":2787312829.127376,\"y\":3.000000000007007},{\"x\":2803303037.440493,\"y\":3.000000000008304},{\"x\":2819293245.75361,\"y\":3.000000000003196},{\"x\":2835283454.066728,\"y\":3.000000000009391},{\"x\":2851273662.379845,\"y\":3.000000000004614},{\"x\":2867263870.692963,\"y\":3},{\"x\":2883254079.00608,\"y\":3.000000000000373},{\"x\":2899244287.319198,\"y\":3.000000000002904},{\"x\":2915234495.632315,\"y\":3.000000000005229},{\"x\":2931224703.945433,\"y\":3},{\"x\":2947214912.25855,\"y\":3},{\"x\":2963205120.571668,\"y\":3},{\"x\":2979195328.884785,\"y\":3},{\"x\":2995185537.197903,\"y\":3},{\"x\":3011175745.51102,\"y\":3.000000000001122},{\"x\":3027165953.824138,\"y\":3.000000000004453},{\"x\":3043156162.137255,\"y\":3.000000000002932},{\"x\":3059146370.450373,\"y\":3.000000000001807},{\"x\":3075136578.76349,\"y\":3.000000000006207},{\"x\":3091126787.076608,\"y\":3.000000000000494},{\"x\":3107116995.389725,\"y\":3.000000000000003},{\"x\":3123107203.702843,\"y\":3.000000000001838},{\"x\":3139097412.01596,\"y\":3.000000000007345},{\"x\":3155087620.329078,\"y\":3.000000000003633},{\"x\":3171077828.642195,\"y\":3.000000000004196},{\"x\":3187068036.955313,\"y\":3},{\"x\":3203058245.26843,\"y\":3},{\"x\":3219048453.581548,\"y\":3},{\"x\":3235038661.894665,\"y\":3},{\"x\":3251028870.207783,\"y\":3.000000000000727},{\"x\":3267019078.5209,\"y\":3.000000000004859},{\"x\":3283009286.834018,\"y\":3.000000000008234},{\"x\":3298999495.147135,\"y\":3.000000000004255},{\"x\":3314989703.460253,\"y\":3.000000000005409},{\"x\":3330979911.77337,\"y\":3.000000000002038},{\"x\":3346970120.086487,\"y\":3},{\"x\":3362960328.399605,\"y\":3},{\"x\":3378950536.712722,\"y\":3},{\"x\":3394940745.02584,\"y\":3.000000000000135},{\"x\":3410930953.338957,\"y\":3.00000000000189},{\"x\":3426921161.652075,\"y\":3.000000000006481},{\"x\":3442911369.965192,\"y\":3},{\"x\":3458901578.27831,\"y\":3},{\"x\":3474891786.591427,\"y\":3},{\"x\":3490881994.904545,\"y\":3},{\"x\":3506872203.217662,\"y\":3},{\"x\":3522862411.53078,\"y\":3.000000000000059},{\"x\":3538852619.843897,\"y\":3.000000000002028},{\"x\":3554842828.157015,\"y\":3.000000000012113},{\"x\":3570833036.470132,\"y\":3.000000000003175},{\"x\":3586823244.78325,\"y\":3.000000000003391},{\"x\":3602813453.096367,\"y\":3.000000000004757},{\"x\":3618803661.409485,\"y\":3},{\"x\":3634793869.722602,\"y\":3},{\"x\":3650784078.03572,\"y\":3},{\"x\":3666774286.348837,\"y\":3},{\"x\":3682764494.661955,\"y\":3},{\"x\":3698754702.975072,\"y\":3},{\"x\":3714744911.28819,\"y\":3},{\"x\":3730735119.601307,\"y\":3},{\"x\":3746725327.914425,\"y\":3},{\"x\":3762715536.227542,\"y\":3},{\"x\":3778705744.54066,\"y\":3},{\"x\":3794695952.853777,\"y\":3},{\"x\":3810686161.166895,\"y\":3},{\"x\":3826676369.480012,\"y\":3},{\"x\":3842666577.793129,\"y\":3},{\"x\":3858656786.106247,\"y\":3.00000000000023},{\"x\":3874646994.419364,\"y\":3.000000000005018},{\"x\":3890637202.732482,\"y\":3.000000000011547},{\"x\":3906627411.045599,\"y\":3.000000000000221},{\"x\":3922617619.358717,\"y\":3},{\"x\":3938607827.671834,\"y\":3},{\"x\":3954598035.984952,\"y\":3},{\"x\":3970588244.298069,\"y\":3},{\"x\":3986578452.611187,\"y\":3},{\"x\":4002568660.924304,\"y\":3.000000000000012},{\"x\":4018558869.237422,\"y\":3.000000000000814},{\"x\":4034549077.550539,\"y\":3.000000000007681},{\"x\":4050539285.863657,\"y\":3.000000000000001},{\"x\":4066529494.176775,\"y\":3},{\"x\":4082519702.489892,\"y\":3},{\"x\":4098509910.80301,\"y\":3},{\"x\":4114500119.116127,\"y\":3},{\"x\":4130490327.429245,\"y\":3},{\"x\":4146480535.742362,\"y\":3.000000000003632},{\"x\":4162470744.05548,\"y\":3.000000000004762},{\"x\":4178460952.368597,\"y\":3.000000000000113},{\"x\":4194451160.681715,\"y\":3},{\"x\":4210441368.994832,\"y\":3},{\"x\":4226431577.30795,\"y\":3},{\"x\":4242421785.621067,\"y\":3},{\"x\":4258411993.934185,\"y\":3.000000000004384},{\"x\":4274402202.247302,\"y\":3.000000000003931},{\"x\":4290392410.560419,\"y\":3.000000000000191},{\"x\":4306382618.873537,\"y\":3},{\"x\":4322372827.186654,\"y\":3},{\"x\":4338363035.499772,\"y\":3},{\"x\":4354353243.812889,\"y\":3},{\"x\":4370343452.126007,\"y\":3},{\"x\":4386333660.439124,\"y\":3},{\"x\":4402323868.752242,\"y\":3},{\"x\":4418314077.065359,\"y\":3},{\"x\":4434304285.378477,\"y\":3.000000000003038},{\"x\":4450294493.691594,\"y\":3.00000000000501},{\"x\":4466284702.004712,\"y\":3.00000000000046},{\"x\":4482274910.317829,\"y\":3},{\"x\":4498265118.630947,\"y\":3},{\"x\":4514255326.944064,\"y\":3},{\"x\":4530245535.257182,\"y\":3},{\"x\":4546235743.570299,\"y\":3},{\"x\":4562225951.883417,\"y\":3},{\"x\":4578216160.196534,\"y\":3},{\"x\":4594206368.509652,\"y\":3},{\"x\":4610196576.822769,\"y\":3},{\"x\":4626186785.135886,\"y\":3},{\"x\":4642176993.449004,\"y\":3},{\"x\":4658167201.762121,\"y\":3},{\"x\":4674157410.075239,\"y\":3},{\"x\":4690147618.388356,\"y\":3},{\"x\":4706137826.701474,\"y\":3},{\"x\":4722128035.014591,\"y\":3},{\"x\":4738118243.327709,\"y\":3},{\"x\":4754108451.640826,\"y\":3},{\"x\":4770098659.953944,\"y\":3},{\"x\":4786088868.267061,\"y\":3},{\"x\":4802079076.580179,\"y\":3},{\"x\":4818069284.893296,\"y\":3},{\"x\":4834059493.206414,\"y\":3},{\"x\":4850049701.519531,\"y\":3},{\"x\":4866039909.832649,\"y\":3},{\"x\":4882030118.145766,\"y\":3.000000000000914},{\"x\":4898020326.458884,\"y\":3.000000000006191},{\"x\":4914010534.772001,\"y\":3.000000000001402},{\"x\":4930000743.085119,\"y\":3},{\"x\":4945990951.398236,\"y\":3},{\"x\":4961981159.711354,\"y\":3},{\"x\":4977971368.024471,\"y\":3},{\"x\":4993961576.337589,\"y\":3},{\"x\":5009951784.650706,\"y\":3},{\"x\":5025941992.963824,\"y\":3.000000000000001},{\"x\":5041932201.276941,\"y\":3.000000000007794},{\"x\":5057922409.590059,\"y\":3.000000000007641},{\"x\":5073912617.903176,\"y\":3.00000000000158},{\"x\":5089902826.216294,\"y\":3},{\"x\":5105893034.529411,\"y\":3},{\"x\":5121883242.842528,\"y\":3.000000000003615},{\"x\":5137873451.155646,\"y\":3.000000000003977},{\"x\":5153863659.468763,\"y\":3.000000000000915},{\"x\":5169853867.781881,\"y\":3},{\"x\":5185844076.094998,\"y\":3},{\"x\":5201834284.408116,\"y\":3},{\"x\":5217824492.721233,\"y\":3},{\"x\":5233814701.034351,\"y\":3},{\"x\":5249804909.347468,\"y\":3},{\"x\":5265795117.660586,\"y\":3},{\"x\":5281785325.973703,\"y\":3},{\"x\":5297775534.286821,\"y\":3},{\"x\":5313765742.599938,\"y\":3},{\"x\":5329755950.913056,\"y\":3},{\"x\":5345746159.226173,\"y\":3},{\"x\":5361736367.539291,\"y\":3},{\"x\":5377726575.852408,\"y\":3},{\"x\":5393716784.165526,\"y\":3},{\"x\":5409706992.478643,\"y\":3},{\"x\":5425697200.791761,\"y\":3},{\"x\":5441687409.104878,\"y\":3},{\"x\":5457677617.417996,\"y\":3},{\"x\":5473667825.731113,\"y\":3},{\"x\":5489658034.044231,\"y\":3},{\"x\":5505648242.357348,\"y\":3},{\"x\":5521638450.670466,\"y\":3},{\"x\":5537628658.983583,\"y\":3},{\"x\":5553618867.296701,\"y\":3},{\"x\":5569609075.609818,\"y\":3},{\"x\":5585599283.922936,\"y\":3},{\"x\":5601589492.236053,\"y\":3},{\"x\":5617579700.54917,\"y\":3},{\"x\":5633569908.862288,\"y\":3},{\"x\":5649560117.175406,\"y\":3.000000000000354},{\"x\":5665550325.488523,\"y\":3.000000000005263},{\"x\":5681540533.801641,\"y\":3.00000000000289},{\"x\":5697530742.114758,\"y\":3},{\"x\":5713520950.427876,\"y\":3},{\"x\":5729511158.740993,\"y\":3},{\"x\":5745501367.054111,\"y\":3},{\"x\":5761491575.367229,\"y\":3.000000000000125},{\"x\":5777481783.680346,\"y\":3.000000000005155},{\"x\":5793471991.993464,\"y\":3.000000000003227},{\"x\":5809462200.306581,\"y\":3},{\"x\":5825452408.619699,\"y\":3},{\"x\":5841442616.932816,\"y\":3},{\"x\":5857432825.245934,\"y\":3},{\"x\":5873423033.559051,\"y\":3},{\"x\":5889413241.872169,\"y\":3},{\"x\":5905403450.185286,\"y\":3},{\"x\":5921393658.498404,\"y\":3},{\"x\":5937383866.811521,\"y\":3},{\"x\":5953374075.124639,\"y\":3},{\"x\":5969364283.437756,\"y\":3},{\"x\":5985354491.750874,\"y\":3},{\"x\":6001344700.063991,\"y\":3},{\"x\":6017334908.377109,\"y\":3.000000000004221},{\"x\":6033325116.690226,\"y\":3.00000000000387},{\"x\":6049315325.003344,\"y\":3.000000000000417},{\"x\":6065305533.316461,\"y\":3},{\"x\":6081295741.629579,\"y\":3},{\"x\":6097285949.942696,\"y\":3},{\"x\":6113276158.255814,\"y\":3},{\"x\":6129266366.568931,\"y\":3},{\"x\":6145256574.882048,\"y\":3},{\"x\":6161246783.195166,\"y\":3},{\"x\":6177236991.508283,\"y\":3},{\"x\":6193227199.821401,\"y\":3},{\"x\":6209217408.134518,\"y\":3},{\"x\":6225207616.447636,\"y\":3},{\"x\":6241197824.760753,\"y\":3},{\"x\":6257188033.073871,\"y\":3},{\"x\":6273178241.386988,\"y\":3},{\"x\":6289168449.700106,\"y\":3},{\"x\":6305158658.013223,\"y\":3},{\"x\":6321148866.326341,\"y\":3},{\"x\":6337139074.639458,\"y\":3},{\"x\":6353129282.952576,\"y\":3},{\"x\":6369119491.265693,\"y\":3},{\"x\":6385109699.578811,\"y\":3},{\"x\":6401099907.891928,\"y\":3},{\"x\":6417090116.205046,\"y\":3},{\"x\":6433080324.518163,\"y\":3},{\"x\":6449070532.831281,\"y\":3},{\"x\":6465060741.144398,\"y\":3},{\"x\":6481050949.457516,\"y\":3},{\"x\":6497041157.770633,\"y\":3},{\"x\":6513031366.083751,\"y\":3},{\"x\":6529021574.396868,\"y\":3},{\"x\":6545011782.709986,\"y\":3},{\"x\":6561001991.023103,\"y\":3},{\"x\":6576992199.336221,\"y\":3},{\"x\":6592982407.649338,\"y\":3},{\"x\":6608972615.962456,\"y\":3},{\"x\":6624962824.275573,\"y\":3},{\"x\":6640953032.588691,\"y\":3},{\"x\":6656943240.901808,\"y\":3},{\"x\":6672933449.214925,\"y\":3},{\"x\":6688923657.528043,\"y\":3},{\"x\":6704913865.84116,\"y\":3.000000000002415},{\"x\":6720904074.154278,\"y\":3.00000000000459},{\"x\":6736894282.467395,\"y\":3.000000000001502},{\"x\":6752884490.780513,\"y\":3},{\"x\":6768874699.09363,\"y\":3},{\"x\":6784864907.406748,\"y\":3},{\"x\":6800855115.719865,\"y\":3},{\"x\":6816845324.032983,\"y\":3},{\"x\":6832835532.3461,\"y\":3},{\"x\":6848825740.659218,\"y\":3},{\"x\":6864815948.972335,\"y\":3},{\"x\":6880806157.285453,\"y\":3},{\"x\":6896796365.59857,\"y\":3},{\"x\":6912786573.911688,\"y\":3},{\"x\":6928776782.224805,\"y\":3},{\"x\":6944766990.537923,\"y\":3},{\"x\":6960757198.85104,\"y\":3},{\"x\":6976747407.164158,\"y\":3.000000000000385},{\"x\":6992737615.477275,\"y\":3.000000000003229},{\"x\":7008727823.790393,\"y\":3.000000000004893},{\"x\":7024718032.10351,\"y\":3},{\"x\":7040708240.416628,\"y\":3},{\"x\":7056698448.729745,\"y\":3},{\"x\":7072688657.042863,\"y\":3},{\"x\":7088678865.35598,\"y\":3},{\"x\":7104669073.669098,\"y\":3},{\"x\":7120659281.982215,\"y\":3},{\"x\":7136649490.295333,\"y\":3},{\"x\":7152639698.60845,\"y\":3},{\"x\":7168629906.921567,\"y\":3},{\"x\":7184620115.234685,\"y\":3.000000000000118},{\"x\":7200610323.547802,\"y\":3.000000000002633},{\"x\":7216600531.86092,\"y\":3.000000000005756},{\"x\":7232590740.174037,\"y\":3},{\"x\":7248580948.487155,\"y\":3},{\"x\":7264571156.800272,\"y\":3},{\"x\":7280561365.11339,\"y\":3},{\"x\":7296551573.426507,\"y\":3},{\"x\":7312541781.739625,\"y\":3},{\"x\":7328531990.052742,\"y\":3},{\"x\":7344522198.36586,\"y\":3},{\"x\":7360512406.678977,\"y\":3},{\"x\":7376502614.992095,\"y\":3},{\"x\":7392492823.305212,\"y\":3},{\"x\":7408483031.61833,\"y\":3},{\"x\":7424473239.931447,\"y\":3},{\"x\":7440463448.244565,\"y\":3},{\"x\":7456453656.557682,\"y\":3},{\"x\":7472443864.8708,\"y\":3},{\"x\":7488434073.183917,\"y\":3},{\"x\":7504424281.497035,\"y\":3},{\"x\":7520414489.810152,\"y\":3},{\"x\":7536404698.12327,\"y\":3},{\"x\":7552394906.436387,\"y\":3},{\"x\":7568385114.749505,\"y\":3},{\"x\":7584375323.062622,\"y\":3},{\"x\":7600365531.37574,\"y\":3},{\"x\":7616355739.688857,\"y\":3},{\"x\":7632345948.001975,\"y\":3},{\"x\":7648336156.315092,\"y\":3},{\"x\":7664326364.628209,\"y\":3},{\"x\":7680316572.941327,\"y\":3},{\"x\":7696306781.254444,\"y\":3},{\"x\":7712296989.567562,\"y\":3},{\"x\":7728287197.880679,\"y\":3},{\"x\":7744277406.193797,\"y\":3},{\"x\":7760267614.506914,\"y\":3},{\"x\":7776257822.820032,\"y\":3},{\"x\":7792248031.133149,\"y\":3},{\"x\":7808238239.446267,\"y\":3},{\"x\":7824228447.759384,\"y\":3},{\"x\":7840218656.072502,\"y\":3},{\"x\":7856208864.385619,\"y\":3},{\"x\":7872199072.698737,\"y\":3},{\"x\":7888189281.011854,\"y\":3},{\"x\":7904179489.324972,\"y\":3},{\"x\":7920169697.638089,\"y\":3},{\"x\":7936159905.951207,\"y\":3},{\"x\":7952150114.264324,\"y\":3},{\"x\":7968140322.577442,\"y\":3},{\"x\":7984130530.890559,\"y\":3},{\"x\":8000120739.203677,\"y\":3.000000000000753},{\"x\":8016110947.516794,\"y\":3.000000000006322},{\"x\":8032101155.829912,\"y\":3.000000000001433},{\"x\":8048091364.143029,\"y\":3},{\"x\":8064081572.456147,\"y\":3},{\"x\":8080071780.769264,\"y\":3},{\"x\":8096061989.082382,\"y\":3},{\"x\":8112052197.395499,\"y\":3},{\"x\":8128042405.708617,\"y\":3.000000000000424},{\"x\":8144032614.021734,\"y\":3.000000000005113},{\"x\":8160022822.334852,\"y\":3.00000000000297}],\"showInLegend\":false,\"color\":\"#D95F02\",\"name\":\"10fmol\"},{\"data\":[],\"type\":\"line\",\"name\":\"25fmol\",\"color\":\"#1B9E77\",\"marker\":{\"symbol\":\"circle\"}},{\"data\":[],\"type\":\"line\",\"name\":\"10fmol\",\"color\":\"#D95F02\",\"marker\":{\"symbol\":\"circle\"}}]},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell_agg.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacell aggregation — metacell_agg","title":"Metacell aggregation — metacell_agg","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell_agg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacell aggregation — metacell_agg","text":"","code":"metacell_agg(aggregatedSE, originalSE, adj_mat, conds, protname_order)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell_agg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacell aggregation — metacell_agg","text":"aggregatedSE instance class SummarizedExperiment containing aggregated data. originalSE instance class SummarizedExperiment containing non-aggregated data. adj_mat adjacency matrix. conds xxx protname_order xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell_agg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacell aggregation — metacell_agg","text":"SummarizedExperiment containing aggregated data.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/metacell_agg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Metacell aggregation — metacell_agg","text":"Samuel Wieczorek, Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/mv_imputation_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the LAPALA — mv_imputation_protein","title":"Finds the LAPALA — mv_imputation_protein","text":"Methods available : wrapper.impute.detQuant(): method wrapper function impute.detQuant() objects class MSnSet wrapper.impute.KNN(): Can impute POV missing values. method wrapper objects class QFeatures imputes missing values fixed value. function imputes missing values condition condition. wrapper.impute.slsa(): Imputation peptides values biological condition. method wrapper function impute.slsa() package imp4p adapted object class MSnSet. wrapper.impute.fixedValue(): method wrapper objects class MSnSet imputes missing values fixed value. wrapper.impute.pa(): Imputation peptides values biological condition. method wrapper function impute.pa package imp4p adapted object class MSnSet.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/mv_imputation_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the LAPALA — mv_imputation_protein","text":"","code":"findMECBlock(obj, grp)  reIntroduceMEC(obj, grp, MECIndex)  wrapper.impute.KNN(obj = NULL, grp, K)  wrapper.impute.fixedValue(obj, grp, fixVal = 0, na.type)  wrapper.impute.pa(obj = NULL, grp, q.min = 0.025)  wrapper.impute.detQuant(obj, qval = 0.025, factor = 1, na.type)  getQuantile4Imp(qdata, qval = 0.025, factor = 1)  wrapper.impute.slsa(obj = NULL, design = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/mv_imputation_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the LAPALA — mv_imputation_protein","text":"obj object class QFeatures. grp xxx MECIndex data.frame contains index MEC (see findMECBlock) K number neighbors. fixVal float. na.type string indicates type missing values impute. Available values : NA (POV MEC), POV, MEC. q.min function impute.pa() package imp4p qval expression set containing quantitative values various replicates factor scaling factor multiply imputation value qdata xxx design xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/mv_imputation_protein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the LAPALA — mv_imputation_protein","text":"data.frame containing indexes LAPALA list two vectors, respectively containing imputation values rescaled imputation values","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/mv_imputation_protein.html","id":"utilities-functions","dir":"Reference","previous_headings":"","what":"Utilities functions","title":"Finds the LAPALA — mv_imputation_protein","text":"findMECBlock(): xxx reIntroduceMEC(): xxx getQuantile4Imp(): Quantile imputation value definition. method returns q-th quantile column expression set, scaling factor","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/mv_imputation_protein.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finds the LAPALA — mv_imputation_protein","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/mv_imputation_protein.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds the LAPALA — mv_imputation_protein","text":"","code":"data(Exp1_R25_prot, package=\"DaparToolshedData\") obj <- Exp1_R25_prot[[1]][seq_len(100)] grp <- design.qf(Exp1_R25_prot)$Condition lapala <- findMECBlock(obj, grp) na.type = c(\"Missing POV\", \"Missing MEC\") obj.imp.pov <- wrapper.impute.detQuant(obj, na.type = na.type) obj.imp.pov <- reIntroduceMEC(obj, grp, lapala)  obj.imp.pov <- wrapper.impute.KNN(obj, grp, 3) #> Warning: 2 rows with more than 99 % entries missing; #>  mean imputation used for these rows #> Warning: 2 rows with more than 99 % entries missing; #>  mean imputation used for these rows  obj.imp.pov <- wrapper.impute.fixedValue(obj, grp, 0.001, na.type = \"Missing POV\") obj.imp.mec <- wrapper.impute.fixedValue(obj, grp, 0.001, na.type = \"Missing MEC\") obj.imp.na <- wrapper.impute.fixedValue(obj, grp, 0.001, na.type = c(\"Missing MEC\", \"Missing POV\"))  obj.imp.pov <- wrapper.impute.pa(obj, grp)  qdata <- SummarizedExperiment::assay(obj) quant <- getQuantile4Imp(qdata)  coldata <- design.qf(Exp1_R25_prot) #obj.slsa.pov <- wrapper.impute.slsa(obj, grp, coldata)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_ExportMenu.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised contextual menu of highcharts plots — my_hc_ExportMenu","title":"Customised contextual menu of highcharts plots — my_hc_ExportMenu","text":"Customised contextual menu highcharts plots","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_ExportMenu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised contextual menu of highcharts plots — my_hc_ExportMenu","text":"","code":"my_hc_ExportMenu(hc, filename)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_ExportMenu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised contextual menu of highcharts plots — my_hc_ExportMenu","text":"hc highcharter object filename filename plot saved","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_ExportMenu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customised contextual menu of highcharts plots — my_hc_ExportMenu","text":"contextual menu highcharts plots","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_ExportMenu.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Customised contextual menu of highcharts plots — my_hc_ExportMenu","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_ExportMenu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customised contextual menu of highcharts plots — my_hc_ExportMenu","text":"","code":"library(\"highcharter\") hc <- highchart() hc_chart(hc, type = \"line\")  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"type\":\"line\"},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}}},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}hc_add_series(hc, data = c(29, 71, 40))  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}},\"series\":[{\"data\":[29,71,40]}]},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}my_hc_ExportMenu(hc, filename = \"foo\")  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":true,\"filename\":\"foo\",\"buttons\":{\"contextButton\":{\"menuItems\":[\"downloadPNG\",\"downloadSVG\",\"downloadPDF\"]}}},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}}},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_chart.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised resetZoomButton of highcharts plots — my_hc_chart","title":"Customised resetZoomButton of highcharts plots — my_hc_chart","text":"Customised resetZoomButton highcharts plots","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_chart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised resetZoomButton of highcharts plots — my_hc_chart","text":"","code":"my_hc_chart(hc, chartType, zoomType = \"None\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_chart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised resetZoomButton of highcharts plots — my_hc_chart","text":"hc highcharter object chartType type plot zoomType type zoom (one \"x\", \"y\", \"xy\", \"None\")","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_chart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customised resetZoomButton of highcharts plots — my_hc_chart","text":"highchart plot","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_chart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Customised resetZoomButton of highcharts plots — my_hc_chart","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/my_hc_chart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customised resetZoomButton of highcharts plots — my_hc_chart","text":"","code":"library(\"highcharter\") hc <- highchart() hc_chart(hc, type = \"line\")  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"type\":\"line\"},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}}},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}hc_add_series(hc, data = c(29, 71, 40))  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":false},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}},\"series\":[{\"data\":[29,71,40]}]},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}my_hc_ExportMenu(hc, filename = \"foo\")  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":null}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":true,\"filename\":\"foo\",\"buttons\":{\"contextButton\":{\"menuItems\":[\"downloadPNG\",\"downloadSVG\",\"downloadPDF\"]}}},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}}},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nEmptyLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of empty lines in the data — nEmptyLines","title":"Number of empty lines in the data — nEmptyLines","text":"function counts number empty lines (elements equal NA).","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nEmptyLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of empty lines in the data — nEmptyLines","text":"","code":"nEmptyLines(df)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nEmptyLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of empty lines in the data — nEmptyLines","text":"df data.frame.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nEmptyLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of empty lines in the data — nEmptyLines","text":"integer(1)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nEmptyLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of empty lines in the data — nEmptyLines","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nEmptyLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of empty lines in the data — nEmptyLines","text":"","code":"library(QFeatures) data(ft, package='DaparToolshed') nEmptyLines(assay(ft, 1)) #> [1] 0"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nonzero.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the indices of non-zero elements in sparse matrices — nonzero","title":"Retrieve the indices of non-zero elements in sparse matrices — nonzero","text":"function retrieves indices non-zero elements sparse matrices class dgCMatrix package Matrix. function largely inspired package RINGO.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nonzero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the indices of non-zero elements in sparse matrices — nonzero","text":"","code":"nonzero(x)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nonzero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the indices of non-zero elements in sparse matrices — nonzero","text":"x sparse matrix class dgCMatrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nonzero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the indices of non-zero elements in sparse matrices — nonzero","text":"two-column matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nonzero.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve the indices of non-zero elements in sparse matrices — nonzero","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/nonzero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the indices of non-zero elements in sparse matrices — nonzero","text":"","code":"library(Matrix) mat <- Matrix(c(0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1),     nrow = 5, byrow = TRUE, sparse = TRUE) res <- nonzero(mat)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/normalization_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalisation — normalization_methods","title":"Normalisation — normalization_methods","text":"Provides several methods normalize quantitative data MSnSet object. organized six main families : GlobalQuantileAlignement, sumByColumns, QuantileCentering, MeanCentering, LOESS, vsn first family, type. five families, two type categories available : \"Overall\" means value protein (ie line expression data tab) computed samples ; \"within conditions\" means value protein (ie line SummarizedExperiment::assay() data tab) computed condition condition.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/normalization_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalisation — normalization_methods","text":"","code":"normalizeMethods(target = \"all\")  GlobalQuantileAlignment(qData)  SumByColumns(qData, conds = NULL, type = NULL, subset.norm = NULL)  QuantileCentering(   qData,   conds = NULL,   type = \"overall\",   subset.norm = NULL,   quantile = 0.15 )  MeanCentering(   qData,   conds,   type = \"overall\",   subset.norm = NULL,   scaling = FALSE )  vsn(qData, conds, type = NULL)  LOESS(qData, conds, type = \"overall\", span = 0.7)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/normalization_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalisation — normalization_methods","text":"target xxx qData xxx conds xxx type \"overall\" (shift sample distributions ) \"within conditions\" (shift sample distributions within condition time). subset.norm vector index indicating rows used normalization quantile float corresponds quantile used align data. scaling boolean indicates variance data forced unit (variance reduction) . span xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/normalization_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalisation — normalization_methods","text":"xxx normalized numeric matrix normalized numeric matrix normalized numeric matrix normalized numeric matrix normalized numeric matrix normalized numeric matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/normalization_methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalisation — normalization_methods","text":"Samuel Wieczorek, Thomas Burger, Helene Borges, Anais Courtier, Enora Fremy","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/normalization_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalisation — normalization_methods","text":"","code":"## Get the list of methods normalizeMethods() #> [1] \"GlobalQuantileAlignment\" \"SumByColumns\"            #> [3] \"QuantileCentering\"       \"MeanCentering\"           #> [5] \"LOESS\"                   \"vsn\"                       data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept qData <- SummarizedExperiment::assay(obj[[1]]) conds <- design.qf(obj)$Condition    #normalized <- GlobalQuantileAlignment(qData)  normalized <- SumByColumns(qData, conds,     type = \"within conditions\",     subset.norm = seq_len(10) )  normalized <- QuantileCentering(SummarizedExperiment::assay(obj[[1]]), conds, type = \"within conditions\", subset.norm = seq_len(10) )  normalized <- MeanCentering(qData, conds, type = \"overall\")  # normalized <- vsn(qData, conds, type = \"overall\")  normalized <- LOESS(qData, conds, type = \"overall\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/output_2_Excel.html","id":null,"dir":"Reference","previous_headings":"","what":"This function exports a data.frame to a Excel file. — output_2_Excel","title":"This function exports a data.frame to a Excel file. — output_2_Excel","text":"function exports MSnSet data object Excel file. three data.frames MSnSet object (ie experimental data, phenoData metaData respectively integrated separate sheets Excel file). colored cells experimental data correspond original missing values imputed.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/output_2_Excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function exports a data.frame to a Excel file. — output_2_Excel","text":"","code":"readExcel(file, sheet = NULL)  listSheets(file)  write_Assay_To_Excel(wb, obj, i, n)  WriteHistory(wb, obj, n)  Write_SamplesData_to_Excel(wb, obj, n)  Write_RowData(wb, obj, i, n)  write.excel(obj, filename)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/output_2_Excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function exports a data.frame to a Excel file. — output_2_Excel","text":"file name Excel file. sheet name sheet wb xxxx obj xxx xxx n xxx filename character string name Excel file.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/output_2_Excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function exports a data.frame to a Excel file. — output_2_Excel","text":"Excel file (.xlsx)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/output_2_Excel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function exports a data.frame to a Excel file. — output_2_Excel","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/output_2_Excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function exports a data.frame to a Excel file. — output_2_Excel","text":"","code":"library(QFeatures) data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(100)] df <- assay(obj[[1]]) tags <- qMetacell(obj[[1]]) colors <- list(     \"Missing POV\" = \"lightblue\",     \"Missing MEC\" = \"orange\",     \"Quant. by recovery\" = \"lightgrey\",     \"Quant. by direct id\" = \"white\",     \"Combined tags\" = \"red\" ) write.excel(obj, filename = \"toto.xlsx\") #> [1] \"toto.xlsx\"   data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10)] write.excel(obj, \"foo.xlsx\") #> [1] \"foo.xlsx\""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/pepa.test.html","id":null,"dir":"Reference","previous_headings":"","what":"PEptide based Protein differential Abundance test — pepa.test","title":"PEptide based Protein differential Abundance test — pepa.test","text":"PEptide based Protein differential Abundance test","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/pepa.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PEptide based Protein differential Abundance test — pepa.test","text":"","code":"pepa.test(X, y, n1, n2, global = FALSE, use.lm = FALSE)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/pepa.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PEptide based Protein differential Abundance test — pepa.test","text":"X Binary q x p design matrix q peptides p proteins. X_(ij)=1 peptide belongs protein j, 0 otherwise. y q x n matrix representing log intensities q peptides among n MS samples. n1 number samples condition 1. assumed first n1 columns y correspond observations condition 1. n2 number samples condition 2. global TRUE, test statistic protein uses residues, including ones peptides different connected components. Can much faster require compute connected components. However p-values well calibrated case, amounts adding ridge test statistic. Calibrating p-value require knowing amplitude ridge, turns require computing connected components. use.lm TRUE (global=FALSE), use lm() rather result Proposition 1 compute test statistic","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/pepa.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PEptide based Protein differential Abundance test — pepa.test","text":"list following elements: llr: log likelihood ratio statistic (maximum likelihood version). llr.map: log likelihood ratio statistic (maximum posteriori version). llr.pv: p-value llr. llr.map.pv: p-value llr.map. mse.h0: Mean squared error H0 mse.h1: Mean squared error H1 s: selected regularization hyperparameter llr.map. wchi2: weight used make llr.map chi2-distributed H0.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/pepa.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PEptide based Protein differential Abundance test — pepa.test","text":"Thomas Burger, Laurent Jacob","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/pepa.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PEptide based Protein differential Abundance test — pepa.test","text":"","code":"NA #> [1] NA"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Jitter plot of CC — plotJitter","title":"Jitter plot of CC — plotJitter","text":"Jitter plot CC","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jitter plot of CC — plotJitter","text":"","code":"plotJitter(list.of.cc = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jitter plot of CC — plotJitter","text":"list..cc List cc returned function get.pep.prot.cc","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jitter plot of CC — plotJitter","text":"plot","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Jitter plot of CC — plotJitter","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jitter plot of CC — plotJitter","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(100)] X <- BuildAdjacencyMatrix(obj[[1]]) ll <- get.pep.prot.cc(X) plotJitter(ll)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter_rCharts.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a a jitter plot for CC — plotJitter_rCharts","title":"Display a a jitter plot for CC — plotJitter_rCharts","text":"Display jitter plot CC","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter_rCharts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a a jitter plot for CC — plotJitter_rCharts","text":"","code":"plotJitter_rCharts(df, clickFunction = NULL)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter_rCharts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a a jitter plot for CC — plotJitter_rCharts","text":"df xxxx clickFunction xxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter_rCharts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a a jitter plot for CC — plotJitter_rCharts","text":"plot","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter_rCharts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display a a jitter plot for CC — plotJitter_rCharts","text":"Thomas Burger, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/plotJitter_rCharts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a a jitter plot for CC — plotJitter_rCharts","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(100)] X <- BuildAdjacencyMatrix(obj[[1]]) ll <- get.pep.prot.cc(X)[1:4] n.prot <- unlist(lapply(ll, function(x) {length(x$proteins)})) n.pept <- unlist(lapply(ll, function(x) {length(x$peptides)})) df <- tibble::tibble( x = jitter(n.pept), y = jitter(n.prot), index = seq_len(length(ll)) ) plotJitter_rCharts(df) #> Warning: There is no tooltip in the object.  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"type\":\"scatter\",\"zoomType\":\"xy\",\"showAxes\":true,\"resetZoomButton\":{\"position\":{\"align\":\"left\",\"verticalAlign\":\"top\"}}},\"title\":{\"text\":null},\"yAxis\":{\"title\":{\"text\":\"Nb of proteins ic CC\"}},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":true,\"filename\":\"plotCC\",\"buttons\":{\"contextButton\":{\"menuItems\":[\"downloadPNG\",\"downloadSVG\",\"downloadPDF\"]}}},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"animation\":{\"duration\":100},\"cursor\":\"pointer\",\"point\":{\"events\":{\"click\":\"function(event) \\n                {\\n                Shiny.onInputChange('eventPointClicked', \\n                [this.index]+'_'+ [this.series.name]);\\n                }\"}}},\"treemap\":{\"layoutAlgorithm\":\"squarified\"}},\"series\":[{\"data\":[{\"x\":1.016410872107372,\"y\":2.196230827085674,\"index\":1},{\"x\":1.018373384643346,\"y\":2.061110715661198,\"index\":2},{\"x\":1.010729454290122,\"y\":1.850234090071172,\"index\":3},{\"x\":0.9887153205182403,\"y\":1.136618493683636,\"index\":4}],\"type\":\"scatter\"}],\"legend\":{\"enabled\":false},\"xAxis\":{\"title\":{\"text\":\"Nb of peptides ic CC\"}},\"tooltip\":{\"headerFormat\":\"\",\"pointFormat\":null}},\"theme\":{\"chart\":{\"backgroundColor\":\"transparent\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[\"hc_opts.plotOptions.series.point.events.click\"],\"jsHooks\":[]}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/postHocTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-hoc tests for classic 1-way ANOVA — postHocTest","title":"Post-hoc tests for classic 1-way ANOVA — postHocTest","text":"function allows compute post-hoc test 1-way ANOVA analysis. expects input object obtained function classic1wayAnova. second parameter allows choose 2 different post-hoc tests: Tukey Honest Significant Differences (specified \"TukeyHSD\") Dunnett test (specified \"Dunnett\").","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/postHocTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-hoc tests for classic 1-way ANOVA — postHocTest","text":"","code":"postHocTest(aov_fits, post_hoc_test = \"TukeyHSD\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/postHocTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-hoc tests for classic 1-way ANOVA — postHocTest","text":"aov_fits list containing aov fitted model objects post_hoc_test character string indicating post-hoc test use. Possible values \"TukeyHSD\" \"Dunnett\". See details choose according experimental design.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/postHocTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-hoc tests for classic 1-way ANOVA — postHocTest","text":"list 2 dataframes: first one called \"LogFC\" contains pairwise comparisons logFC values (one column one comparison) analysed feature; second one named \"P_Value\" contains corresponding pvalues.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/postHocTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Post-hoc tests for classic 1-way ANOVA — postHocTest","text":"function allowing realise post-hoc tests set proteins/peptides classic 1-way anova performed function classic1wayAnova. Two types tests currently available: Tukey HSD's test Dunnett's test. Default Tukey's test. Tukey HSD's test compares possible pairs means, based studentized range distribution. used TukeyHSD() function, can applied balanced designs (number samples group), also midly unbalanced designs. Dunnett's test compares single control group groups. Make sure factor levels properly ordered.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/postHocTest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Post-hoc tests for classic 1-way ANOVA — postHocTest","text":"Hélène Borges","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/postHocTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-hoc tests for classic 1-way ANOVA — postHocTest","text":"","code":"if (FALSE) examples/ex_postHocTest.R # \\dontrun{}"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/qMetacell-filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Search lines which respects request on one or more conditions. — SymFilteringOperators","title":"Search lines which respects request on one or more conditions. — SymFilteringOperators","text":"function looks lines respect request either conditions least one condition.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/qMetacell-filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search lines which respects request on one or more conditions. — SymFilteringOperators","text":"","code":"SymFilteringOperators()  qMetacellFilteringScope()  qMetacellWholeMatrix(   object,   cmd,   pattern,   percent = \"Percentage\",   th,   operator )  qMetacellWholeLine(object, cmd, pattern)  qMetacellOnConditions(   object,   cmd,   mode,   pattern,   conds,   percent = \"Percentage\",   operator,   th )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/qMetacell-filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search lines which respects request on one or more conditions. — SymFilteringOperators","text":"object xxx cmd Available values : pattern ss percent xxx th threshold apply operator String operator use. List operators available 'SymFilteringOperators()'. mode xxx conds xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/qMetacell-filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search lines which respects request on one or more conditions. — SymFilteringOperators","text":"vector operators NA vector filtering scopes NA NA NA","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/qMetacell-filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search lines which respects request on one or more conditions. — SymFilteringOperators","text":"","code":"SymFilteringOperators() #>    lessthan        less greaterthan     greater       equal   different  #>        \"<=\"         \"<\"        \">=\"         \">\"        \"==\"        \"!=\"   data(ft, package='DaparToolshed') obj <- ft[[1]] level <- typeDataset(obj) pattern <- \"Missing\" mask <- match.metacell(     metadata = qMetacell(obj),     pattern = pattern,     level = level ) percent <- FALSE th <- 3 op <- \">=\" cmd <- 'delete'  ind <- qMetacellWholeMatrix(obj, cmd, pattern, percent, th, op)  data(ft, package='DaparToolshed') ind <- qMetacellWholeLine(obj, cmd, pattern)  conds <- design.qf(ft)$Condition op <- \">=\" th <- 0.5 percent <- \"Percentage\" mode <- \"AllCond\" ind <- qMetacellOnConditions(obj, cmd, mode, pattern, conds, percent, op, th)  qMetacellFilteringScope() #> [1] \"None\"           \"WholeLine\"      \"WholeMatrix\"    \"AllCond\"        #> [5] \"AtLeastOneCond\"  data(ft_na) obj <- ft_na[[1]]"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantitative metadata vocabulary for entities — q_metacell","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"function gives vocabulary used quantitative metadata entity condition. function based qMetacell dataframe look either missing values (used update initial dataset) imputed values (used post processing protein qMetacell aggregation) quantitative columns, missing value identified value rather value equal 0. Conversion rules Quanti\t\t\tTag NA 0\t\tNA Update quantitative metadata information missing values imputed Gives tags metadata vocabulary containing pattern (parent children). Agregation rules cells quantitative metadata peptides. Please refer qMetacell.def vocabulary qMetacell.def()","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"","code":"metacell.def(level)  custom_metacell_colors()  Set_POV_MEC_tags(obj, conds)  Set_POV_MEC_tags2(conds, df, level)  Metacell_generic(qdata, conds, level)  UpdateMetacellAfterImputation(object, ...)  # S4 method for class 'SummarizedExperiment' UpdateMetacellAfterImputation(object, from, to, ...)  search.metacell.tags(pattern, level, depth = \"1\")  metacombine(met, level)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"level xxx obj xxx conds xxx df object class SummarizedExperiment qdata matrix quantitative data object xxx ... xxx xxx xxx pattern string search. depth xxx met xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"data.frame containing different tags corresponding colors level given parameter instance class QFeatures. xxxxx NA NA","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":"glossary","dir":"Reference","previous_headings":"","what":"Glossary","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"Peptide-level vocabulary |– '' |    | |    |– 1.0 'Quantified' |    |    | |    |    |– 1.1 \"Quant. direct id\" (color 4, white) |    |    | |    |    |– 1.2 \"Quant. recovery\" (color 3, lightgrey) |    | |    |– 2.0 \"Missing\" (color) |    |    | |    |    |– 2.1 \"Missing POV\" (color 1) |    |    | |    |    |– 2.2 'Missing MEC' (color 2) |    | |    |– 3.0 'Imputed' |    |    | |    |    |– 3.1 'Imputed POV' (color 1) |    |    | |    |    |– 3.2 'Imputed MEC' (color 2) Protein-level vocabulary: |– '' |    | |    |– 1.0 'Quantified' |    |    | |    |    |– 1.1 \"Quant. direct id\" (color 4, white) |    |    | |    |    |– 1.2 \"Quant. recovery\" (color 3, lightgrey) |    | |    |– 2.0 \"Missing\" |    |    | |    |    |– 2.1 \"Missing POV\" (color 1) |    |    | |    |    |– 2.2 'Missing MEC' (color 2) |    | |    |– 3.0 'Imputed' |    |    | |    |    |– 3.1 'Imputed POV' (color 1) |    |    | |    |    |– 3.2 'Imputed MEC' (color 2) |    | |    |– 4.0 'Combined tags' (color 3bis, lightgrey)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":"conversion-to-the-glossary","dir":"Reference","previous_headings":"","what":"Conversion to the glossary","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"generic conversion Conversion Proline datasets Conversion Maxquant datasets","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":"basic-agreagtion","dir":"Reference","previous_headings":"","what":"Basic agreagtion","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"Agregation non imputed values (2.X) quantitative values Agregation 2.1 peptides gives missing value non imputed (2.0) Agreagtion 2.2 peptides givesa missing value non imputed (2.0) Agregation mix 2.1 2.2 gives missing value non imputed (2.0) |—————————- type peptides agregate 1.0, 1.1 1.2, final metadata set tag set metacell agregate mix 1.0, 1.1 1.2, final metadata set 1.0 set metacell agregate mix 3.X 3.0, final metadata set 3.0 set metacell agregate mix 3.X 3.0 (X.X), final metadata set 4.0 |—————————-","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":"post-processing","dir":"Reference","previous_headings":"","what":"Post processing","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"Update metacell POV/MEC status categories 2.0 3.0 TODO","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"Thomas Burger, Samuel Wieczorek Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/q_metacell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantitative metadata vocabulary for entities — q_metacell","text":"","code":"metacell.def('protein') #>                   node     parent   color #> 1                  Any              white #> 2           Quantified        Any #0A31D0 #> 3  Quant. by direct id Quantified #6178D9 #> 4   Quant. by recovery Quantified #B9C4F2 #> 5              Missing        Any #CF8205 #> 6          Missing POV    Missing #E5A947 #> 7          Missing MEC    Missing #F1CA8A #> 8              Imputed        Any #A40C0C #> 9          Imputed POV    Imputed #E34343 #> 10         Imputed MEC    Imputed #F59898 #> 11       Combined tags        Any #1E8E05 metacell.def('peptide') #>                   node     parent   color #> 1                  Any              white #> 2           Quantified        Any #0A31D0 #> 3  Quant. by direct id Quantified #6178D9 #> 4   Quant. by recovery Quantified #B9C4F2 #> 5              Missing        Any #CF8205 #> 6          Missing POV    Missing #E5A947 #> 7          Missing MEC    Missing #F1CA8A #> 8              Imputed        Any #A40C0C #> 9          Imputed POV    Imputed #E34343 #> 10         Imputed MEC    Imputed #F59898  data(Exp1_R25_prot, package = \"DaparToolshedData\") obj <- Exp1_R25_prot[[1]] conds <- design.qf(Exp1_R25_prot)$Condition df <- Set_POV_MEC_tags(obj, conds)  file <- system.file(\"extdata\", \"Exp1_R25_pept.txt\", package=\"DaparToolshedData\") data <- read.table(file, header=TRUE, sep=\"\\t\",stringsAsFactors = FALSE) metadataFile <- system.file(\"extdata\", \"samples_Exp1_R25.txt\", package=\"DaparToolshedData\") metadata <- read.table(metadataFile, header=TRUE, sep=\"\\t\", as.is=TRUE, stringsAsFactors = FALSE) conds <- metadata$Condition qdata <- data[seq_len(100), seq(56, 61)] df <- data[seq_len(100) , seq(43,48)] df <- Metacell_generic(qdata, conds, 'peptide')  data(Exp1_R25_pept, package = 'DaparToolshedData') obj <- Exp1_R25_pept[seq_len(10),] obj[[2]] <- UpdateMetacellAfterImputation(obj[[2]], 'Missing', 'Imputed')  search.metacell.tags('Missing POV', 'peptide') #> [1] \"Missing POV\" search.metacell.tags('Quantified', 'peptide') #> [1] \"Quantified\"          \"Quant. by direct id\" \"Quant. by recovery\"   if (FALSE) { # \\dontrun{ ll <- omXplore::metacell.def('peptide')$node for (i in 1:length(ll)) test <- lapply(combn(ll, i, simplify = FALSE),  function(x) tag <- metacombine(x, 'peptide')) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/samLRT.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxxxx — samLRT","title":"xxxxxx — samLRT","text":"function computes regularized version likelihood ratio statistic. regularization adds user-input fudge factor s1 variance estimator. straightforward using fixed effect model (cases 'numeric' 'lm') requires care using mixed model.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/samLRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxxxx — samLRT","text":"","code":"samLRT(lmm.res.h0, lmm.res.h1, cc, n, p, s1)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/samLRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxxxx — samLRT","text":"lmm.res.h0 vector object containing estimates (used compute statistic) H0 connected component. fast version estimator used (implemented package), lmm.res.h0 vector containing averages squared residuals. fixed effect model used, vector lm objects mixed effect model used vector lmer object. lmm.res.h1 similar lmm.res.h0, vector object containing estimates (used compute statistic) H1 protein. cc list containing indices peptides proteins belonging connected component. n number samples used test p number proteins experiment s1 fudge factor added variance estimate","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/samLRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxxxx — samLRT","text":"llr.sam: vector numeric containing regularized log likelihood ratio statistic protein. s: vector containing maximum likelihood estimate variance chosen model. using fast version estimator implemented package, thing input lmm.res.h1. lh1.sam: vector numeric containing regularized log likelihood H1 protein. lh0.sam: vector numeric containing regularized log likelihood H0 connected component. sample.sizes: vector numeric containing sample size (number biological samples times number peptides) protein. number proteins within connected component.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/samLRT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxxxxx — samLRT","text":"Thomas Burger, Laurent Jacob","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/samLRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxxxx — samLRT","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/select_topn.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection of top n peptides — select_topn","title":"Selection of top n peptides — select_topn","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/select_topn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection of top n peptides — select_topn","text":"","code":"select_topn(pepData, X, n = 10, funpept = \"Mean\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/select_topn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection of top n peptides — select_topn","text":"pepData matrix containing peptide intensities. X matrix acting adjacency matrix. n numeric(1) specifying number peptides use protein. funpept function used determining peptide's value. Available functions Sum, Mean Median.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/select_topn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selection of top n peptides — select_topn","text":"adjacency matrix top n peptides selected.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/select_topn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Selection of top n peptides — select_topn","text":"Manon Gaudin","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/select_topn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selection of top n peptides — select_topn","text":"","code":"if (FALSE) { # \\dontrun{ data(Exp1_R25_pept, package=\"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(50)] X <- BuildAdjacencyMatrix(obj[[length(obj)]]) X.topn <- select_topn(assay(obj[[length(obj)]]), X, n = 3) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/separateAdjPval.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the adjusted p-values separately on contrast using CP4P — separateAdjPval","title":"Computes the adjusted p-values separately on contrast using CP4P — separateAdjPval","text":"Computes adjusted p-values separately contrast using CP4P","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/separateAdjPval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the adjusted p-values separately on contrast using CP4P — separateAdjPval","text":"","code":"separateAdjPval(x, pval.threshold = 1.05, method = 1)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/separateAdjPval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the adjusted p-values separately on contrast using CP4P — separateAdjPval","text":"x proteins x contrasts dataframe (raw) p-values pval.threshold p-values threshold considered. Default 1.05 (equivalent threshold). Applying threshold nearby 1 can instrumental improve uniformity null, notably case upstream mutliple contrat correction (experienced users ) method method estimate pi_0, see CP4P","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/separateAdjPval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the adjusted p-values separately on contrast using CP4P — separateAdjPval","text":"proteins x contrasts table adjusted p-values","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/separateAdjPval.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the adjusted p-values separately on contrast using CP4P — separateAdjPval","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/separateAdjPval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the adjusted p-values separately on contrast using CP4P — separateAdjPval","text":"","code":"data(Exp1_R25_prot, package='DaparToolshedData') exdata <- Exp1_R25_prot[1:5,] separateAdjPval(testAnovaModels(applyAnovasOnProteins(exdata, 1), \"TukeyHSD\")$P_Value) #> Procedure of Benjamini-Hochberg is used. pi0 is fixed to 1. #>           V1_pval #> [1,] 0.7209545661 #> [2,] 0.8916825703 #> [3,] 0.0001321402 #> [4,] 0.1253349546 #> [5,] 0.8916825703"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/splitAdjacencyMat.html","id":null,"dir":"Reference","previous_headings":"","what":"splits an adjacency matrix into specific and shared — splitAdjacencyMat","title":"splits an adjacency matrix into specific and shared — splitAdjacencyMat","text":"Method split adjacency matrix specific shared","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/splitAdjacencyMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"splits an adjacency matrix into specific and shared — splitAdjacencyMat","text":"","code":"splitAdjacencyMat(X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/splitAdjacencyMat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"splits an adjacency matrix into specific and shared — splitAdjacencyMat","text":"X adjacency matrix","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/splitAdjacencyMat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"splits an adjacency matrix into specific and shared — splitAdjacencyMat","text":"list two adjacency matrices","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/splitAdjacencyMat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"splits an adjacency matrix into specific and shared — splitAdjacencyMat","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/splitAdjacencyMat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"splits an adjacency matrix into specific and shared — splitAdjacencyMat","text":"","code":"data(Exp1_R25_pept, package=\"DaparToolshedData\") obj.pep <- Exp1_R25_pept[seq_len(10)] X <- BuildAdjacencyMatrix(obj.pep[[length(obj.pep)]]) ll <- splitAdjacencyMat(X)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/test.design.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if xxxxxx — test.design","title":"Check if xxxxxx — test.design","text":"Check xxxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/test.design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if xxxxxx — test.design","text":"","code":"test.design(tab)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/test.design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if xxxxxx — test.design","text":"tab data.frame correspond xxxxxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/test.design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if xxxxxx — test.design","text":"list two items","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/test.design.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if xxxxxx — test.design","text":"Thomas Burger, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/test.design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if xxxxxx — test.design","text":"","code":"data(Exp1_R25_pept, package='DaparToolshedData') test.design(SummarizedExperiment::colData(Exp1_R25_pept)[, seq(3)]) #> $valid #> [1] FALSE #>  #> $warn #> [1] \"The value 25fmol in column 'Condition' is not correctly set.\\n\" #> [2] \"The value 25fmol in column 'Condition' is not correctly set.\\n\" #> [3] \"The value 25fmol in column 'Condition' is not correctly set.\\n\" #> [4] \"The value 10fmol in column 'Condition' is not correctly set.\\n\" #> [5] \"The value 10fmol in column 'Condition' is not correctly set.\\n\" #> [6] \"The value 10fmol in column 'Condition' is not correctly set.\\n\" #>"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/testAnovaModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies a statistical test on each element of a list of linear models — testAnovaModels","title":"Applies a statistical test on each element of a list of linear models — testAnovaModels","text":"Applies statistical test element list linear models","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/testAnovaModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies a statistical test on each element of a list of linear models — testAnovaModels","text":"","code":"testAnovaModels(aov_fits, test = \"Omnibus\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/testAnovaModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies a statistical test on each element of a list of linear models — testAnovaModels","text":"aov_fits list linear models, outputted applyAnovasOnProteins test character string among \"Omnibus\", \"TukeyHSD\", \"TukeySinglestep\", \"TukeyStepwise\", \"TukeyNoMTC\", \"DunnettSinglestep\", \"DunnettStepwise\" \"DunnettNoMTC\". \"Omnibus\" tests -mean equality, Tukey tests compares pairs means Dunnet tests compare means first one. multiple tests (Dunnet's Tukey's) possible correct multiplicity (either single-step step-wise FWER) . Tukey's Dunnet's tests use multcomp package expect \"TukeyHSD\" relies stats package.  \"TukeyHSD\" \"TukeyStepwise\" gives similar results.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/testAnovaModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies a statistical test on each element of a list of linear models — testAnovaModels","text":"list 2 tables (p-values fold-changes, respecively)","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/testAnovaModels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Applies a statistical test on each element of a list of linear models — testAnovaModels","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/testAnovaModels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Applies a statistical test on each element of a list of linear models — testAnovaModels","text":"","code":"data(Exp1_R25_prot, package='DaparToolshedData') exdata <- Exp1_R25_prot[1:5,] testAnovaModels(applyAnovasOnProteins(exdata, 1)) #> $logFC #>                                                anova_1way_logFC #> CON__A2I7N1;CON__A2I7N0                                      NA #> CON__P00761                                                  NA #> P02768upsedyp|ALBU_HUMAN_upsedyp;CON__P02768-1               NA #> CON__P04264                                                  NA #> CON__P07477                                                  NA #>  #> $P_Value #>                                                anova_1way_pval #> CON__A2I7N1;CON__A2I7N0                           4.325725e-01 #> CON__P00761                                       8.916825e-01 #> P02768upsedyp|ALBU_HUMAN_upsedyp;CON__P02768-1    2.052406e-05 #> CON__P04264                                       5.013337e-02 #> CON__P07477                                       8.704512e-01 #>"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/thresholdpval4fdr.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — thresholdpval4fdr","title":"xxx — thresholdpval4fdr","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/thresholdpval4fdr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — thresholdpval4fdr","text":"","code":"thresholdpval4fdr(x, pval.T, M)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/thresholdpval4fdr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — thresholdpval4fdr","text":"x xxx pval.T xxx M xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/thresholdpval4fdr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — thresholdpval4fdr","text":"xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/thresholdpval4fdr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxx — thresholdpval4fdr","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/thresholdpval4fdr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — thresholdpval4fdr","text":"","code":"NULL #> NULL"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/translatedRandomBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Generator of simulated values — translatedRandomBeta","title":"Generator of simulated values — translatedRandomBeta","text":"Generator simulated values","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/translatedRandomBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generator of simulated values — translatedRandomBeta","text":"","code":"translatedRandomBeta(n, min, max, param1 = 3, param2 = 1)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/translatedRandomBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generator of simulated values — translatedRandomBeta","text":"n integer number simulation (rbeta) min integer corresponds lower bound interval max integer corresponds upper bound interval param1 integer first parameter rbeta function. param2 integer second parameter rbeta function.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/translatedRandomBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generator of simulated values — translatedRandomBeta","text":"vector n simulated values","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/translatedRandomBeta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generator of simulated values — translatedRandomBeta","text":"Thomas Burger","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/translatedRandomBeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generator of simulated values — translatedRandomBeta","text":"","code":"translatedRandomBeta(1000, 5, 10, 1, 1) #>    [1] 7.124382 8.144773 9.829983 8.095988 7.915229 8.846555 8.216512 5.832411 #>    [9] 6.127046 5.753320 7.102589 5.752735 5.370166 5.037093 9.005501 6.616109 #>   [17] 6.001379 9.081832 9.098204 6.261899 6.514728 8.496235 8.378456 9.872102 #>   [25] 5.771501 9.795666 7.942054 5.575360 6.312106 7.239428 5.458835 7.658362 #>   [33] 7.418285 8.829006 6.914419 9.735965 8.234654 9.146400 9.973688 8.918504 #>   [41] 8.374968 5.170487 9.252885 5.730984 9.758896 6.611337 9.553484 6.928860 #>   [49] 7.083815 5.467096 6.087330 9.300362 9.246820 9.490844 7.537145 7.508233 #>   [57] 9.129319 8.992549 5.042578 5.104618 5.368335 6.330919 8.972183 8.288680 #>   [65] 7.003240 5.639944 7.592842 8.239217 7.947146 8.914546 5.636347 9.293427 #>   [73] 9.697191 5.656929 6.262117 6.819790 8.179145 8.197862 7.121081 8.712145 #>   [81] 5.925431 9.277773 7.952344 9.684109 7.316264 9.468067 5.194272 7.638208 #>   [89] 6.912049 7.570766 6.521422 8.999854 5.660239 6.830135 7.632548 9.244194 #>   [97] 8.751773 6.222273 6.523376 6.952749 6.518738 9.538192 6.927230 9.704293 #>  [105] 5.759103 7.444564 6.487001 5.439296 5.609263 8.263442 6.285478 9.073126 #>  [113] 7.928387 6.707834 8.650883 5.435998 8.145925 8.365482 5.497669 6.314875 #>  [121] 8.200236 7.110981 6.105232 6.160371 5.476809 8.913298 8.000684 8.548820 #>  [129] 6.577162 5.700438 7.502915 9.494706 8.865423 6.553318 7.207907 7.504130 #>  [137] 7.065998 8.316734 6.551680 7.106205 9.533211 5.404114 7.507712 5.945690 #>  [145] 7.700404 9.555750 9.449308 5.642536 5.381984 8.649771 6.710585 7.879338 #>  [153] 9.077545 9.085210 9.669660 8.041382 9.690320 9.382057 5.258838 7.022920 #>  [161] 5.631403 7.477879 9.152341 7.212118 8.723610 8.082362 6.682721 9.764539 #>  [169] 6.656167 7.199863 5.115845 5.215262 6.063913 8.257495 7.087326 7.828505 #>  [177] 8.949372 7.029532 8.881916 5.547334 9.271658 5.029711 6.817644 6.113342 #>  [185] 9.125062 7.943875 9.240949 7.891629 9.940340 8.813787 8.011541 9.621138 #>  [193] 6.177287 6.328823 5.740841 8.970357 6.645082 8.774970 5.372052 6.434269 #>  [201] 6.388869 7.856348 8.718781 6.527381 9.023310 9.633089 7.934287 6.989759 #>  [209] 7.527590 8.442939 5.228142 9.244827 7.697248 8.778556 6.164611 8.764389 #>  [217] 7.904507 5.312759 7.141851 9.629864 7.889628 5.472649 5.224931 8.736998 #>  [225] 7.384896 9.317927 8.367340 5.359276 5.979417 5.539566 8.361483 7.276734 #>  [233] 7.021317 9.545963 5.129226 5.606869 8.181201 8.929545 6.737483 9.893141 #>  [241] 8.142420 6.640219 9.982429 6.024482 7.657159 5.312444 5.297725 8.718421 #>  [249] 8.040587 5.364014 9.439433 5.925370 8.498318 8.082352 8.643044 5.700808 #>  [257] 6.291726 6.119486 8.155102 5.474416 5.470989 5.551618 9.101898 9.862716 #>  [265] 8.261130 8.732586 8.603930 5.880309 8.290554 5.593681 7.115615 6.515881 #>  [273] 5.520093 5.302178 8.863287 7.023891 8.397917 9.866821 6.452158 9.517661 #>  [281] 9.623053 5.364728 6.295495 8.289429 9.258814 8.799952 8.945429 8.724279 #>  [289] 9.229796 9.523499 6.057695 7.780315 7.918071 8.058839 6.204684 9.762301 #>  [297] 6.169310 8.222575 9.004866 6.914987 8.527710 5.140032 6.065497 9.988797 #>  [305] 6.638787 9.759159 6.250252 6.983647 5.339302 9.815780 5.016970 7.784671 #>  [313] 7.386910 8.757087 6.743790 7.889122 7.076221 8.182914 6.086604 7.175908 #>  [321] 5.452840 8.404320 6.704883 7.306070 9.947534 8.740156 8.855007 6.787263 #>  [329] 6.391808 5.019110 8.090331 6.995884 8.269343 8.475716 6.293977 6.249129 #>  [337] 9.539207 8.830892 8.344462 5.125330 7.106777 7.437235 7.338343 7.385081 #>  [345] 9.515129 5.849471 6.222424 7.391858 8.344796 7.139244 8.565173 6.575928 #>  [353] 9.531110 5.530466 5.119966 8.028082 5.093682 8.719183 9.806855 5.995718 #>  [361] 6.076919 5.669398 8.422343 9.444604 5.610310 9.659960 5.180570 8.324361 #>  [369] 7.263797 6.235452 7.519412 6.573736 6.887242 5.394222 7.452245 6.750447 #>  [377] 8.991134 7.892244 5.365071 9.087026 8.799796 8.644095 7.170070 8.615132 #>  [385] 5.507486 7.585034 8.074834 7.473405 5.859977 6.441615 8.271486 6.757636 #>  [393] 8.654345 6.990493 6.590856 8.951026 6.718211 6.011538 9.003460 8.079744 #>  [401] 6.100477 9.706084 7.711962 5.338128 9.355584 9.572305 5.564546 9.827582 #>  [409] 7.025078 5.645598 8.546384 8.811289 8.578189 7.659940 6.824275 8.408810 #>  [417] 7.096084 5.519179 7.488534 5.329478 6.676314 8.228170 7.173655 7.188340 #>  [425] 9.833742 5.762552 6.405165 8.601883 5.619217 8.300535 7.500054 9.974604 #>  [433] 6.649971 8.119769 6.920916 7.657906 5.379619 9.033861 8.327405 8.577134 #>  [441] 5.645305 5.201333 6.635670 8.102940 9.908155 7.516661 9.451709 7.191863 #>  [449] 9.894343 7.171749 9.484478 9.930140 6.140332 8.070554 7.825611 8.520595 #>  [457] 6.083572 5.426471 7.243064 6.510155 5.988219 6.554583 6.896233 5.708280 #>  [465] 5.614552 9.457841 6.911693 5.123917 8.076218 6.853384 5.758566 5.283631 #>  [473] 5.486060 9.734460 6.725932 7.510893 6.861897 8.915019 8.721359 6.533854 #>  [481] 6.809729 9.929414 5.846743 8.284388 6.704573 6.729849 7.915460 8.830077 #>  [489] 7.546431 6.190918 6.503935 9.420972 7.166666 7.995606 9.421706 5.486524 #>  [497] 9.120465 7.773294 5.655410 9.388971 9.195686 8.706824 5.065287 7.556025 #>  [505] 9.694802 9.663691 7.600386 9.609538 6.803705 5.869285 9.596091 8.400388 #>  [513] 8.900440 9.515989 8.397973 6.772978 5.324319 8.026987 7.754238 8.841955 #>  [521] 6.733477 5.202492 9.970128 6.537086 7.755020 5.102698 7.431819 8.798058 #>  [529] 8.502452 7.157475 7.830330 8.235128 7.590619 7.057277 7.226345 5.735872 #>  [537] 8.641575 8.864262 9.096658 7.570301 9.222084 8.023219 6.543023 7.931134 #>  [545] 6.824177 6.450629 8.080885 8.317830 8.191786 9.497562 5.596541 6.061016 #>  [553] 8.280685 8.950515 6.633543 7.212503 6.900008 5.194606 5.862264 6.619143 #>  [561] 9.319309 5.106783 8.846471 9.683482 8.247346 6.495600 6.326919 5.115894 #>  [569] 7.357340 9.905030 8.730933 5.164799 9.935041 8.595567 6.592454 9.097297 #>  [577] 6.531125 6.671721 8.844638 6.323777 8.887060 6.965554 8.406503 6.739835 #>  [585] 8.205810 5.787569 8.987854 5.793163 9.505769 5.331445 9.647829 8.575773 #>  [593] 7.819960 5.812885 6.100871 5.456891 8.413469 9.849521 9.390260 6.588295 #>  [601] 6.374422 5.764740 7.327206 5.321005 6.414682 5.254544 5.029438 7.637122 #>  [609] 8.689406 8.447737 7.279788 8.411147 7.757018 6.338110 5.901680 7.108713 #>  [617] 6.980800 6.945719 6.367691 9.331349 5.298931 7.643315 8.207101 5.621087 #>  [625] 9.037371 9.788279 8.764669 5.671370 8.641672 5.524265 8.946561 5.806475 #>  [633] 7.379318 6.224306 5.014840 7.183138 9.089165 6.517509 8.172800 6.363991 #>  [641] 5.055398 5.366472 5.844636 6.402762 5.753172 6.135845 9.295385 7.153795 #>  [649] 9.453318 9.998876 9.218147 5.969760 7.257014 7.365679 8.946935 9.722142 #>  [657] 5.023419 7.735630 5.546151 5.089821 8.258472 6.125862 6.344551 7.639883 #>  [665] 9.119392 9.343764 6.262562 6.086722 6.313651 6.441037 6.904791 8.780719 #>  [673] 9.565421 7.634294 5.253576 8.033329 9.894147 5.627733 6.058174 9.926598 #>  [681] 8.347637 7.370647 8.379904 5.277814 9.399603 5.024890 8.855053 6.248705 #>  [689] 7.728771 9.697719 9.097520 8.786333 9.449349 5.919544 9.615981 5.026650 #>  [697] 6.220730 8.085106 5.848761 7.321007 5.811942 5.568239 8.607298 5.364713 #>  [705] 9.733503 5.688505 9.558631 7.453929 9.450498 6.636970 8.425043 8.031298 #>  [713] 6.303138 6.131396 7.047896 9.636081 5.139070 5.339596 6.798868 8.910059 #>  [721] 5.188916 8.914246 9.484019 5.624796 8.719892 5.937977 9.437687 5.407354 #>  [729] 6.158295 7.389745 7.489564 5.994728 5.210726 9.983191 9.017908 5.569785 #>  [737] 9.579018 5.250709 6.522040 7.948524 8.464146 5.666022 6.871749 9.748515 #>  [745] 6.241478 6.129006 5.608603 9.143883 7.373254 8.736318 9.259964 6.970865 #>  [753] 8.513983 9.099200 5.296611 7.840011 7.405566 5.364202 8.151667 8.811390 #>  [761] 7.983314 8.470299 9.533632 6.028148 5.814821 7.782843 6.416276 9.289264 #>  [769] 8.533997 7.090530 9.521481 8.183667 5.481951 5.564173 6.380957 8.591304 #>  [777] 8.253247 5.382123 5.588158 9.168989 5.978983 7.166380 6.958122 7.489271 #>  [785] 9.860417 8.811759 7.878807 7.204558 8.489577 7.106194 7.409892 6.865588 #>  [793] 6.510493 9.605804 7.875642 8.833844 9.064749 6.104691 6.678723 9.945181 #>  [801] 5.949823 9.696181 6.696443 8.056153 9.419919 6.995103 7.401696 6.822412 #>  [809] 5.772953 8.085707 5.719464 8.649885 5.141197 9.502777 7.957282 6.349411 #>  [817] 6.286829 5.158451 5.506803 6.049600 5.288149 5.928217 9.583633 9.702469 #>  [825] 8.501902 6.992906 5.394214 9.158198 7.207265 7.023267 8.484488 9.387752 #>  [833] 5.956000 6.685881 5.281048 9.216610 8.849166 7.524360 5.438170 5.051610 #>  [841] 9.861497 7.272800 9.150446 9.166593 8.368701 5.530578 5.059965 5.380391 #>  [849] 6.555062 9.011665 9.032781 7.690035 7.027774 6.799027 7.306296 6.577778 #>  [857] 8.498711 9.135289 8.452443 5.592896 7.258710 7.530572 7.095843 9.616816 #>  [865] 6.906324 6.815128 9.355873 8.402480 6.470491 9.198711 7.478366 6.179541 #>  [873] 5.556219 6.484477 8.001097 5.875362 9.045937 9.248058 8.346175 8.745348 #>  [881] 7.414514 8.373476 7.565742 8.358703 7.914474 5.356113 7.793685 6.436633 #>  [889] 7.805637 9.704290 6.234623 7.905496 8.283596 6.666080 7.526842 6.094532 #>  [897] 6.776744 9.910760 8.404174 5.454455 8.617842 5.411736 8.450940 7.334622 #>  [905] 6.303296 9.340934 7.697167 5.771557 6.412605 6.849495 7.235000 8.785450 #>  [913] 5.260513 8.419368 8.486354 6.286079 8.916486 7.411527 8.987048 8.356600 #>  [921] 7.072752 5.486633 9.333537 6.388048 5.648996 5.910091 6.632523 7.344916 #>  [929] 8.400103 7.725576 5.245699 7.699777 6.190461 5.389210 9.106743 9.142403 #>  [937] 6.546822 7.895359 7.440172 9.452813 6.578683 7.915304 7.059768 8.767670 #>  [945] 6.734647 6.677066 6.441892 6.548788 9.735265 6.285338 5.926493 8.534513 #>  [953] 6.739455 6.634452 6.833585 9.631758 9.108973 8.795297 5.174702 6.763261 #>  [961] 9.013241 8.777780 9.347472 5.794692 9.530014 8.388894 5.407623 8.403671 #>  [969] 9.888794 5.395978 5.417349 7.718556 7.936355 6.819854 5.664019 8.522930 #>  [977] 6.888223 7.676164 6.438487 5.334231 8.569559 5.456014 6.031176 6.664033 #>  [985] 7.724191 8.034776 5.462145 9.843053 9.249367 7.318406 5.199281 5.209347 #>  [993] 6.798676 5.420919 7.335235 7.934275 6.382946 6.551219 5.641683 7.566678"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.dapar.impute.mi.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing values imputation using the LSimpute algorithm. — wrapper.dapar.impute.mi","title":"Missing values imputation using the LSimpute algorithm. — wrapper.dapar.impute.mi","text":"method wrapper function impute.mi() package imp4p adapted object class MSnSet.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.dapar.impute.mi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing values imputation using the LSimpute algorithm. — wrapper.dapar.impute.mi","text":"","code":"wrapper.dapar.impute.mi(   obj,   design,   nb.iter = 3,   nknn = 15,   selec = 600,   siz = 500,   weight = 1,   ind.comp = 1,   progress.bar = FALSE,   x.step.mod = 300,   x.step.pi = 300,   nb.rei = 100,   method = 4,   gridsize = 300,   q = 0.95,   q.min = 0,   q.norm = 3,   eps = 0,   methodi = \"slsa\",   lapala = TRUE,   distribution = \"unif\" )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.dapar.impute.mi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing values imputation using the LSimpute algorithm. — wrapper.dapar.impute.mi","text":"obj object class SummarizedExperiment. design xxx nb.iter function mi.mix package imp4p nknn function mi.mix package imp4p selec function mi.mix package imp4p siz function mi.mix package imp4p weight function mi.mix package imp4p ind.comp function mi.mix package imp4p progress.bar function mi.mix package imp4p x.step.mod function estim.mix package imp4p x.step.pi function estim.mix package imp4p nb.rei function estim.mix package imp4p method function estim.mix package imp4p gridsize function estim.mix package imp4p q function mi.mix package imp4p q.min function impute.pa package imp4p q.norm function impute.pa package imp4p eps function impute.pa package imp4p methodi function mi.mix package imp4p lapala xxxxxxxxxxx distribution type distribution used. Values unif (default) beta.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.dapar.impute.mi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing values imputation using the LSimpute algorithm. — wrapper.dapar.impute.mi","text":"Biobase::exprs(obj) matrix imputed values instead missing values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.dapar.impute.mi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Missing values imputation using the LSimpute algorithm. — wrapper.dapar.impute.mi","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.dapar.impute.mi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing values imputation using the LSimpute algorithm. — wrapper.dapar.impute.mi","text":"","code":"utils::data(Exp1_R25_pept, package = \"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(500)] design <- design.qf(obj) level <- 'protein' metacell.mask <- DaparToolshed::match.metacell(qMetacell(obj[[1]]), c(\"Missing POV\", \"Missing MEC\"), level) indices <- GetIndices_WholeMatrix(metacell.mask, op = \">=\", th = 1) obj.imp.na <- wrapper.dapar.impute.mi(obj[[1]], design, nb.iter = 1, lapala = TRUE) #> Warning: tab.imp contains missing values #>  #>  Iterations:  #>  #>  1 / 1  - Imputation MNAR OK -  #> Imputation MCAR in progress -  #> 0 % - 1 % - 1 % - 2 % - 3 % - 3 % - 4 % - 4 % - 5 % - 6 % - 6 % - 7 % - 8 % - 8 % - 9 % - 9 % - 10 % - 11 % - 11 % - 12 % - 13 % - 13 % - 14 % - 14 % - 15 % - 16 % - 16 % - 17 % - 18 % - 18 % - 19 % - 19 % - 20 % - 21 % - 21 % - 22 % - 22 % - 23 % - 24 % - 24 % - 25 % - 26 % - 26 % - 27 % - 27 % - 28 % - 29 % - 29 % - 30 % - 31 % - 31 % - 32 % - 32 % - 33 % - 34 % - 34 % - 35 % - 36 % - 36 % - 37 % - 37 % - 38 % - 39 % - 39 % - 40 % - 40 % - 41 % - 42 % - 42 % - 43 % - 44 % - 44 % - 45 % - 45 % - 46 % - 47 % - 47 % - 48 % - 49 % - 49 % - 50 % - 50 % - 51 % - 52 % - 52 % - 53 % - 54 % - 54 % - 55 % - 55 % - 56 % - 57 % - 57 % - 58 % - 59 % - 59 % - 60 % - 60 % - 61 % - 62 % - 62 % - 63 % - 63 % - 64 % - 65 % - 65 % - 66 % - 67 % - 67 % - 68 % - 68 % - 69 % - 70 % - 70 % - 71 % - 72 % - 72 % - 73 % - 73 % - 74 % - 75 % - 75 % - 76 % - 77 % - 77 % - 78 % - 78 % - 79 % - 80 % - 80 % - 81 % - 81 % - 82 % - 83 % - 83 % - 84 % - 85 % - 85 % - 86 % - 86 % - 87 % - 88 % - 88 % - 89 % - 90 % - 90 % - 91 % - 91 % - 92 % - 93 % - 93 % - 94 % - 95 % - 95 % - 96 % - 96 % - 97 % - 98 % - 98 % - 99 % - 99 % -  obj.imp.pov <- wrapper.dapar.impute.mi(obj[[1]], design, nb.iter = 1, lapala = FALSE) #> Warning: tab.imp contains missing values #>  #>  Iterations:  #>  #>  1 / 1  - Imputation MNAR OK -  #> Imputation MCAR in progress -  #> 0 % - 1 % - 1 % - 2 % - 3 % - 3 % - 4 % - 4 % - 5 % - 6 % - 6 % - 7 % - 8 % - 8 % - 9 % - 9 % - 10 % - 11 % - 11 % - 12 % - 13 % - 13 % - 14 % - 14 % - 15 % - 16 % - 16 % - 17 % - 18 % - 18 % - 19 % - 19 % - 20 % - 21 % - 21 % - 22 % - 22 % - 23 % - 24 % - 24 % - 25 % - 26 % - 26 % - 27 % - 27 % - 28 % - 29 % - 29 % - 30 % - 31 % - 31 % - 32 % - 32 % - 33 % - 34 % - 34 % - 35 % - 36 % - 36 % - 37 % - 37 % - 38 % - 39 % - 39 % - 40 % - 40 % - 41 % - 42 % - 42 % - 43 % - 44 % - 44 % - 45 % - 45 % - 46 % - 47 % - 47 % - 48 % - 49 % - 49 % - 50 % - 50 % - 51 % - 52 % - 52 % - 53 % - 54 % - 54 % - 55 % - 55 % - 56 % - 57 % - 57 % - 58 % - 59 % - 59 % - 60 % - 60 % - 61 % - 62 % - 62 % - 63 % - 63 % - 64 % - 65 % - 65 % - 66 % - 67 % - 67 % - 68 % - 68 % - 69 % - 70 % - 70 % - 71 % - 72 % - 72 % - 73 % - 73 % - 74 % - 75 % - 75 % - 76 % - 77 % - 77 % - 78 % - 78 % - 79 % - 80 % - 80 % - 81 % - 81 % - 82 % - 83 % - 83 % - 84 % - 85 % - 85 % - 86 % - 86 % - 87 % - 88 % - 88 % - 89 % - 90 % - 90 % - 91 % - 91 % - 92 % - 93 % - 93 % - 94 % - 95 % - 95 % - 96 % - 96 % - 97 % - 98 % - 98 % - 99 % - 99 % -"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation of peptides having no values in a biological condition. — wrapper.impute.mle","title":"Imputation of peptides having no values in a biological condition. — wrapper.impute.mle","text":"method wrapper function impute.mle() package imp4p adapted object class MSnSet. impute MEC missing values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation of peptides having no values in a biological condition. — wrapper.impute.mle","text":"","code":"wrapper.impute.mle(obj, grp)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation of peptides having no values in a biological condition. — wrapper.impute.mle","text":"obj object class MSnSet. grp xxx","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.mle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation of peptides having no values in a biological condition. — wrapper.impute.mle","text":"SummarizedExperiment::assay(obj) matrix imputed values instead missing values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.mle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Imputation of peptides having no values in a biological condition. — wrapper.impute.mle","text":"Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.mle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imputation of peptides having no values in a biological condition. — wrapper.impute.mle","text":"","code":"utils::data(Exp1_R25_pept, package = \"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(10), ] level <- 'peptide' # Delete whole empty lines metacell.mask <- DaparToolshed::match.metacell(qMetacell(obj[[1]]), c(\"Missing POV\", \"Missing MEC\"), level) indices <- GetIndices_WholeMatrix(metacell.mask, op = \">=\", th = 1) grp <- design.qf(obj)$Condition obj.imp.na <- wrapper.impute.mle(obj[[2]], grp)"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.pa2.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing values imputation from a MSnSet object — wrapper.impute.pa2","title":"Missing values imputation from a MSnSet object — wrapper.impute.pa2","text":"method wrapper function impute.pa2() adapted objects class MSnSet.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.pa2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing values imputation from a MSnSet object — wrapper.impute.pa2","text":"","code":"wrapper.impute.pa2(   obj,   design,   q.min = 0,   q.norm = 3,   eps = 0,   distribution = \"unif\" )"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.pa2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing values imputation from a MSnSet object — wrapper.impute.pa2","text":"obj object class SummarizedExperiment. design xxx q.min quantile value observed values allowing defining maximal value can generated. maximal value defined quantile q.min observed values distribution minus eps. Default 0 (maximal value minimum observed values minus eps). q.norm quantile value normal distribution allowing defining minimal value can generated. Default 3 (minimal value maximal value minus qn*median(sd(observed values)) sd standard deviation row condition). eps value allowing defining maximal value can generated. maximal value defined quantile q.min observed values distribution minus eps. Default 0. distribution type distribution used. Values unif (default) beta.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.pa2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing values imputation from a MSnSet object — wrapper.impute.pa2","text":"object obj imputed","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.pa2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Missing values imputation from a MSnSet object — wrapper.impute.pa2","text":"Thomas Burger, Samuel Wieczorek","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapper.impute.pa2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing values imputation from a MSnSet object — wrapper.impute.pa2","text":"","code":"if (FALSE) { # \\dontrun{ utils::data(Exp1_R25_pept, package = \"DaparToolshedData\") obj <- Exp1_R25_pept[seq_len(100)] design <- design.qf(obj) obj.imp.pa2 <- wrapper.impute.pa2(obj = obj[[1]], design = design) } # }"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapperClassic1wayAnova.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for One-way Anova statistical test — wrapperClassic1wayAnova","title":"Wrapper for One-way Anova statistical test — wrapperClassic1wayAnova","text":"Wrapper One-way Anova statistical test","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapperClassic1wayAnova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for One-way Anova statistical test — wrapperClassic1wayAnova","text":"","code":"wrapperClassic1wayAnova(obj, i, with_post_hoc = \"No\", post_hoc_test = \"No\")"},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapperClassic1wayAnova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for One-way Anova statistical test — wrapperClassic1wayAnova","text":"obj object class QFeatures. xxx with_post_hoc character string 2 possible values: \"Yes\" \"\" (default) saying function must perform Post-Hoc test . post_hoc_test character string, possible values \"\" (test; default value) TukeyHSD\" \"Dunnett\". See details postHocTest() function choose appropriate one.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapperClassic1wayAnova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for One-way Anova statistical test — wrapperClassic1wayAnova","text":"list two dataframes. First one called \"logFC\" contains pairwise comparisons logFC values (one column one comparison) analysed feature (Except case without post-hoc testing, NAs returned.); second one named \"P_Value\" contains corresponding p-values.","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapperClassic1wayAnova.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper for One-way Anova statistical test — wrapperClassic1wayAnova","text":"function allows perform 1-way Analysis Variance. Also computes post-hoc tests with_post_hoc parameter set yes. two possible post-hoc tests: Tukey Honest Significant Differences (specified \"TukeyHSD\") Dunnett test (specified \"Dunnett\").","code":""},{"path":[]},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapperClassic1wayAnova.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrapper for One-way Anova statistical test — wrapperClassic1wayAnova","text":"Hélène Borges","code":""},{"path":"https://edyp-lab.github.io/DaparToolshed/reference/wrapperClassic1wayAnova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for One-way Anova statistical test — wrapperClassic1wayAnova","text":"","code":"if (FALSE) examples/ex_wrapperClassic1wayAnova.R # \\dontrun{}"}]
