% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_ttest.R
\docType{data}
\name{t_test_sam}
\alias{t_test_sam}
\alias{t_test_sam,SummarizedExperiment-method}
\alias{t_test_sam,QFeatures-method}
\title{Check the validity of the experimental design}
\format{
An object of class \code{standardGeneric} of length 1.
}
\usage{
t_test_sam

\S4method{t_test_sam}{SummarizedExperiment}(object, sampleTab, FUN, ...)

\S4method{t_test_sam}{QFeatures}(object, i, name = "ttestAssay", FUN, ...)
}
\arguments{
\item{object}{An object of class `QFeatures`.}

\item{sampleTab}{xxxxxxx}

\item{FUN}{xxx}

\item{...}{Additional parameters passed to inner functions.}

\item{i}{A numeric vector or a character vector giving the index or the 
name, respectively, of the assay(s) to be processed.}

\item{name}{A `character(1)` naming the new assay name. Defaults
are `ttestAssay`.}
}
\description{
This manual page describes the computation of statistical test using [QFeatures] objects. In the following
functions, if `object` is of class `QFeatures`, and optional assay
index or name `i` can be specified to define the assay (by name of
index) on which to operate.

The following functions are currently available:

- `compute.t.test(xxxxx)` xxxxx.

- `compute.group.t.test(xxxxx)` xxxxx.
  
- `limma.complete.test(object, sampleTab)` uses the package Limma
}
\details{
xxx
}
\examples{
utils::data(Exp1_R25_pept, package='DAPARdata2')
object <- Exp1_R25_pept[1:1000,]
object <- addAssay(object, QFeatures::filterNA(object[[2]],  pNA = 0), name='filtered')
object <- addListAdjacencyMatrices(object, 3)
sTab <- colData(object)
gttest.se <- t_test_sam(object[[3]], sTab, FUN = 'limma.complete.test')

object <- t_test_sam(object, 3, name = "ttestAssay", FUN = 'compute.t.test', contrast = 'OnevsOne')

}
\keyword{datasets}
