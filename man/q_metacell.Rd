% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metacell.R
\name{q_metacell}
\alias{q_metacell}
\alias{metacell.def}
\alias{custom_metacell_colors}
\alias{Set_POV_MEC_tags}
\alias{Set_POV_MEC_tags2}
\alias{Metacell_generic}
\alias{UpdateMetacellAfterImputation}
\alias{UpdateMetacellAfterImputation,SummarizedExperiment-method}
\alias{search.metacell.tags}
\alias{metacombine}
\title{Quantitative metadata vocabulary for entities}
\usage{
metacell.def(level)

custom_metacell_colors()

Set_POV_MEC_tags(obj, conds)

Set_POV_MEC_tags2(conds, df, level)

Metacell_generic(qdata, conds, level)

UpdateMetacellAfterImputation(object, ...)

\S4method{UpdateMetacellAfterImputation}{SummarizedExperiment}(object, from, to, ...)

search.metacell.tags(pattern, level, depth = "1")

metacombine(met, level)
}
\arguments{
\item{level}{xxx}

\item{obj}{xxx}

\item{conds}{xxx}

\item{df}{An object of class \code{SummarizedExperiment}}

\item{qdata}{A matrix of quantitative data}

\item{object}{xxx}

\item{...}{xxx}

\item{from}{xxx}

\item{to}{xxx}

\item{pattern}{The string to search.}

\item{depth}{xxx}

\item{met}{xxx}
}
\value{
A data.frame containing the different tags and corresponding colors for the level
given in parameter

An instance of class \code{QFeatures}.

xxxxx

NA

NA
}
\description{
This function gives the vocabulary used for the quantitative metadata of each entity in
each condition.

This function is based on the qMetacell dataframe to look for either missing
values (used to update an initial dataset) or imputed values (used when
post processing protein qMetacell after aggregation)

In the quantitative columns, a missing value is identified by no value rather
than a value equal to 0.
Conversion rules
Quanti			Tag
NA or 0		NA

Update the quantitative metadata information of missing values that were imputed

Gives all the tags of the metadata vocabulary containing the pattern
(parent and all its children).

Agregation rules for the cells quantitative metadata of peptides.
Please refer to the qMetacell.def vocabulary in \code{qMetacell.def()}
}
\section{Glossary}{


Peptide-level vocabulary

|-- 'Any'
|    |
|    |-- 1.0 'Quantified'
|    |    |
|    |    |-- 1.1 "Quant. by direct id" (color 4, white)
|    |    |
|    |    |-- 1.2 "Quant. by recovery" (color 3, lightgrey)
|    |
|    |-- 2.0 "Missing" (no color)
|    |    |
|    |    |-- 2.1 "Missing POV" (color 1)
|    |    |
|    |    |-- 2.2 'Missing MEC' (color 2)
|    |
|    |-- 3.0 'Imputed'
|    |    |
|    |    |-- 3.1 'Imputed POV' (color 1)
|    |    |
|    |    |-- 3.2 'Imputed MEC' (color 2)

Protein-level vocabulary:
|-- 'Any'
|    |
|    |-- 1.0 'Quantified'
|    |    |
|    |    |-- 1.1 "Quant. by direct id" (color 4, white)
|    |    |
|    |    |-- 1.2 "Quant. by recovery" (color 3, lightgrey)
|    |
|    |-- 2.0 "Missing"
|    |    |
|    |    |-- 2.1 "Missing POV" (color 1)
|    |    |
|    |    |-- 2.2 'Missing MEC' (color 2)
|    |
|    |-- 3.0 'Imputed'
|    |    |
|    |    |-- 3.1 'Imputed POV' (color 1)
|    |    |
|    |    |-- 3.2 'Imputed MEC' (color 2)
|    |
|    |-- 4.0 'Combined tags' (color 3bis, lightgrey)
}

\section{Conversion to the glossary}{


A generic conversion

Conversion for Proline datasets

Conversion from Maxquant datasets
}

\section{Basic agreagtion}{
Agregation of non imputed values (2.X) with quantitative values\tabular{l}{
   (1.0, 1.X, 3.0, 3.X) \cr
   Not possible \cr
   ---------------------------- \cr
}
\tabular{l}{
   Agregation of different types of missing values (among 2.1, 2.2) \cr
}

\itemize{
\item Agregation of 2.1 peptides between each other gives a missing value
non imputed (2.0)
\item Agreagtion of 2.2 peptides between each other givesa missing value
non imputed (2.0)
\item Agregation of a mix of 2.1 and 2.2 gives a missing value non imputed (2.0)
|----------------------------
}\tabular{l}{
   Agregation of a mix of quantitative values (among 1.0, 1.1, 1.2, 3.0, 3.X) \cr
}

\itemize{
\item if the type of all the peptides to agregate is 1.0, 1.1 or 1.2,
then the final metadata is set the this tag
\item if the set of metacell to agregate is a mix of 1.0, 1.1 or 1.2,
then the final metadata is set to 1.0
\item if the set of metacell to agregate is a mix of 3.X and 3.0,
then the final metadata is set to 3.0
\item if the set of metacell to agregate is a mix of 3.X and 3.0 and other (X.X),
then the final metadata is set to 4.0
|----------------------------
}
}

\section{Post processing}{
Update metacell with POV/MEC status for the categories 2.0 and 3.0
TODO
}

\examples{

metacell.def('protein')
metacell.def('peptide')

library(QFeatures)
data(subR25prot)
conds <- design.qf(subR25prot)$Condition
df <- Set_POV_MEC_tags(subR25prot[[2]], conds)

library(SummarizedExperiment)
data(subR25pept)
conds <- design.qf(subR25pept)$Condition
qdata <- assay(subR25pept[[2]])
df <- Metacell_generic(qdata, conds, 'peptide')

data(subR25prot)
subR25prot[[2]] <- UpdateMetacellAfterImputation(subR25prot[[2]], 'Missing', 'Imputed')

search.metacell.tags('Missing POV', 'peptide')
search.metacell.tags('Quantified', 'peptide')

\dontrun{
ll <- omXplore::metacell.def('peptide')$node
for (i in 1:length(ll))
test <- lapply(combn(ll, i, simplify = FALSE), 
function(x) tag <- metacombine(x, 'peptide'))
}

}
\author{
Thomas Burger, Samuel Wieczorek

Samuel Wieczorek
}
