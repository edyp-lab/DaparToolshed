% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots_pca.R, R/mod_plots_pca.R
\name{pca_plots}
\alias{pca_plots}
\alias{wrapper_pca}
\alias{plotPCA_Eigen}
\alias{mod_plots_pca_ui}
\alias{mod_plots_pca_server}
\title{Compute the PCA}
\usage{
wrapper_pca(qData, conds, var.scaling = TRUE, ncp = NULL)

plotPCA_Eigen(res.pca)

mod_plots_pca_ui(id)

mod_plots_pca_server(id, object, conds)
}
\arguments{
\item{qData}{numeric matrix}

\item{conds}{xxx}

\item{var.scaling}{The dimensions to plot}

\item{ncp}{A \code{integer(1)} which represents the umber of dimensions kept in the results.}

\item{res.pca}{Result of FactoMineR::PCA}

\item{id}{xxx.}

\item{object}{xxx}
}
\value{
A list including eigenvalues of obj
}
\description{
xxxx
}
\section{xxx}{







}

\examples{
library(QFeatures)
data(ft)
qData <- assay(ft, 1)
conds <- design(ft)$Condition

res.pca <- wrapper_pca(qData, conds)

plotPCA_Eigen(res.pca)

#-----------------------------------
# Launch the shiny module
#-----------------------------------

if(interactive()){
 library(QFeatures)
 library(shiny)
 library(DaparToolshed)
 library(highcharter)
 data(ft)
 conds <- design(ft)$Condition
 
  
 ui <- mod_plots_pca_ui('plot')

 server <- function(input, output, session) {
  mod_plots_pca_server(id = 'plot',
                       object = reactive({ft[[1]]}),
                       conds = reactive({conds})
                       )
  }
 
 shinyApp(ui, server)
}
}
\author{
Samuel Wieczorek, Enora Fremy

Samuel Wieczorek, Enora Fremy
}
