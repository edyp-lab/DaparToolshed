% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{ProstarVersions}
\alias{ProstarVersions}
\title{Versions of installed packages of Prostar suite}
\usage{
ProstarVersions()
}
\value{
A list
}
\description{
Return the versions of Prostar, DaparToolshed and DaparData
}
\details{
#' @title Record the adjacency matrices 
#' 
#' @author Samuel Wieczorek
#' 
#' @examples
#' Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
#' Exp1_R25_pept <- SetAdjMat(Exp1_R25_pept, 2)
#' 
#' @export
#' 
"SetAdjMat"


#' @param  obj.se An object (peptides) of class \code{SummarizedExperiment}.
#' 
#' @return The slot processing of obj@processingData
#' 
setMethod('SetAdjMat', "SummarizedExperiment",
          function(object, ...) {
            if (typeDataset(object) != 'peptide')
              warning("This function is only available for a peptide dataset.")
            
            metadata(object)$ll.AdjMat <-  ComputeAdjacencyMatrices(object)
            object
          }
)


setMethod("SetAdjMat", "QFeatures",
          function(object, i, ...) {
            if (missing(i))
              stop("Provide index or name of assay to be processed")
            if (length(i) != 1)
              stop("Only one assay to be processed at a time")
            if (is.numeric(i)) i <- names(object)[[i]]
            
            object[[i]] <- SetAdjMat(object[[i]])
            object
          }
)

#' @title Record the adjacency matrices 
#' 
#' @author Samuel Wieczorek
#' 
#' @examples
#' Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
#' ll.X <- SetConnectedComps(Exp1_R25_pept, 2)
#' 
#' @export
#' 
"GetConnectedComps"


#' @param  obj.se An object (peptides) of class \code{SummarizedExperiment}.
#' 
#' @return The slot processing of obj@processingData
#' 
setMethod('GetConnectedComps', "SummarizedExperiment",
          function(object,  ...) {
            if (typeDataset(object) != 'peptide')
              warning("This function is only available for a peptide dataset.")
            
            metadata(object)$ll.CC
          }
)


setMethod("GetConnectedComps", "QFeatures",
          function(object, i, ...) {
            if (missing(i))
              stop("Provide index or name of assay to be processed")
            if (length(i) != 1)
              stop("Only one assay to be processed at a time")
            if (is.numeric(i)) i <- names(object)[[i]]
            
            GetConnectedComps(object[[i]])
          }
)



#' @title Record the adjacency matrices 
#' 
#' @author Samuel Wieczorek
#' 
#' @examples
#' Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
#' ll.X <- SetConnectedComps(Exp1_R25_pept, 2)
#' 
#' @export
#' 
"SetConnectedComps"


#' @param  obj.se An object (peptides) of class \code{SummarizedExperiment}.
#' 
#' @return The slot processing of obj@processingData
#' 
setMethod('SetConnectedComps', "SummarizedExperiment",
          function(object,  ...) {
            if (typeDataset(object) != 'peptide')
              warning("This function is only available for a peptide dataset.")
            
            metadata(object)$ll.CC <-  ComputeConnectedComposants(object)
            object
          }
)


setMethod("SetConnectedComps", "QFeatures",
          function(object, i, ...) {
            if (missing(i))
              stop("Provide index or name of assay to be processed")
            if (length(i) != 1)
              stop("Only one assay to be processed at a time")
            if (is.numeric(i)) i <- names(object)[[i]]
            
            object[[i]] <- SetConnectedComps(object[[i]])
            object
          }
)
}
\examples{
ProstarVersions()

}
\author{
Samuel Wieczorek
}
