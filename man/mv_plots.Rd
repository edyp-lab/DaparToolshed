% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots_mv.R, R/mod_plots_group_mv.R
\name{mv_plots}
\alias{mv_plots}
\alias{mvPerLinesHisto}
\alias{mvPerLinesHistoPerCondition}
\alias{mvHisto}
\alias{mod_mv_plots_ui}
\alias{mod_mv_plots_server}
\title{Bar plot of missing values per lines using highcharter.}
\usage{
mvPerLinesHisto(qData)

mvPerLinesHistoPerCondition(qData, conds, pal.name)

mvHisto(qData, conds, showValues = FALSE, pal.name = NULL)

mod_mv_plots_ui(id)

mod_mv_plots_server(id, obj, conds, pal.name)
}
\arguments{
\item{qData}{A \code{data.frame} or \code{matrix} that contains the quantitative data.}

\item{conds}{A \code{Character()}}

\item{pal.name}{xxx}

\item{id}{xxx}

\item{obj}{An instance of the class \link{SummarizedExperiment}}
}
\value{
A plot
}
\description{
This method plots a bar plot which represents the distribution of the
number of missing values (NA) per lines (ie proteins).
}
\details{
\itemize{
\item distribution of the missing values per line,
\item a bar plot which represents the distribution of the
number of missing values (NA) per lines (ie proteins) and per conditions,
\item Histogram of missing values.
}
}
\examples{
library(QFeatures)
library(DaparToolshed)
data(ft)

qData <- assay(ft, 1)
conds <- design(ft)$Condition
pal <- 'Dark2'

#----------------------------------------
# Plots a histogram of missing values
#----------------------------------------

mvPerLinesHisto(qData)

#----------------------------------------
# Plots a histogram of missing values
#----------------------------------------

mvHisto(qData, conds, pal.name = pal)

#----------------------------------------
# Plots a histogram of missing values
#----------------------------------------

mvPerLinesHistoPerCondition(qData, conds)
mvPerLinesHistoPerCondition(qData, conds, pal.name = pal)

#----------------------------------------
# Launch a shiny module
#----------------------------------------

if(interactive()){
 library(QFeatures)
 library(shiny)
 library(DaparToolshed)
 data(ft)
 ui <- mod_mv_plots_ui('plot')

 server <- function(input, output, session) {
  conds <- design(ft)$Condition
 
  mod_mv_plots_server('plot',
                      obj = reactive({ft[[1]]}),
                      conds = reactive({conds}),
                      pal.name = reactive({'Dark2'})
                      )
  }
 
 shinyApp(ui=ui, server=server)
}
}
\author{
Samuel Wieczorek, Enora Fremy
}
