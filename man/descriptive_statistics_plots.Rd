% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots_boxplot.R, R/plots_CV_dist.R,
%   R/plots_heatmap.R, R/plots_pca.R, R/plots_violin.R,
%   R/mod_all_plots.R, R/mod_plots_heatmap.R, R/mod_plots_intensity.R,
%   R/mod_plots_legend_colored_exprs.R, R/mod_plots_pca.R,
%   R/mod_plots_se_explorer.R, R/mod_plots_var_dist.R
\name{boxPlotD_HC}
\alias{boxPlotD_HC}
\alias{CVDistD_HC}
\alias{heatmapD}
\alias{wrapper.pca}
\alias{plotPCA_Var}
\alias{plotPCA_Ind}
\alias{plotPCA_Eigen_hc}
\alias{violinPlotD}
\alias{mod_all_plots_ui}
\alias{mod_plots_heatmap_ui}
\alias{mod_plots_heatmap_server}
\alias{mod_plots_intensity_ui}
\alias{mod_plots_intensity_server}
\alias{mod_plots_legend_colored_exprs_ui}
\alias{mod_plots_legend_colored_exprs_server}
\alias{mod_plots_pca_ui}
\alias{mod_plots_pca_server}
\alias{mod_plots_se_explorer_ui}
\alias{mod_plots_se_explorer_server}
\alias{mod_plots_var_dist_ui}
\alias{mod_plots_var_dist_server}
\title{Builds a boxplot from a dataframe using the library \code{highcharter}}
\usage{
boxPlotD_HC(
  qData,
  conds,
  keyId = NULL,
  legend = NULL,
  palette = NULL,
  subset.view = NULL
)

CVDistD_HC(qData, conds = NULL, palette = NULL)

heatmapD(qData, conds, distance = "euclidean", cluster = "complete")

wrapper.pca(qData, condition, var.scaling = TRUE, ncp = NULL)

plotPCA_Var(res.pca = NULL, chosen.axes = c(1, 2))

plotPCA_Ind(res.pca, chosen.axes = c(1, 2))

plotPCA_Eigen_hc(res.pca)

violinPlotD(
  qData,
  conds,
  keyId,
  legend = NULL,
  palette = NULL,
  subset.view = NULL
)

mod_all_plots_ui(id)

mod_plots_heatmap_ui(id)

mod_plots_heatmap_server(id, obj, conds, width = 900)

mod_plots_intensity_ui(id)

mod_plots_intensity_server(
  id,
  dataIn,
  meta,
  conds,
  base_palette = NULL,
  params = NULL,
  reset = NULL,
  slave = FALSE
)

mod_plots_legend_colored_exprs_ui(id)

mod_plots_legend_colored_exprs_server(id)

mod_plots_pca_ui(id)

mod_plots_pca_server(id, obj, coldata)

mod_plots_se_explorer_ui(id)

mod_plots_se_explorer_server(id, obj, originOfValues = NULL, colData = NULL)

mod_plots_var_dist_ui(id)

mod_plots_var_dist_server(id, obj, conds, base_palette = NULL)
}
\arguments{
\item{qData}{Numeric matrix}

\item{conds}{A \code{character()} representings the condition for
each sample of the \link{QFeatures} object.}

\item{keyId}{xxx}

\item{legend}{A vector of the conditions (one condition per sample).}

\item{palette}{xxx}

\item{subset.view}{A vector of index indicating rows to highlight}

\item{distance}{The distance used by the clustering algorithm to compute
the dendrogram. See \code{help(heatmap.2)}}

\item{cluster}{the clustering algorithm used to build the dendrogram.
See \code{help(heatmap.2)}}

\item{condition}{xxx}

\item{var.scaling}{The dimensions to plot}

\item{ncp}{Number of dimensions kept in the results}

\item{res.pca}{Result of FactoMineR::PCA}

\item{chosen.axes}{The dimensions to plot}

\item{id, input, output, session}{Internal parameters for {shiny}.}

\item{obj}{xxx}

\item{base_palette}{xxx}

\item{input}{internal}

\item{output}{internal}

\item{session}{internal}

\item{id}{shiny id}
}
\value{
A boxplot

A density plot

A heatmap

A list including eigenvalues of obj

A plot

A plot

A histogram

A violinplot

NA

NA

NA

NA

NA

NA

NA

NA
}
\description{
Boxplot for quantitative proteomics data using the library \code{highcharter}

Builds a densityplot of the CV of entities in numeric matrix.
The CV is calculated for each condition present in the dataset
(see the slot \code{'Condition'} in the \code{colData()} DataFrame)

This function is a wrapper to 'heatmap.2' that displays a numeric matrix

The parameter 'conds' is used to generate the color palette.

A shiny Module.

A shiny Module.

A shiny Module.

A shiny Module.

A shiny Module.

A shiny Module.
}
\examples{
library(QFeatures)
Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
qData <- assay(Exp1_R25_pept[[2]])
conds <- colData(Exp1_R25_pept)[["Condition"]]
key <- rowData(Exp1_R25_pept[[2]])[[metadata(Exp1_R25_pept)$keyId]]
boxPlotD_HC(qData, conds, keyId = key, conds, subset.view=seq_len(10))

library(QFeatures)
Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
qData <- assay(Exp1_R25_pept[[2]])[seq_len(10),]
conds <- colData(Exp1_R25_pept)[["Condition"]]
CVDistD_HC(qData, conds)

\donttest{
library(QFeatures)
Exp1_R25_prot <- readRDS(system.file("data", 'Exp1_R25_prot.rda', package="DaparToolshedData"))
conds <- colData(Exp1_R25_prot)[['Condition']]
qData <- assay(Exp1_R25_prot)
heatmapD(qData, conds)
}

library(QFeatures)
Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
qData <- assay(Exp1_R25_pept[[2]])
condition <- colData(Exp1_R25_pept)[["Condition"]]
res.pca <- wrapper.pca(qData, condition)

plotPCA_Var(res.pca)

plotPCA_Ind(res.pca)

plotPCA_Eigen_hc(res.pca)


library(QFeatures)
Exp1_R25_prot <- readRDS(system.file("data", 'Exp1_R25_prot.rda', package="DaparToolshedData"))
qData <- assay(Exp1_R25_prot[[2]])
key <- rowData(Exp1_R25_prot[[2]])[[ metadata(Exp1_R25_prot)[['keyId']] ]]
conds <- colData(Exp1_R25_prot)[["Condition"]]
violinPlotD(qData, conds, key, subset.view = seq_len(5))


}
\author{
Samuel Wieczorek, Anais Courtier, Enora Fremy

Samuel Wieczorek, Enora Fremy

Samuel Wieczorek

Samuel Wieczorek, Enora Fremy

Samuel Wieczorek, Enora Fremy

Samuel Wieczorek, Enora Fremy

Samuel Wieczorek, Enora Fremy

Samuel Wieczorek, Anais Courtier, Enora Fremy

Samuel Wieczorek
}
\keyword{internal}
