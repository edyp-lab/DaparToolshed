#' 
#' 
#' 
#' #' Method to compute the number of quantified peptides used for aggregating each protein
#' #' 
#' #' @title Computes the number of peptides used for aggregating each protein
#' #' 
#' #' @param qPepData A data.frame of quantitative data
#' #' 
#' #' @param X An adjacency matrix
#' #' 
#' #' @return A data.frame
#' #' 
#' #' @author Samuel Wieczorek
#' #' 
#' #' @examples
#' #' library(QFeatures)
#' #' Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
#' #' obj <- Exp1_R25_pept[seq_len(1000),]
#' #' qPepData <- assay(obj,2)
#' #' obj <- addListAdjacencyMatrices(obj, 2)
#' #' X <- as.matrix(GetAdjMat(obj[[2]])$all)
#' #' n <- GetNbPeptidesUsed(qPepData, X)
#' #' 
#' #' @export
#' #' 
#' GetNbPeptidesUsed <- function(qPepData, X){
#'   
#'   qPepData[!is.na(qPepData)] <- 1
#'   qPepData[is.na(qPepData)] <- 0
#'   
#'   pep <- t(X) %*% qPepData
#'   
#'   return(pep)
#' }
#' 
#' 
#' 
#' 
#' #' Method to compute the detailed number of quantified peptides used for aggregating each protein
#' #' 
#' #' @title Computes the detailed number of peptides used for aggregating each protein w.r.t NA values in 
#' #' peptide quantitative dataset. Even if a peptide is part of a protein, if its value is NA, it do not be used
#' #' for aggreation.
#' #' 
#' #' @param X An adjacency matrix.
#' #' 
#' #' @param qPepData A data.frame of quantitative data
#' #' 
#' #' @seealso The function 'addListAdjacencyMatrices'.
#' #' 
#' #' @return A list of three items:
#' #' * nAll: the number of pall eptides used for aggregation,
#' #' * nShared: the number of shared peptides used for aggregation,
#' #' * nSpec: the total number of pspecific eptides used for aggregation.
#' #' 
#' #' @author Samuel Wieczorek
#' #' 
#' #' @examples
#' #' library(QFeatures)
#' #' Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
#' #' obj <- Exp1_R25_pept
#' #' qPepData <- assay(obj,2)
#' #' obj <- addListAdjacencyMatrices(obj, 2)
#' #' X <- GetAdjMat(obj[[2]])$all
#' #' n <- GetDetailedNbPeptidesUsed(X, qPepData)
#' #'  
#' #' @export
#' #' 
#' GetDetailedNbPeptidesUsed <- function(X, qPepData){
#'   
#'   res <- NULL
#'   
#'   qPepData[!is.na(qPepData)] <- 1
#'   qPepData[is.na(qPepData)] <- 0
#'   
#'   res <- t(as.matrix(X)) %*% qPepData
#'   
#'   return(res)
#' }
#' 
#' 
#' #' Method to compute the detailed number of peptides for each protein
#' #' 
#' #' @title Computes the detailed number of peptides for each protein 
#' #' 
#' #' @param X An adjacency matrices
#' #' 
#' #' @return A data.frame containing the following vectors:
#' #' * nTotal: The number of peptides for each protein,
#' #' * nShared: the number of shared peptides for each protein,
#' #' * nSPec: the number of specific peptides for each protein.
#' #' 
#' #' Each row of these three vectors represent a protein. Thus, the length of these vectors is equal 
#' #' to the number of proteins.
#' #' 
#' #' @author Samuel Wieczorek
#' #' 
#' #' @examples
#' #' Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
#' #' obj <- Exp1_R25_pept[seq_len(1000),]
#' #' obj <- addListAdjacencyMatrices(obj, 2)
#' #' X <- GetAdjMat(obj[[2]])$all
#' #' n <- GetDetailedNbPeptides(X)
#' #' 
#' #' @export
#' #' 
#' GetDetailedNbPeptides <- function(X){
#'   
#'   n <- rowSums(t(as.matrix(X)))
#'   
#'   return(n)
#'   
#' }



#' 
#' 
#' #' Method to aggregate peptides into proteins with the sum of the quantitative data per conditions.
#' #' 
#' #' @title aggregate peptides into proteins with the sum of the quantitative data per conditions.
#' #'  
#' #' @param qPepData A data.frame of quantitative data
#' #' 
#' #' @param X An adjacency matrix
#' #' 
#' #' @return A matrix containing the quantitative aggregated data for proteins.
#' #' 
#' #' @author Samuel Wieczorek
#' #' 
#' #' @examples
#' #' library(QFeatures)
#' #' Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
#' #' obj <- Exp1_R25_pept[seq_len(1000),]
#' #' obj <- addListAdjacencyMatrices(obj, 2)
#' #' X <- GetAdjMat(obj[[2]])$all
#' #' n <- inner.sum(assay(obj[[2]]), X)
#' #' 
#' inner.sum <- function(qPepData, X){
#'   qPepData[is.na(qPepData)] <- 0
#'   Mp <- t(X) %*% qPepData
#'   return(Mp)
#' }
#' 



#' Method to aggregate peptides into proteins with the mean of the quantitative data per conditions.
#' 
#' @title Aggregate peptides into proteins with the mean of the quantitative data per conditions. 
#' 
#' @param qPepData A data.frame of quantitative data
#' 
#' @param X An adjacency matrix
#' 
#' @return A matrix containing the quantitative aggregated data for proteins.
#' 
#' @author Samuel Wieczorek
#' 
#' @examples
#' library(QFeatures)
#' Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
#' obj <- Exp1_R25_pept[seq_len(1000),]
#' obj <- addListAdjacencyMatrices(obj, 2)
#' X <- GetAdjMat(obj[[2]])$all
#' inner.mean(assay(obj[[2]]), X)
#' 
inner.mean <- function(qPepData, X){
  
  X <- as.matrix(X)
  
  Mp <- inner.sum(qPepData, X)
  Mp <- Mp / GetNbPeptidesUsed(qPepData, X)
  
  return(Mp)
}


